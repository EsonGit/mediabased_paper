%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: pulse shaping.pdf
%%Creator: Adobe Acrobat 10.1.13
%%For: smseifi
%%CreationDate: 2015-04-14, 7:55 PM
%%BoundingBox: 0 0 720 540
%%HiResBoundingBox: 0 0 720 540
%%CropBox: 0 0 720 540
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 599 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2015-04-14T23:55Z"
   xmp:CreatorTool="PowerPoint"
   xmp:ModifyDate="2015-04-14T23:55Z"
   pdf:Keywords=""
   pdf:Producer="Mac OS X 10.10.2 Quartz PDFContext"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -540 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 540 li
720 540 li
720 0 li
cp
clp
0 .000197651 mo
720 .000197651 li
720 540 li
0 540 li
0 .000197651 li
false sop
0 0 0 0 cmyk
ef
gsave
85.2584 237.884 mo
218.252 237.884 li
218.252 157.778 li
85.2584 157.778 li
85.2584 237.884 li
clp
218.252 237.884 mo
85.2584 237.884 li
85.2584 205.854 li
101.782 205.854 li
101.782 197.791 li
218.252 197.791 li
218.252 237.884 li
218.252 194.791 mo
101.782 194.791 li
101.782 190.8 li
93.5137 190.8 li
93.5137 190.291 li
94.2636 190.291 li
94.2636 185.791 li
93.5137 185.791 li
93.5137 184.291 li
94.2636 184.291 li
94.2636 179.791 li
93.5137 179.791 li
93.5137 178.291 li
94.2636 178.291 li
94.2638 173.791 li
93.5137 173.791 li
93.5137 172.291 li
94.2638 172.291 li
94.2638 167.791 li
93.5137 167.791 li
93.5137 166.291 li
94.2638 166.291 li
94.2638 161.791 li
93.5137 161.791 li
93.5137 160.291 li
94.2638 160.291 li
94.2638 157.778 li
218.252 157.778 li
218.252 194.791 li
93.5137 190.8 mo
85.2584 190.8 li
85.2584 157.778 li
92.7638 157.778 li
92.7638 160.291 li
93.5137 160.291 li
93.5137 161.791 li
92.7638 161.791 li
92.7636 166.291 li
93.5137 166.291 li
93.5137 167.791 li
92.7636 167.791 li
92.7636 172.291 li
93.5137 172.291 li
93.5137 173.791 li
92.7636 173.791 li
92.7636 178.291 li
93.5137 178.291 li
93.5137 179.791 li
92.7636 179.791 li
92.7636 184.291 li
93.5137 184.291 li
93.5137 185.791 li
92.7636 185.791 li
92.7636 190.291 li
93.5137 190.291 li
93.5137 190.8 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[133.32 0 0 80.52 85.2585 302.116 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 202 
/H 122 
/M[202 0 0 -122 0 122 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 202 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 202 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 202 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 202 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&i;`lBUB$S[!3PYh
JcNpn!,T4HJcPcM!)&m`S,iTRkl?;8ciF*J[/bm\!c2ZQJcN=]s%CQ9JcP0<s694W!9p9ZU&b4qp&G)p
mf7q>ec>_dp&G)/])[`hs%E1gr;ZgjLB,Kts697Xros.Ws67u4JcPfNs/l"qriPnps/hmnZiL,BpAk2/
pAk50l2ZD9kQ(WUpAk1cpAk4d[K)ius697X!pK^Lp]1<XJcO0us/l"q!j)I)p]1;qblEIus(q]8q#CJ4
!,VE1rbRu&\cDb'pAb7f!)*(er_);PJcP3=s697X!pK^Lp](B[!9p]fUB(=rpAb8s!3Q"r!j)I)qZ)3J
f)YhepAb82!,VE1!c.jQ`rM%us%E.f"98Ep!)*(e!_WMdWrT'us697X!pK^Lp](B[!9s1WJcOR+s/l"q
!j)I)p](At!3O*<OT>DtpAb82!,VE1!c.jQNW@#us%E(d!_WMdp](@g!)(uFJcPTHs697X!pK^Lp](B[
!9p<[XoSL(pAb8s!3Q"r!j)I)n,S%?iW0!ppAb82!,VE1!c.jQ]E"8us%E(d!_WMdqZ-Tq!_WMdL]GTu
ros1X!pK^Lp](B[!9s4X!9r>?JcPfNriPqq!j)I)p](At!3Ptq!3N7$ZiL)Ap](A3!,VE1!c.jQpAb20
o`0RDkQ(TTp](@g!)*(e!_WMdpAb1d_#UG7s697X!pK^Lp](B[!9s7Y!pK^LpAk6XNW@l8s/l"q!j)I)
p](At!3Q"r!j)I)pAk5qf`708s(qE0")IsR!;QTrC]J;H!!6s:D"dr0Co%-O!<5^d!!5dn9DAJg9)qW[
!!5dn9D8Gd9CMq5!;Z]ql1Y/ZklBuC!!;Bbl1b5[klBuB!<;;r!3ZD&XnMesXT5Ku!!98&XnVktXT5L#
!;uotXbZu;!<6m0!!6s:D"mu3C]J;H!!6s:D"dr0CsrBO!<5^d!!5dn9DSVk!!#Xl9DAJg9)qWZ!<5^$
!42b+l1b5\l0/34p](B[!9s7Y!pK^Lp]1?Y!9o+9kQ(Xbp](DuXT5Ku!!98&XnVktXT5Ku!<0+G!1a,i
D"mu4Chs)fp](A3!,VE1!c.jQp]1;0RK1_8s%E+e"%u8e9DAJg9)qW[!!5dn9DAMd9B?/.!<;<`!;ZZt
kl:_Jq#CN]klBuC!!;Bbl1b5[klBtQ!4i11XnVkuXT/@'q#CN!XT5Ku!!98&XnVktXT5L$!.k4=!<6m1
!!@$;!,VH2")McRD"mu3C]J;H!!6s:CrcUO!<5^e!!>jo!)*+f"%u8e9D\_g!!5dn9DAJg9)qVL!7q5N
l1b5\kl:_Jq#CN]!!)9Y!!;Bbl1b5[klBu*!/ppXXn_r"!3H5$Xn_r!XT/@'p](At!3Q"r!j)I)WrTp8
s(qH1")Ir;D#"&5C]FHOp](A3!,VE1!c.jQp&K[EoDnnap](Ch!!#[f!!>jo!)*(e!_WMdp](@g!)(0/
W;ut_p](E\!!)9Z!!DHc!9s7Y!pK^Lp](B[!9oLDh#RJWp](Du!!'.s!!B>'!3Q"r!j)I)p](At!3OoS
OoYMup](G5!!$g8q>^V6!!$j1!!6s:D"mu3C]J:J!6,$=9DAJh9)nrbq#CLi!!#[e!!5dn9DAJg9)qWS
!.k4J!<26X!!DHc!9s:Z"6fdcl1b5[klBuC!!;Bbl+@##!<0+q!!B>'!3Q%s"0DP'XnVktXT5L#!<)s"
XT5JZ!9=.ZD"mu4C]FHOq#CM5!!$j1!!6s:D"mu3C]J;#!1<id9DAJh9)nrbq>^Wu9)nrbp](@g!)*(e
!_WMd[fEf9"6fgMl1k;]kl:_Jq#CN]!!)9Y!!DHcl08!D!U0Ral%9!#!!B>'Xf_C!"0DP'Xn_r!XT/@'
p](Du!3NC!!!98&Xj-p<!!@$;Ci&nI")Ir;D#"&5C]FHOp](D4!,QKI!!6s:Cmk@P!!>jo92#'\"%rUo
9DJPi9)nrbp](Ch!)#u\!!5dn9B?//!!MNd!9jL[!!DHc!9s:Z"6fdcl1k;^l0/0Jl1k;\klBtQ!4r45
XT/@'q#CN!!!'.s!!B>'!3Q%s"Ked+!3Q%s!j)I)quD<Kmf3H+!!$j2!!@$;!,VH2")Ir;D#"&6Chs(O
D#"&4C]J:m!2KSs9)nrbq#CLi!!#[f!!>jo!)*1h"onWr9)nrbq#CIh!)&OVfDl$<!!)9Z!!DHc!9s:Z
"6fdcl1k;Zl2CY_l1k;]klBu4p]1?YlMunE"0DP'Xni##!3H5$Xn_r!XT/@'q#CDsrVur#q#CN!!3NBu
!<911!5SX;C]FHOq#CM5!!$j2!!@$;!,VH2!,VW7!,VH2")IsRD"mu1C]J:(!;-<o9)nrbq#CLi!!#[f
!!>jo!)*+f!)*:k!)*+f"%rVe9DAMe9?mOF!!)9X!!DHc!9s:Z"6fdcl1k;^kl:_Jl1tA[l2CY_l1k;]
kl:_Jp]1?YRK2RP!3Ptq"0DP'Xn_r!XT/@'q#CQ"!!'.'q>^MtrVur#q#CN!!!'.r!<91_!1j/jD"do3
C]FHOq#CP6!!$g8q>^Y7!!$hOq>^M3rVuq7q#CM5!!$j1!<6l?!7CiI9D8Dg9)nrbq#CLi!!#[f!!Gpp
!)#u]!!#[k!!#[f!!>jo!)*(es%E7iLB.A=rW)fq"6fdcl1k;]kl:_Jq#CEZrVur_q>^N[rVur_q#CN]
!!)9Y!<;<)!4r72XnVkuXT/@'q#CN!!!'.s!!'/#!!'.t!!'/#!!'/!!<)s#XT/@'p]1>rPQ:.Ps(qH1
")Ir;D#"&5C]FHOq#CD2rVuq7q>^M3rVuq7q#CM5!!$j1!<6lm!2KVp9DAJh9)nrbq#CLi!!#[g!!*'m
rVupkq>^LgrVupkq#CLi!!#[e!<5^0!5JU7l1b5\kl:_Jq#CN]!!)9Z!!)9_!!)9[!!)9_!!)9Z!!2<a
!<DBZ!<;;E!;$9kXnVkuXT/@'q#CN!!!'.s!!'/#!!'.t!!'/#!!'.s!!B>'!3Q"rs/juTW;us7p](D4
!!$j2!!@$;!,VH2!,VW7!,VK3!,VW7!,VH2")Ir;D"n#1Co.3g!<5^e!!>jo!)*+f"%rUo9DJPf9E"nk
9DSVg9E"nk9DJPi9)nrbp]1=enGnaQros1X"R,mdklCP["6fdcl1k;Zl2CY_l1tA[l2CY_l1k;]kl:_J
q#LEY]`?(QriPqq"0DP'Xn_r!XT/@'q#CDsrVur#q>^MtrVur#q#CN!!!'/"!;uosXbd&T!<-g0!!@$;
!,VH2")Ir;D#"&2D#OD7D#+,3D#OD7D#"&5C]FHOq#LD1e,Z]Qr_*"d"%rUo9DJPi9)nrbq#CCfrVupk
qu?cu!)*:k!)*+f"%rUo9DJSe9:u:G!!;Bbl1b5\kl:_Jq#CN]!!)9Z!!)9_!!)9[!!)9_!!)9Z!!DHc
!9s:Z"6fgMl0JD<!!98&XnVkuXT/@'q>^WuXT/@'q#CDsrVur#q>^MtrVur#q#CN!!!'.s!!B>'Xf])5
bl@f]!,VE1")Ir;D#"&5C]FHOq#CD2rVuq7q>^M3rVuq7q#CM5!!$j2!!-m9s(m>g!_WMdp](Ch!!#[f
!!>jo!)*+f!)*:k!)*.g!)*:k!)*+f"%rUo9DJPi9)qUXcN(BR!pK^Lp](E\!!)9Z!!DHc!9s:Z!9sI_
!9s=[!9sI_!9s:Z"6fdcl1k;]kl:_JRfM^R!j)I)p](Du!!'.s!!B>'!3Q%s!3Q5#!3Q(t!3Q5#!3Q%s
"0DP'Xn_r!XT/@'joD"R!c.jQp](D4!!$j2!!I*<!,MZ3!!$j7!!$j3!!$j7!!$j2!!@$;!,VH2")Ir;
CpF&i!!5dn9DAJh9)nrbq#CLi!!#[f!!#[k!!#[g!!#[k!!#[f!!>jo!)*+f"%rUo9DnjH!!;Bbl2C\[
!!DHc!9s:Z"R,mdl08$E!9sI_!9s=[!9sI_!9s=["R5.N!9s:Z"6fdcl,`q<!!98&XnVkuXT/@'q#CQ"
!!'.'q>^MtrVur#q>^MtrVur#qu?p$!3N@'!3Q%s"0DP'Xd&nU!!6s:D"mu4C]FHOq#CP6!!$hOq>^M3
rVuq7q>^M3rVuq7q>^Y7C]FHOq#CM5!!$in!2TYs9)qW[!!>jo!)*+f"A8^p92#-^!<>dl!!#[g!!#[k
!!#[g!!Gqf!!#[f!!>jo!)(61_#OQ$!9s7Y"6fdcl1k;Zl2CY_l1tA[l2CY_l1tA[l2CY_l1tA]kl:\a
!9s:Z"6fdcl&Yo<!!98&XnVkuXT/@'q#CDsrVur#q>^MtrVur#q>^MtrVur#q>^MtrVur#q#CN!!!'.U
!3-##C]J;H!!@$;!,VH2!,VW7!,VK3!,VW7!,VK3!,VW7!,VK3!,VW7!,VH2")Ir;Co79i!!5dn9DAJh
9)nrbq#CCfrVupkq>^LgrVupkq>^LgrVupkq>^LgrVupkq#CLi!!#[_!0[BbklBu4q#CQ^!!)6`q>^N[
rVur_q>^N[rVur_q>^N[rVur_q>^N[rVur_q#CN]!!)8t!65'AXT5K*q#CN!!!'.s!!'/#!!'.t!!'/#
!!'.t!!'/#!!'.t!!'/#!!'/"!;um"XT/@'M?*MR")IsRD#"&5C]FHOq#CD2rVuq7q>^M3rVuq7q>^M3
rVuq7q>^M3rVuq7q#CM5!!$ic!3cG*9)qUXq#CLi!!#[f!!#[k!!#[g!!#[k!!#[i!!3-#9E"nk9DSVg
9E"nk9DJPi9)nrbT`F-R"6fdcl1k;]kl:_Jq#CEZrVur_q>^N[rVur_q>^N[rVur_q>^N[rVur_q#CN]
!!)9M!1<fhXT/@'q#CN!!!'.t!!*)%rVur#q>^MtrVur#q>^MtrVur#q>^MtrVur#q#CN!!!'.2!6kKG
C]FHOq#CM5!!$j2!!$j7!!$j3!!$j7!!$j3!!$j7!!$j3!!$j7!!$j2!!-m9!<?qh!!>jo!)*+f"%rUo
9DJPf9E"nk9DSVg9E"nk9DSVg9E"nk9DSVg9E"nk9DJPi9)nrbcN(BR"6fdcl1k;]kl:_Jq#CEZrVur_
q>^N[rVur_q>^N[rVur_q>^N[rVur_q#CN]!!)9Y!<;;\!9sOdXT/@'q#CN!!!'.s!!'/#!!'.t!!'/#
!!'.t!!'/#!!'.t!!'/#!!'.s!!B>'!3Q"rs/kekT)\t0!!$j2!!@$;!,VH2!,VW7!,VK3!,VW7!,VK3
!,VW7!,VK3!,VW7!,VH2")Ir;D"n#1CqTht!!>jo!)*+f"%rUo9DJPf9E"nk9DSVg9E"nk9DSVg9E"nk
9DSVg9E"nk9DJPi9)nrbr;c`qs%Ad\!9s4X"mH!ekl:_]!!MQN!!)9Z!!)9_!!)9[!!)9_!!)9[!!)9_
!!)9[!!)9_!!)9Z!!DHc!9s7Ys68#5`rH+ApAb;t!!'.t!!KF+!!'.s!!'/#!!'.t!!'/#!!'.t!!'/#
!!'/!!!3-#Xo8;#Xn_r!XT/@'p]1>rTE+ih!,VB0")Ir;D#+,7Chs(OD#"&2D#OD7D#+,3D#OD7D#+,3
D#OD7D#+,3D#OD7D#"&5C]FHOp]1>1lN"-h!)*%d"%rUo9DSVk91o6b9DJPf9E"nk9D\\i!)*:k!)*.g
!)*:k!)*.g!)*:k!)*+f"%rUo9DAMe9@!U^!<;<Y!!DHc!9s=[!9sI_!9s=[s69L_!9s=[!9sI_!9s=[
!9sI_!9s=[!pK[b!<DB[!!DHc!9s7Ys66!Q!W]@)p](Du!!'.t!!'/#!!'.t!<92#!!'.t!!'/#!!'.t
!!'/#!!'.t!!'/#!!'.s!!B>'!3Q"rs/kD`[/g5Cp](D4!!$j3!!$j7!!$j3!<6m7!!$j3!!$j7!!$j3
!!$j7!!$j3!!$j7!!$j2!!@$;!,VE1s(nt@klC`Vp](Ch!!#[g!!#[k!!#[g!<5^k!!#[g!!#[k!!#[g
!!#[k!!#[g!!#[k!!#[f!!>jo!)*(es%E:jT)elTp](E\!!)9[!!)9_!!2<aqZ$W\r;Zi^q>^N[rVur_
q>^N[rVur_q>^N[rVur_q#CN]!!)9Y!<26*!7LrIXnVkuXT/@'q>^MtrVur#q>^Mtr;Zi"q>^MtrVur#
q>^MtrVur#q>^MtrVur#r;ccr"0DP'XnVnqXdfCjD#OG3!!@$;!,VK3!,VW7!,VK3!,VT6!,VK3!,VW7
!,VK3!,VW7!,VK3!,VW7!,VH2")Ir;D"n#0CuGB,!<,Xd!!>jo!)*.g!)*:k!)*.g!)*7j!)*.g!)*:k
!)*4i!WW3nrVupkq>^LgrVupkq#CLi!!#[e!<,Wn!:TsiklBuD!!MQN!!)9[!!)9_!<;<\!!)9^!!)9[
!!)9_!!)9[!!)9_!!)9[!!)9_!!)9Z!!DHc!9s:Z"6o%Ml1b7T!!98&Xn_r"XfVR'Xni"tXo8>#Xnr(u
Xo/5"Xni"tXo8;#Xni"tXo8;#Xni"tXo8;#Xn_r!XT/@'q#CN!XT5KA!8.>RC]J;I!!I+S!!$j3!!$j7
!<6m4!!$j6!!$j3!!$j7!!$j3!!$j7!!$j3!!$j7!!$j2!!-m9!<?s3!!@%R!,S/*!_WMdq#CCf"%rUo
9DSVg9E"qk9D\\h9Dnhj9DSVg9E"nk9DSVg9E"nk9DSVg9E"nk9DJPi9)nrbq#CLi9)qW>!5\^;klBuD
!!)9_!!)9[!!)9^!!)9\!!)9^!!)9[!!)9_!!)9[!!)9_!!)9[!!)9_!!)9Z!!DHc!9s:Z"6fdcl)+OT
!!98&Xn_qsXo8;#Xni"tXo/5"Xnr(uXo/5"Xni"tXo8;#Xni"tXo8;#Xni"tXo8;#Xn_r!XT/@'q#CN!
!!'.l!36)$C]J;I!!$j7!!$j3!!$j6!!$j4!!$j6!!$j3!!$j7!!$j3!!$j7!!$j3!!$j7!!$j2!!@$;
!,VH2")Ir;Cq]o,!!5dn9DJPf9E"nk9DSVg9Dnhj9D\\h9Dnhj9DSVg9E"nk9DSVg9E"nk9DSVg9E"nk
9DJPi9)nrbr;ccr"%rUo9:Pt`klBuD!!)9_!!;Bb!;lfsl2:S^l2(G\l2:S^l2(J\l2CY_l1tA[l2CY_
l1tA[l2CY_l1tA_l0/0Jl1k;]kl:_JeH!Yj!j)I)q#CDsrVur#q>^Mtr;Zi"qZ$Vur;Zi"qZ-YurVur#
q>^MtrVur#qu?cu!3Q5#!3Q(t"Ked+!3Q%s"0DP'Xe>am!!6s:D#"&2D#OD7D#+,3D#F>6D#424D#F>6
D#454D#OD7D#+,3D#OD7D#+,3D#OD7D#+,7Chs(OD#"&5C]FHOli=9j!_WMdq#CCfrVupkq>^Lgr;Zgj
qZ$Uhr;ZgjqZ-XhrVupkq>^LgrVupkq>^LgrVupkq>^Xk9)nrbq#CLi!!#[=!6kKFklBuD!!)9_!!)9[
!!)9^!!)9\!!)9^!!)9\!!)9^!!)9[!!)9_!!)9[!!;Bb!!3/bl2(G\l2CY_l1k;]kl:_JS,`Vm!3Q%s
!3Q5#!3Q(t!3Q2"!3Q+u!3Q2"!3Q+u!3Q2"!3Q(t!3Q5#!3Q(t!3Q5#s/l.u!3Q5#!3Q%s"0DP'Xlf\m
!!6s:D#"&2D#OD7D#+,3D#F>6D#424D#F>6D#424D#F>6D#+,3D#OD7D#+,3D#OG7D#424D#OD7D#"&5
C]FHOZN07j!_WMdq#CCfrVupkq>^Lgr;ZgjqZ$Uhr;ZgjqZ$Uhr;Zgjq>^LgrVupkq>^LgrW)skqZ$Uh
rVupkq#CLi!!#[k!1s5nklBu4q>^N[rVur_q>^N[r;Zi^qZ$W\r;Zi^qZ$W\r;Zi^q>^N[rVur_q>^N[
r;Zi^qZ$W\rW)u_q>^W^!!)9+!7LoMXT5K*q>^MtrVur#q>^Mtr;Zi"qZ$Vur;Zi"qZ$Vur;Zi"q>^Mt
rVur#q>^Mtr;Zi"rW)ot!3Q5#s/l+t"0DP'Xdf@pC]J9f!!)os!,VW7!,VK3!,VT6!,VN4!,VT6!,VN4
!,VT6!,VK3!,VW7!,VK3!,VT6!,VN4!,VW7s(qN3")Ir;CuGB,!!>jo92#*]!)*:k!)*.g!)*7j!)*1h
!)*7j!)*1h!)*7j!)*4i!WW3nrVupkq>^Lgr;ZgjqZ$UhrW)skq>^Uj!!#Zo!:^$ll0/0Jl1tA[l2CY_
l1tA[l2:S^l2(G\l2:S^l2(G\l2:S^l1tA[l2CY_l1tA[l2:S^l2(G\l2:S^l1tA^kl:_Jp]./k"Ked+
!3Q(t!3Q5#!3Q(t!3Q2"!3Q+u!3Q2"!3Q+u!3Q2"!3Q(t!3Q5#!3Q(t!3Q2"!3Q+u!3Q2"!3Q(t"0DP'
Xi(4n!!I+S!!$j3!!$j7!!$j3!!$j6!!$j4!!$j6!!$j4!!$j6!!$j3!!$j7!!$j3!!$j6!!$j4!!6s:
!!3-#D#+,6C]FHOSH&dc9)nrbq>^LgrVupkq>^Lgr;ZgjqZ$Uhr;ZgjqZ$Uhr;Zgjq>^LgrVupkq>^Lg
r;ZgjqZ$Uhr;Zgjq>^Uj!!#[H!5ed:l2CY_l1tA[l2CY_l1tA[l2:S^l2(G\l2:S^l2(G\l2:S^l1tA[
l2C\_l2(G\l2:S^l2(G\l2:S^l1tA^kl:_Jp]1?YZ2jV!!3Q5#!3Q(t!3Q5#!3Q(t!3Q2"!3Q+u!3Q2"
!3Q+u!3Q2"!3Q(t!3Q5#s/l.u!3Q2"!3Q+u!3Q2"!3Q(t"0DP'XnVnrXo/7$!!$j7!!$j3!!$j7!!$j3
!!$j6!!$j4!!$j6!!$j4!!$j6!!$j3!!$j7!<6m4!!$j6!!$j4!!$j6!!$j3!!@$;!,VE1s(odWhuEaM
rVupkq>^LgrVupkq>^Lgr;ZgjqZ$Uhr;ZgjqZ$Uhr;Zgjq>^LgrW)skqZ$Uhr;ZgjqZ$Uhr;ZgjrW)ls
"%rUo9DAMe9;hgjl2CY_l1tA[l2CYakl:_]!!)9^!!)9\!!)9^!!)9\!!)9^!!)9[!!)9^!!)9\!!)9^
!!)9\!!)9^!!)9[!!MNd!9rbD!<26A!6G3@Xo8;#Xni"tXo8;#Xni"tXo/5"Xnr(uXo/5"Xnr(uXo/5"
Xni"tXo/5"Xo/5$!!'/"!!'.u!!'/"!!'.t!!KD(!3NC!!<0+&!;ultD#OD7D#+,3D#OD7D#+,3D#F>6
D#424D#F>6D#424D#F>6D#+,3D#F>6D#424D#F>6D#424D#F>6D#+,7C]FHOD#")1D"n"9!!#[k!!#[g
!!#[k!!#[g!!#[j!!#[h!!#[j!!#[h!!#[j!!#[g!!#[j!!#[h!!#[j!!#[h!!#[j!!#[g!!Gpp!)#u\
!<,XH!8.AOl1k;Zl2CY_l1tA[l2C\_l2(G\l2:S^l2(G\l2:S^l2(G\l2:S^l2(J\l2:S^l2(G^kl:\b
!!)9\!!)9^!!)9[!!)9_!!)9Z!!;Bbl*LHiXn_qsXo8;#Xni"tXo8>#Xnr(uXo/5"Xnr(uXo/5"Xnr(u
Xo/5"Xnr+uXo/5"Xnr(uXo/5"Xnr(uXo/5"Xni"tXo8;#Xn_quXT5Kp!5\a8D#"&2D#OD7D#+,3D#OG7
D#424D#F>6D#424D#F>6D#424D#F>6D#454D#F>6D#424D#F>6D#424D#F>6D#+,3D#OD7D#"&4C]J:d
!;6El9DJPf9E"nk9DSVg9E"qk9D\\h9Dnhj9D\\h9Dnhj9D\\h9Dnhj9D\_h9Dnhj9D\\h9Dnhj9D\\h
9Dnhj9DSVg9E"nm9)nth!!5dn9=+[#klBuD!!)9_!!)9[!!)9^!!)9\!!)9^!!)9\!!)9^!!)9\!!)9^
!!)9\!!)9]!!)9\!!)9^!!)9\!!)9^!!)9[!!)9_!!)9Z!!;Bbl.,jl!!98&Xn_qsXo8;#Xni"tXo/5"
Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo&/!Xnr(uXo/5"Xo8>"!!'/"!!'.t!!'/#!!'.s!!98&
XgA'0C]J;I!!$j7!!6s:!;lfsD#F>6D#424D#F>6D#424D#F>6D#424D#F>6D#424D#=85D#424D#F>6
D#424D#F>6D#+,3D#OD7D#"&4C]J;=!6>-A9)qW\!!#[k!!#[g!!#[j!!#[h!!#[j!!#[h!!#[j!!#[h
!!#[j!!#[i!!*'mqu?^iqZ$Uhr;ZgjqZ$Uhr;Zgjq>^LgrVupkq#CIh!)'j&qu?f_!9s:Z!9sI_!9s=[
!9sF^!9s@\!9sF^!9s@\!9sF^!9s@\!9sF^!9s@\!9sC]!9s@\!9sF^!9s@\!9sF^!9s@\s69L_!9s=[
!9jRL!9pij!j)I)q#CDsrVur#q>^Mtr;Zi"qZ$Vur;Zi"qZ$Vur;Zi"qZ$Vur;Zi"qZ$Vuqu?`!qZ$Vu
r;Zi"qZ$Vur;Zi"qZ-YurVur#q>^W"XT5KM!9F1^C]J;I!!$j7!!$j3!!$j6!!$j4!!$j6!!$j4!!$j6
!!$j4!!$j6!!$j4!!$j5!!$j4!!$j6!!$j4!!6s:!!3-#D#454D#OD7D#+,6Chs)fZiC/#!)*+f!)*:k
!)*.g!)*7j!)*1h!)*7j!)*1h!)*7j!)*1h!)*7j!)*1h!)*4i!)*1h!)*7j!)*1h!)*7j!)*1hs%E=k
!)*.g"%u8e9BQ<$!!DKM!9s:Z!9sI_!9s=[!9sF^!9s@\!9sF^!9s@\!9sF^!9s@\!9sF^s69F]!9sF^
!<DB]!!)9^!!)9\!!)9^!!)9\!!)9^!!)9[!!DHc!9plks/c;%Xn_qsXo8;#Xni"tXo/5"Xnr(uXo/5"
Xnr(uXo/5"Xnr(uXo/8"Xo&/!Xo&/!Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo/5"Xni#"XT/@'rW'G.")McR
D#"&2D#OD7D#+,3D#F>6D#424D#F>6D#424D#F>6D#424D#FA6D#=85D#=85D#424D#F>6D#424D#F>6
D#424D#F>6D#+,6C]FHOaoLc."%u8e9DJPf9E"nk9DSVg9Dnhj9D\\h9Dnhj9D\\h9Dnhj9D\\h9Dnkj
9Debi9Debi9D\\h9Dnhj9D\\h9Dnhj9E"qj!!#[j!!#[g!!>jo!)'^""6fdcl1k;Zl2CY_l1tA[l2:S_
klCV]!9sF^!9s@\!9sF^!9s@\!9sC]!9sC]!9sC]!9s@\!9sF^!9s@\!9sF^!9s@\!9sF^!9s=["R,md
l071-eGo]R!!'.s!!'/#!!'.t!!'/"!!'.u!!'/"!!'.u!!'/"!!'.u!!'/!!!'/!!!'/!!!'/"!!3-#
Xo/5"Xnr(uXo/5"Xnr(uXo/5"Xni##XT/@'XgS33C]FHOr;ccr!,VW7!,VK3!,VT6!,VN4!,VT6!,VN4
!,VT6!,VN4!,VQ5!,VQ5!,VQ5!,VN4!,VT6!,VN4!,VT6!,VN4!,VT6!,VK3"De&<Ci&nI^&S7.!!#[f
!!#[k!!#[g!!#[j!!#[h!!#[j!!#[h!!#[j!!#[h!!#[i!!#[i!!#[i!!#[h!!#[j!!#[h!!#[j!!#[h
!!#[j!!#[g!!Gpp!)#u@!87DUkl:_Jl1tA[l2CY_l1tA[l2:S^l2(G\l2:S^l2(G\l2:S^l2(G\l21M]
l21M]l21M]l2(G^kl:\b!!)9\!!)9^!!)9\!!)9^!!)9[!!)9_!!)8l!!KD(!3NC"!!'/#!!'.t!!'/"
!!'.u!!'/"!!'.u!!'/"!!'.u!!'/!!!'/!!!'/!!!'.u!!'/"!!'.u!!'/"!!'.u!!'/"!!'.t!!'/#
!!'.n!5ed>C]FHOD#+,3D#OD7D#+,3D#F>6D#424D#F>6D#424D#F>6D#424D#F>7!,VQ5!,VQ5!,VN4
!,VT6!,VN4!,VT6!,VN4!,VT6!,VK3!,VW7!,TFNpAb=h!!#Ybq>^LgrVupkq>^Lgr;ZgjqZ$Uhr;Zgj
qZ$Uhr;ZgjqZ$Uhqu?^iqu?^iqu?^iqZ$Uhr;ZgjqZ$Uhr;ZgjqZ$Uhr;Zml!!)os!)*:k!)'a#!9sI_
!9s=[!9sI_!9s=[!9sF^!9s@\!9sF^!9s@\!9sF^!9s@\!9sC]!9sC]!9sC]!9s@\!9sF^!9s@\!9sF^
!9s@\!9sF^!9s=[!9sI_!9r)8huEbZrVur#q>^MtrVur#q>^Mtr;Zi"qZ$Vur;Zi"qZ$Vur;Zi"qZ$Vu
qu?`!qu?`!qu?`!qZ$Vur;Zi"rW)ot!3Q2"!3Q+u!3Q2"!3Q(t!3Q5#!3N[0!,VW7!,VK3!,VW7!c.i:
qu?_5r;Zh6qZ$V4r;Zh6qZ$V4r;Zh6qZ$V4qu?_5qu?_5qu?_5qZ$V4r;Zh6qZ$V4r;Zh6qZ$V4r;Zh6
q>^M3rVuq7mJt?/!)*:k!)*.g!)*:k!)*.g!)*7j!)*1h!)*7j!)*1h!)*7j!)*1h!)*4i!)*7j!<>dj
!!#[h!!#[j!!#[h!!#[j!!#[h!!#[j!!#[g!!#[k!!#['!;ultl2CY_l2(J\l2C\_l21P]l2:S^l2(G\
l2:S^l2(G\l2:S^l2(G\l21M]l21M]l21M]l21P]l2:S^l2(G\l2:S^l2(G\l2:S^l1tA[l2CY_l1k>Y
l+m?"Xo8;#Xnr+uXo8>#Xo&2!Xo/5"Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo&/!Xo&/!Xo&/!Xo&2!Xo/5"
Xnr(uXo/5"Xnr(uXo/5"Xni"tXo8;#Xn_trXkWp=!!$j7!!$j4!<6m7!<6m5!<6m6!!$j4!!$j6!!$j4
!!$j6!!$j4!!$j5!!$j5!!$j5!!$j5!<6m6!!$j4!!6s:!!3-#D#424D#F>6D#+,3D#OD7D#")1Cr$)O
9E"nk9D\_h9E"qk9Deei9Dnhj9D\\h9Dnhj9D\\h9Dnhj9D\\h9Debi9Debi9Debi9Deei9Dnhj9D\\h
9Dnhj9D\\h9Dnhj9DSVg9E"nk9DJSe9Ci/;!<26Y!!)9_!!)9\!!)9]!!)9]!!)9]!!)9\!!)9^!!)9\
!!)9^!!)9\!!)9]!!)9]!!)9^!!*)aqu?`]qu?`]qZ$W\r;Zi^qZ$W\r;Zi^qZ-Z\rVur_q#CK\!9q]-
riPtr!Nc>'!!'.u!!'/!!!'/!!!'/!!!'.u!!'/"!!'.u!!'/"!!'.u!!'/!!!'/!!!'/!!!'/!!!'/!
!!'.u!!'/"!!'.u!!'/"!!'.u!<92#!!98&!;c`tXT5KI!<-g1!!$j7!!$j4!!$j5!!$j5!!$j5!!$j4
!!$j6!!$j4!!$j6!!$j4!!$j5!!$j5!!$j5!!$j5!!$j5!!$j4!!$j6!!$j4!!$j6!!$j4!<6m7!!$j2
!!6s:Ct8U\!<,Xe!!#[k!!#[h!!#[i!!#[i!!#[i!!#[h!!#[j!!#[h!!#[j!!#[h!!#[i!!#[i!!#[i
!!#[i!!#[i!!#[h!!#[j!!#[k!<)ru9Dnhj9D\_h9E"nk9DJPh9)qW0!!DKM!9s=[s69L_!9s@\!9sC]
!9sC]!9sC]!U0U^!!)9^!!)9\!!)9^!<;<]!!)9]!!)9]!!)9]!!)9]!!)9]!!)9\!!)9^!!)9\!!)9^
!!)9\!!)9^!!)9[!!MQN!9rb9!9!n[XfVT*q>gPtrVur#qZ$Vuqu?`!qu?`!qu?`!qZ$Vur;Zi"qZ$Vu
r;cl"qu?`!qu?`!qu?`!qu?`!r;ZiuXo&/!Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo/5"Xni##XfVT*Xj-nK
Chs)fq>gP3rVuq7rW)ot!,VQ5!,VQ5!,VQ5!,VN4!,VT6!,VN4!,VT6s(qT5!,VQ5!,VQ5!,VQ5!,VQ5
!,VQ5!,VN4!,VT6!,VN4!,VT6!,VN4!,VT6!,VK3!,MaR!,QJs!!>ke!)*.gs%E=k!)*1h!)*4i!)*4i
!)*4i!)*1h!)*7j!)*1h!)*7js%E7i!)*4i!)*4i!)*4i!)*4i!)*4i!)*1h!)*7j!)*1h!)*7j!)*1h
!)*7j!)*.g"A;Af92"LLjo>PK!!)9JqZ$W\r;Zi^qZ$W\qu?`]qu?`]qu?`]quHc]r;Zi^qZ$W\qu?`]
qu?`]qu?`]qu?`]qu?`]qu?`]rW!!"!9s@\!9sF^!9s@\!9sF^!9s@\!9sF^!9s=[!9sI_!9qc/"K_Y(
Xf_I#!3Q2"!3Q+u!NcA#!!'/!!!'/!!!'/!!<92"!!'.u!!'/!!!'/!!!'/!!!'/!!!'/!!!'/!!!'/!
!!'.u!!'/"!!'.u!!'/"!!'.u!!'/"!!'.t!!'/#!!02%cN")a!!$hOqZ$V4r;Zh6qZ$V4qu?_5qu?_5
qu?_5quHb5r;Zh6qZ$V4qu?_5qu?_5r;ZiuD#=85D#=85D#=85D#=85D#424D#F>6D#424D#F>6D#424
D#F>6D#+,3D#OD7CsE"]9)o"n92#-^!)*7j!)*1h!)*4i!)*4i!)*4i!)*4is%E:j!)*1h!)*4i!)*4i
!)*4i!)*4i!)*4i!)*4i!)*4i!)*1h!)*7j!)*1h!)*7j!_WLnr;Zgjr;Zgjq>^LgrVupkcN+"0rVur_
qZ$W\r;Zi^qZ$W\qu?`]qu?`]qu?`]qu?`]qu?`]qZ$W\qu?`]qu?`]qu?`]qu?`]qu?`]qu?`]qu?`]
qZ$W\r;Zi^qZ$W\r;cl^qu?`]r;cl^qZ$W\rVur_q#LEYpAk3WqZ-!`s/l8#!3Q+u!3Q2"!3Q+u!3Q/!
!3Q/!!3Q/!!3Q/!!3Q/!!3Q+u!3Q/!!3Q/!!3Q/!!3Q/!!3Q/!!3Q/!!3Q/!!3Q5#rVur#r;Zi"qZ$Vu
r;cl"qu?`!r;cl"qZ$VurVur#q#LDrpAk2pk5bNurVuq7qZ$V4r;Zh6qZ$V4qu?b6!;ultD#=85D#=85
D#=85D#424D#=85D#=85D#=85D#=85D#=85D#=85D#=85D#424D#F>6D#424D#FA6D#=85D#FA6D#424
D#OD7D#+,3!<-g/!<-ft!<5^k!!#[h!!#[j!!#[h!!#[i!!#[i!!#[i!!#[i!!#[i!!#[h!!#[i!!#[i
!!#[i!!#[j!!*'mqu?^iqu?^iqu?^iqZ$Uhr;ZgjqZ$Uhr;cjjqu?^ir;cjjqZ$UhrVupkq#LCepAk1c
nc8XQq>^N[r;Zi^rW)ot!9sF^s69F]!9sC]!9sC]!9sC]!9sC]!9sC]!9s@\!9sC]!9sC]!9sC]!9sC]
!9sC]!9sC]!9sC]!9s@\!9sF^!9s@\!9sC]!9sC]!U0U_!!)9]!<;<_!<;<\!!MQN!9rbD!!DKM!9s%S
rN5nr!3Q2"!3Q+u!3Q2"s/l2!!3Q/!!3Q/!!3Q/!!3Q/!!3Q/!!3Q+u!3Q/!!3Q/!!3Q/!!3Q/!!3Q/!
!3Q/!!3Q/!!3Q+u!3Q2"!3Q+u!3Q/!!3Q/!!3Q/!!3Q/!s/l8#s/l.u"Ked+Xf_C!"0J[*Xn;\n!<$a1
!!$j6!!$j4!!$j6!<6m5!!$j5!!$j5!!$j5!!$j5!!$j5!!$j4!!$j5!!$j5!!$j5!!$j5!!$j5!!$j5
!!$j5!!$j4!!6s:!!3-#D#424D#=85D#=85D#=85D#=;5D#OG7D#428Chs)fD#"&5Chs)fnc8V]q>^Lg
r;ZgjqZ$Uhr;cjjqu?^iqu?^iqu?aj!;ult9Debi9Debi9D\\h9Debi9Debi9Debi9Debi9Debi9Debi
9Debi9D\\h9Dnhj9D\\h9Debi9Debi9Debi9Deei9E"qk9D\\m91o7X9*"eg"%u8e9Ci/`l2Lb`l2(G\
l2:S^l2(G\l21M]l21M]l21M]l21M]l21M]l21M]l21M]l2(G\l21M]l21M]l21M]l21M]l2:S_!9sC]
!9sC]!9sC]s69I^s69F]!9sC]!9sC]!9sC]!9sC]!9sC]!9s@\!9sI_s69C\s69"Qs/l;$s/l.u!3Q2"
!3Q+u!j)G&rVur#qu?`!qu?`!qu?`!qu?`!qu?`!qu?`!qZ$Vuqu?`!qu?`!qu?`!qu?`!qu?`!qu?`!
qu?`!quHc!r;cl"qu?`!qu?`!qu?`!qu?c"!;ultXo&/!Xnr(uXo8>#Xnr+uXmc>jD#XM8D#424D#F>6
D#424D#=85D#=85D#=85D#=85D#=85D#=85D#=85D#424D#=85D#=85D#=85D#=85D#=85D#=85D#=85
D#=;5D#FA6D#=85D#=85D#=85D#=85D#=85D#=85D#424D#OG7D#454D"%H)9E,"l9D\\h9Dnhj9D\\h
9Debi9Debi9Debi9Debi9Debi9Debi9Debi9D\\h9Debi9Debi9Debi9Debi9Debi9Debi9Debi9Deei
9Dnkj9E,"k!!#[i!!#[i!!#[i!!#[i!!#[i!!#[h!!#[k!<5^h!<5^b!<#4`l2<pJl2<pJl2<pJl23gI
l23gIl23gIl23gIl23gIl23gJks>86!9sDI!9sAH!9sDI!9sDI!9sDI!9sDI!9sDI!9sDI!9sDI!9sDI
!9sAH!9sDI!9sDI!9sDI!9sDI!9sDI!9sDI!9sDIs69JJs69JJ!9jLJrB^2YrU^&krU^&krU^&krU^&k
r:9ojr:9ojr:9ojr:9ojr:9ojr:9ojr:9ojr:9ojqssfir:9ojr:9ojr:9ojr:9ojr:9ojrUU']Xo.bj
Xo.bjXo%\iXo.bjXo.bjXo.bjXo.bjXo.bjXo.bjXo.ejXo7kkXo7kkXo7kd!<)6`D#N]"D#N]"D#N]"
D#ET!D#ET#D!UEdlMtc!lMtc!lMtc!lMtc!lMtc!lMtbulMtc!lMtc!lMtc!lMtc!lMtc!lMtc!lMtc!
lMtc!lMtbulMtc!lMtc!lMtc!lMtc!lMtc!lN(hfrTaH"r9OB!rTjK"rTjK"rTj4YrAO[KrAO[KrAO[K
rAO[Kr&+OJr&+OJr&+OJr&+OJr&+OJr&+OJr&+OJr&+OJq_eFIr&+OJr&+OJr&+OJr&+OJr&+OJr&+OJ
r&+OJr&+OJq_eFIr&+OJr&+OJr&+OJr&+OJr&+OJr&+OJr&4RJrAO[KrAO[KrAO<Ks69C\!9sF^!9s@\
!9sF^s69F]!9sC]!9sC]!9sC]!9sC]!9sC]!9sC]s69I^s69F]!9sC]!9sC]!9sC]!9sC]!9sC]!9sI_
!WW5bqu?`]qZ$W\qu?`]qu?`]qu?`]qu?`]qu?`]quHc]r;Zi^qZ-Z\rrE)`n,WKjqZ$Vur;Zi"qZ$Vu
r;cl"qu?`!qu?c"!;ultXo&/!Xo&/!Xo&/!Xo&2!Xo/8"Xo&/!Xo&/!Xo&/!Xo&/!Xo&/!Xo&/!Xo&/!
Xo&/!Xnr(uXo&/!Xo&/!Xo&/!Xo&/!Xo&/!Xo&/!XT5L%!!'.u!<92$!<91j!<6m4!!$j6!!$j4!!$j6
!<6m5!!$j5!!$j5!!$j5!!$j5!!$j5!!$j5!<6m6!<6m5!!$j5!!$j6!!*(9qu?_5qu?_5qu?_5qu?_5
qu?_5qZ$V4qu?_5qu?_5qu?_5qu?_5qu?_5quHb5r;Zh6qZ-Y4rrE(8n,WJ]qZ$Uhr;ZgjrW)ot!)*7j
s%E7i!)*4i!)*4i!)*4i!)*4i!)*4i!)*4is%E:js%E7i!)*4i!)*4i!)*4i!)*4i!)*4i!)*4i!)*4i
!)*1h!)*4i!)*4i!D<Fk!!#[i!!#[i!!#[i!<5^j!!#[h!<5^l!<5^`!<)0Y!<;<`!<;<\!!)9^!!)9\
!!)9]!!)9]!!)9]!!)9]!!)9]!!)9\!!)9^!!)9\!!)9]!!)9]!!)9]!!)9]!!)9]!!)9]!!)9]!!)9\
!!)9^!<;<]!!)9]!!)9]!!)9]!!)9\!!)9_!<;<[!<)0T!<)usXni%tXoAD$Xnr(uXo/5"Xnr(uXo&/!
Xo&/!Xo&/!Xo&/!Xo&/!Xnr(uXo/5"Xnr(uXo&/!Xo&/!Xo&/!Xo&/!Xo&/!Xo&/!Xo8;%!!'.u!!'/"
!<92!!!'/!!!'/!!!'/!!!'.u!!'/#!<91t!<'%j!<$a1!<6m8!<6m4!!$j6!!$j4!!$j5!!$j5!!-m9
r;Zh6qu?_5qu?_5qZ$V4r;Zh6qZ$V4qu?_5qu?_5qu?_5qu?_5qu?_5qu?_5qu?_5qZ$V4r;ck6qu?_5
qu?_5qu?_5qu?_5qZ$V4rW)t7q>gJ1nc8V]q>gOgrrE'lqZ$Uhr;ZgjqZ$Uhqu?^iqu?^iqu?^iqu?^i
qu?^iqZ$Uhr;ZgjqZ$Uhqu?^iqu?^ir;Ziu9Debi9Debi9Debi9Debi9D\\h9Dnkj9Debi9Debi9Debi
9Debi9D\\h9E"qk9DSYe9BH3Vl0/34q>^T]!!!'#!9s@\!9sC]!9sC]!9sC]!9sC]!9sC]!9s@\!9sF^
!9s@\!9sC]!9sC]!9sC]!9sC]!9sC]!9sC]!9sC]!9s@\!9sF^!9s@\!9sC]!U0U_!<;<_!<;<\!!MQN
!9rb%!!B@*!3Q(t!3Q2"!3Q+u!3Q/!!3Q/!!3Q/!!3Q/!!3Q/!!3Q+u!3Q2"!3Q+u!3Q/!!3Q/!!3Q/!
!3Q/!!3Q/!!3Q/!!3Q/!!3Q+u!3Q2"!3Q+u!3Q/!!3Q/!s/l8#s/l.u"Ked+Xf^U`p](D4C]J;J!!$j6
!!$j4!!$j5!!$j5!!$j5!!$j5!!$j5!!$j4!!$j6!!$j4!!$j5!!$j5!!$j5!!$j5!!$j5!!$j5!!$j5
!!$j7!<)ruD#F>6D#424D#=85D#=;5D#OG7D#428Chs)fCt\jk91o7Xq>^Lgr;ZgjqZ$Uhqu?^iqu?^i
qu?aj!;ult9Debi9D\\h9Dnhj9D\\h9Debi9Debi9Debi9Debi9Debi9Debi9Debi9D\\h9Dnhj9D\\h
9Debi9Deei9E"qk9D\\l91o7X9DSYH!<26Z!<;<_!!)9\!!)9^!<;<]!!)9]!!)9]!!)9]!!)9\!!)9^
!!)9\!!)9]!!)9]!!)9]!!)9^!!*)aqu?`]quHc]r;Zi^qZ$W\r;Zi^qZ$W\r;cl^qZ$W\rVur_q#LEY
fDtoQq>gPtrVur#rW)ot!3Q2"s/l2!!3Q/!!3Q/!!3Q/!!3Q+u!3Q2"!3Q+u!3Q/!!3Q/!!3Q/!!3Q/!
!3Q/!!3Q/!s/l5"!3Q+u!3Q2"!3Q+u!3Q2"s/l.u!3Q5#!3Q%sriOfQrbVE2s(qZ7!,VN4!,VT6s(qT5
!,VQ5!,VQ5!,VQ5!,VN4!,VT6!,VN4!,VQ5!,VQ5!,VQ5!,VQ5!,VQ5!,VQ5s(qW6!,VN4!,VT6!,VN4
!,VT6s(qQ4!,VW7!,VH2rbU?ir;cgiq>gOgrVupkqZ$Uhr;cjjqu?^iqu?^iqu?^iqu?^iqZ$Uhr;Zgj
qZ$Uhqu?^iqu?^iqu?^iqu?^iqu?^iquHair;ZgjqZ$[j!!!'#!)*1h!)*7js%E4h!)*:k!)*+fr_(K9
!9sI_!9s@\!9sF^!9s@\!9sC]!9sC]s69I^!9s@\!9sF^!9s@\!9sC]!9sC]!9sC]!9sC]!9sC]!9s@\
!9sF^!9s@\!9sF^!9s@\!9sF^!9s=[!9sI_!9s7Y!9s%SgAh5UrVur#qZ$Vur;Zi"qZ$Vuqu?`!quHc!
r;Zi"qZ$Vur;Zi"qZ$Vuqu?`!qu?`!qu?`!qu?`!r;ZiuXnr(uXo/5"Xnr(uXo/5"Xnr(uXo/5"Xni"t
Xo8;#XnVkrXipbFD#OD7D#426C]FG:!!$j4!!$j5!!$j5!<6m6!!$j4!!$j6!!$j4!!$j5!!$j5!!$j5
!!$j5!!$j5!!$j4!!$j6!!$j4!!$j6!!$j4!!$j6!!$j3!!$j7!!6s:!;ZZqCs2kZ9E"nk9D\\h9Dnhj
9D\\h9Debi9Deei9Dnhj9D\\h9Dnhj9D\\h9Debi9Debi9Debi9Debi9Debi9D\\h9Dnhj9D\\h9Dnhj
9D\\h9Dnhj9DSVg9E"nk9DAJe9C2`;!!MNd!9rbF!<;<_!!)9\!!)9]!!)9\!!)9^!!)9\!!)9^!!)9\
!!)9]!!)9]!!)9]!!)9]!!)9]!!)9_!<)rul2:S^l2(G\l2:S^l2(G\l2:S^l1tA[l2CY_l,!E'XT/@'
Xnr+uXo8;%XT/A"!!'/!!!'.u!!'/"!!'.u!!'/"!!'.u!!'/!!!'/!!!'/!!!'/!!!'/!!!'.u!!'/"
!!'.u!!'/"!!'.u!!'/"!!'.t!!'/#!!'.t!6G3DC]FHOD#454D#OD7D#424D#=85D#424D#F>6D#424
D#F>6D#424D#=85D#F>7!,VQ5!,VQ5!,VQ5!,VN4!,VT6!,VN4!,VT6!,VN4!,VT6!,VK3!,VW7!,TXT
r;Zsn!!#YbqZ-XhrVupkqZ$Uhqu?^iqZ$Uhr;ZgjqZ$Uhr;ZgjqZ$Uhqu?^iqu?^iqu?^iqu?^iqu?^i
qZ$Uhr;ZgjqZ$Uhr;ZgjqZ$Xi!<)ru9DSVg9E"nk9>UZ2kl:_Jq#CEZrVur_qZ-Z\r;Zi^qZ$W\r;Zi^
qZ$W\r;Zi^qZ$W\qu?`]qu?`]qu?`]qu?`]qu?`]qZ$W\r;Zi^qZ$W\r;Zi^qZ$W\r;Zi^q>^Z_!!)9J
h#QR;"0DP'Xn_qsXo8;#Xnr+uXo/5"Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo&/!Xo&/!Xo&/!Xo&/!Xo&/!
Xnr)"XT/>&!!'.u!!'/"!!'.u!!'/"!!'.t!!KD(!3NB?!!@$;!,VH2!,VW7!,VN4s(qW6!,VN4!,VT6
!,VN4!,VT6!,VN4!,VQ5!,VQ5!,VQ5!,VQ5!,VQ5!,VN4!,VT6!,VN4!,VT6!,VN4!,VT6!,VK3"De&<
Ci&_DcN"&?!!#[f!!#[k!!#[h!<5^j!!#[h!!#[j!!#[h!!#[j!!#[h!!#[i!!#[i!!#[j!!*'mqu?^i
qu?^iqZ$Uhr;ZgjqZ$Uhr;ZgjqZ$Uhr;Zgjq>^Xk!!#Yb_>sW#!<DB[!!)9_!!)9[!!)9^!!)9\!!)9^
!!)9\!!)9^!!)9\!!)9^!<;<]!!)9]!!)9]!!)9]!!)9\!!)9^!!)9\!!)9^!!)9\!<;<_!!;Bb!;lg!
kl:_J_#OS>XT5L!!!'/#!!'.t!!'/"!!'.u!!'/"!!'.u!!'/"!!'.u!!'/"!<92!!!'/!!!'/!!!'/!
!!'.u!!'/"!!'.u!!'/"!!'.u!<92#!!'.t!!B>'!3OfPli7-(C]J;I!!$j7!!$j3!!$j6!!$j4!!$j6
!!$j4!!$j6!!$j4!!$j6!<6m5!!$j5!!$j5!!$j5!!$j4!!$j6!!$j7!<)ruD#F>6D#454D#OD7D#+,6
C]FHO_#OR19)qW\!!#[k!!#[g!!#[j!!,^mqu?^ir;ZgjqZ$Uhr;ZgjqZ$Uhr;cjjqu?^iqu?^iqu?^i
qu?^iqZ$Uhr;ZgjqZ$Uhr;ZgjqZ-XhrVupkq>^Uj!!#[Z!7V#Jl1k;Zl2CY_l1tA[l2:S^l2(G\l2:S^
l2(G\l2:S^l2(G\l2:S^l2(G\l21M]l2:S_!9sC]!9s@\!9sF^!9s@\!9sF^!9s=[!9sI_!9s=["6o%M
l+d;uXo/7u!!'/#!!'.t!!'/"!!'.u!!'/"!!'.u!!'/"!!'.u!!'/"!!'.u!!'/!!!'/!!!'/!!!'.u
!!'/"!!'.u!!'/"!!'.t!!'/#!!'.t!!',&XT5K=!<-g1!!$j7!!$j3!!$j6!!$j4!!$j6!!$j4!!$j6
!!$j4!!$j6!!$j4!!$j5!!$j5!!$j5!!$j4!!$j6!!$j4!!$j6!!$j3!!$j7!!$j3!!@%R!,U!^nGrP]
q#CCfrVupkq>^Lgr;ZgjqZ$Uhr;ZgjqZ$Uhr;ZgjqZ$Uhr;ZgjqZ$Uhqu?^iqu?^iqu?^iqZ$Uhr;Zgj
qZ$[j!!!'#!)*.g!)*:k!)*.g"%u8e9>CQ-l1b5Yl2CY_l1tA[l2C\_l2(G\l2:S^l2(G\l2:S^l2(G\
l2:S^l2(G\l21M]l21P]l2:S^l2(G\l2:S^l2(G\l2:S^l1tA[l2CY_l1k>Yl/r'#!<91r!!'/#!!'.t
!!'/#!<91u!!'/"!!'.u!!'/"!!'.u!!'/"!!'.u!!'/!!!'/!!<92#!!*)%qZ$Vur;Zi"qZ$Vur;Zi"
q>^MtrVur#q#LDr^]=CNp](>2!!3-#D#+,3D#OG7D#424D#F>6D#424D#F>6D#424D#F>6D#424D#=85
D#=;5D#F>6D#424D#F>6D#424D#F>6D#+,3D#OD7D#")1D#OFP!<5^e!!#[k!!#[g!!#[k!<5^h!!#[j
!!#[h!!#[j!!#[h!!#[j!!#[h!!#[i!!#[i!<5^j!!#[h!!#[j!!#[h!!#[j!!#[g!!#[k!!#[f!<,XN
!7UuKl2CY_l1tA[l2CY_l1tA[l2:S^l2(G\l2:S^l2(G\l2:S^l2(G\l21M]l2(G\l2:S^l2C\^!!)9^
!!)9\!!)9^!!)9[!!)9_!!)9Z!<;;j!!'/#!!98&!;lfsXo8;#Xni"tXo/5"Xnr(uXo/5"Xnr(uXo/5"
Xnr(uXo&/!Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo/5"Xni"tXo8;#Xn_tsXnVn0!!$j7!!$j3!!$j7!!$j3
!!$j6!!$j4!!$j6!!$j4!!$j6!!$j5!!*(9qu?_5qZ$V4r;Zh6qZ$V4r;Zh6qZ$V4r;Zh6q>^M3rVuq7
q#LG2_uT<-!)*:k!)*.g!)*:k!)*.g!)*7j!)*1h!)*7j!)*1h!)*7j!)*1h!)*4i!)*1h!)*7j!)*1h
!)*7j!)*1h!)*7j!)*.g!)*:k!)*+fs%B^!!9sI_!9s=[!9sI_!9s=[!9sF^!9s@\!9sF^!9s@\!9sF^
!9s@\!9sC]!9s@\!9sF^!9s@\!9sF^!9s@\!9sF^!9s=[!9sI_!9ql2g&M,TrVur#q>^MtrVur#q>^Mt
r;Zi"qZ$Vur;Zi"qZ$Vur;Zi"qZ$Vuqu?`!qZ$Vur;Zi"qZ$]"!!!'#!3Q+u!3Q2"!3Q(t!3Q5#!3N7$
!,VW7!,VK3!,VW7!,VK3!,VT6!,VN4!,VT6!,VN4!,VT6!,VN4!,VQ5!,VN4!,VT6!,VN4!,VT6!,VN4
!,VT6!,VK3!,VW7!,Uj!_Z0[0rVupkq>^LgrVupkq>^Lgr;ZgjqZ$Uhr;ZgjqZ$Uhr;ZgjqZ$Uhr;Ziu
9D\\h9Dnhj9D\\h9Dnhj9D\\h9Dnhj9DSVg9E"nk9=+]n!!MNd!9rbE!!)9_!!)9[!!)9^!!)9\!!)9^
!!)9\!!)9^!!)9\!!)9]!!)9\!!)9^!!)9\!!)9^!!)9\!!)9^!!)9[!!_Zf!9r_J!3?/'XT/@'Xni"t
Xo8;#Xni"tXo/5"Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo&/!Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo/5"Xni##
XT/@'Xig_&!!I*<!,QKJ!!$j7!!$j3!!$j6!!$j4!!$j6!!$j4!!$j6!!$j4!!$j5!!$j4!!$j6!!$j4
!!$j6!!$j7!<)ruD#F>6D#+,7C]FHOCoRI<9)nrb9DSVg9E"nm9)nti!!#[j!!#[h!!#[j!!#[h!!#[j
!!#[h!!#[i!!#[h!!#[j!!#[h!!#[j!!#[h!!#[j!!#[g!!Gpp!)#uE!6G3Cl0/34q#CEZrVur_q>^N[
r;Zi^qZ$W\r;Zi^qZ$W\r;Zi^qZ$W\r;cl^r;Zm!!9sF^!9s@\!9sF^!9s@\!9sF^!9s=["6fdcl)asa
!!B@*!3Q%s!3Q5#!3Q(t!3Q2"!3Q+u!3Q2"!3Q+u!3Q2"!3Q+u!3Q2"s/l.u!3Q2"!3Q+u!3Q2"!3Q+u
!3Q2"!3Q(t"0DP'XnVn%!!@%R!,VH2!,VW7!,VK3!,VT6!,VN4!,VT6!,VN4!,VT6!,VN4!,VT6s(qQ4
!,VT6!,VN4!,VT6!,VN4!,VT6!,VK3")Ir;Cr?>9!!>ke!)*+f!)*:k!)*.g!)*7j!)*1h!)*7j!)*1h
!)*7j!)*1h!)*7js%E4h!)*7j!)*1h!)*7j!)*1h!_WLn!WW3nq>^Uj!!#Zj!!;Bbl1k;Zl2CY_l1tA[
l2:S^l2(G\l2:S^l2(G\l2:S^l2(G\l2:S^l1tA[l2:S^l2(G\l2:S^l2(G\l2:S^l1tA^kl:_JgAoM!
!j)I)q#CDsrVur#q>^Mtr;Zi"qZ$Vur;Zi"qZ$Vur;Zi"qZ$Vur;Zi"q>^MtrVus!Xnr(uXo/5"Xnr(u
Xo/5"Xni#"XT/@'VuQg6!<?s3!!$j7!!$j3!!$j6!!$j4!!$j6!!$j4!!$j6!!$j4!!$j6!!$j3!!$j6
!!$j4!!$j6!!$j4!!$j6!!$j3!!@$;!,V3+[f?J&!)*+f!)*:k!)*.g!)*7j!)*1h!)*7j!)*1h!)*7j
!)*1h!)*7j!)*.g!)*7j!)*1h!)*7j!)*1h!)*7j!)*.g"%rUo9@a*l!!;Bbl1k;Zl2CY_l1tA[l2:S^
l2(G\l2:S^l2(G\l2:S^l2(G\l2:S^l1tA[l2:S^l2C\^!!)9^!!)9\!<;<_!!)9[!!DHc!9pE^!j)I)
rW)ir!3Q5#!3Q(t!3Q2"!3Q+u!3Q2"!3Q+u!3Q2"!3Q+u!3Q2"!3Q(t!3Q2"!3Q+u!3Q2"!3Q+us/l8#
!3Q(t"0DP'XmH,$!!6s:D#"&2D#OD7D#+,3D#F>6D#424D#F>6D#424D#F>6D#=86!,VT6!,VK3!,VT6
!,VN4!,VT6!,VN4s(qZ7!,VK3")Ir;Cq0Q8!!5dn9DJPf9E"nk9DSVg9Dnhj9D\\h9Dnhj9D\\h9Dnhj
9D\\h9Dnhj9DSVg9Dnhj9D\\h9Dnhj9D\_h9E"nk9DSVg9*,(n9;hglklBuD!!)9_!!)9[!!)9^!!)9\
!!)9^!!)9\!!)9^!!)9\!<;<_!!)9[!!)9^!!)9\!!)9^!!)9[!!MNd!9rbE!!DKM!9qi1f`2)U!3Q%s
!3Q5#!3Q(t!3Q2"!3Q+u!3Q2"!3Q+u!3Q2"!3Q+us/l8#!3Q(t!3Q2"!3Q+u!j)G&!WW5&q>^Z#!!'.'
q>^W"XT5K%!!6s:D#"&2D#OD7D#+,3D#F>6D#424D#F>6D#424D#F>6D#454D#OD7D#+,3D#F>6D#424
D#F>6D#+,7C]FHOD#+,6Chs)fk5`@!!_WMdq#CCfrVupkq>^Lgr;ZgjqZ$Uhr;ZgjqZ$Uhr;ZgjqZ-Xh
rVupkq>^Lgr;ZgjqZ$Uhr;Zgjq>^Xk!!#Ybq>^Uj9)qVk!;6Ell1k;Zl2CY_l1tA[l2C\_l2(G\l2:S^
l2(G\l2:S^l1tA[l2CY_l1tA[l2C\_l2(G\l2:S^l1tA^kl:_Jp](B[!9sI_WrW.$q#CDsrVur#q>^Mt
rW)u#qZ$Vur;Zi"qZ$Vur;Zi"q>^MtrVur#q>^MtrW)u#qZ$Vur;Zi"q>^W"!!'.r!!98&Xi^Y$!<-g1
!!$j7!!$j3!!$j7!<6m4!!$j6!!$j4!!$j6!!$j3!!$j7!!$j3!!$j7!<6m4!!$j6!!$j7!;um"C]FHO
p](A3!,SS6r_*%e!)*:k!_WLnqu?^irW)skqZ$Uhr;ZgjqZ$Uhr;Zgjq>^LgrVupkq>^LgrW)skqZ$Uh
r;Zgjq>^Uj!!#[e!!5dn9Aolk!!)9Y!!)9_!!)9[!!)9_!!)9[!!)9^!!)9\!!)9^!!)9[!!)9_!!)9]
!!3-#l2CY_l1tA[l2C\_l1tA^kl:_Jp]1<XXT84u!3Q"r!3Q5#!3Q(t!3Q5#!3Q(t!3Q2"!3Q+u!3Q2"
!3Q(t!3Q5#!3Q(t!3Q5#!3Q(t!3Q5#s/l+t"0DP'XnVnqXnVn#!!$j1!!$j7!!$j3!!$j7!!$j3!!$j6
!!$j4!!$j6!!$j3!!$j7!!$j3!!$j7!!$j3!!$j7!<6m3!!@$;!,VE1rbTLQj8]0Qp](:erVupkq>^Lg
rVupkq>^Lgr;ZgjqZ$Uhr;Zgjq>^LgrVupkq>^LgrVupkq>^LgrW)skq>^Oh!!*'mp]1:dSH&fWkl:_J
q>^N[rVur_q>^N[r;Zi^qZ$W\r;Zi^q>^N[rVur_q>^N[rVur_q>^N[rVur_q#CN]!!)9Y!<;<;!5ed>
XfVR'Xni"tXo8;#Xni"tXo/5"Xnr(uXo/5"Xni"tXo8;#Xni"tXo8;#Xni"tXo8;#Xn_r!XT/@'p]1>r
V?$>j"DhlS!,VK3!,VW7!,VK3!,VT6!,VN4!,VT6!,VK3!,VW7!,VK3!,VW7!,VK3!,VW7!,VH2")Ir;
D"n#1D".M,!!Gqf!!#[g!!#[k!!#[g!!#[j!!#[h!!#[j!!#[g!!#[k!!#[g!!#[k!!#[g!!#[k!!#[f
!!>jo!)*(es%ClB`rH5+!!)9[!!)9_!!)9[!!)9^!!)9\!!)9^!!)9[!!)9_!!)9[!!)9_!!)9^!<)ru
l2CY_l1k;]kl:_Jp]1?YT`Fri"0DP'Xni"tXo8;#Xni"tXo/5"Xnr(uXo/5"Xni"tXo8;#Xni"tXo8;#
Xni"tXo8;#Xn_r!XT/@'p]1>rli=6i")Ir;D#+,3D#OD7D#+,3D#F>6D#424D#F>6D#=87!!$j7!!$j3
!!$j7!!$j3!!$j7!!$j2!!@$;!,VE1s(o1Fj8]9T!!#[g!!#[k!!#[g!!#[j!!#[h!!#[j!!#[g!!#[k
!!#[g!!#[k!!#[g!!#[k!!#[f!!>jo!)*(es%Ag]"6fdcl1tA[l2CY_l1tA[l2:S^l2(J\l2CY_l1tA[
l2CY_l1tA[l2CY_l1tA[l2CY_l1k;]kl:_J_uS$^"0DP'Xni"tXo8;#Xni"tXo/5"Xnr+uXo8;#Xni"t
Xo8;#Xni"tXo8;#Xni#!XT/>%!3Q%s"0DP'XcNMbC]FHOq>^M3rVuq7q>^M3r;Zh6qZ-Y4rVuq7q>^M3
rVuq7q>^M3rVuq7q>^M3rVuq7q#CM5!!$ii!4Dk09)nrbq>^LgrVupkq>^Lgr;ZgjqZ-XhrVupkq>^Lg
rVupkq>^LgrVupkq>^LgrVupkq#CLi!!#Zi!9sOdklBu4q>^N[rVur_q>^N[r;Zi^q>^N[rVur_q>^N[
rVur_q>^N[rVur_q>^N[rVur_q#CN]!!)9S!1s5nXT5K*q>^MtrVur#q>^Mtr;Zi"q>^MtrVur#q>^Mt
rVur#q>^MtrVur#q>^MtrVur#q#CN!!!'.8!7LoMC]J9fq>^M3rVuq7q>^M3r;Zh6q>^M3rVuq7q>^M3
rVuq7q>^M3rVuq7q>^M3rVuq7r;ccr")Ir;CleW#9)qUX!!)os!)*:k!)*.g!)*7j!)*.g!)*:k!)*.g
!)*:k!)*.g!)*:k!)*.g!)*:k!)*+f"%rUo9@X$T!!;Bbl1k;^l0/0Jl1tA[l2:S^l1tA[l2CY_l1tA[
l2CY_l21M_!!)9_!!)9[!!)9_!!)9Z!!DHc!9p0Wn,NNl!3Q%s"Ked+!3Q(t!3Q2"!3Q(t!3Q5#!3Q(t
!3Q5#!3Q(t!3Q5#!3Q(t!3Q5#!3Q%s"0DP'Xm?%a!!6s:D#"&6Chs(OD#+,3D#F>6D#425!,VW7!,VK3
!,VW7!,VK3!,VW7!,VK3!,VW7!,VH2")Ir;Cq'Ju!!5dn9DJPj91o6b9DSVg9Dnhj9DSVg9E"nk9DSVg
9E"nk9DSVg9E"nk9DSVg9E"nk9DJPg9)ntm999,TklBuC!!DHc!9s=[s69L_!9s=[!9sI_!9s=[!9sI_
!9s=[!9sI_!9s=["R5.N!9s:Z"6fdcl-B@H!!98&XnVkuXT/@'q>gPtrVur#q>^MtrVur#q>^MtrVur#
q>^MtrVur#q>^Z#XT/@'q#CN!!!'-j!;6BoC]J;H!!@$;!,VK3s(qZ7!,VK3!,VW7!,VK3!,VW7!,VK3
!,VW7!,VK3"DhlS!,VH2")Ir;Cut_u!!5dn9DAJh9)nrbq>gOgrVupkq>^LgrVupkq>^LgrVupkq>^Lg
rVupkq>^Xk9)nrbq#CLi!!#[7!65'@klBuC!!DHc!9s:Z"R,mdl08$E!9sI_!9s=[!9sI_!9s=[!9sI_
!9sF^r;Zra!!)9Z!!DHc!9odLqZ$]"!3Q"r"0DP'Xn_r"XT/@'Xni"tXo8;#Xni"tXo8;#Xni"tXo8;#
Xn_r!XT/@'q#CN!!!'.[!3cG)C]J;H!!@$;!,VH2"De&<Ci&qJ!,VW7!,VQ5!WW4:rVuq7q>^M3rVuq7
q#CM5!!$j2!!@$;!,Sb;j8]6S!)*(e"%rUo9DJPj9)nrb9DSVg9E"nk9DSVg9E"nk9DSVg9E"nk9DJPi
9)nrbq#CLi!!#[e!1<fgklBuC!!DHc!9s=["9@Zd!9s:Z!9sI_!9s=[!9sI_!9s=[!9sI_!9s:Z"6fdc
l1k;]kl:_J_uS$^!j)I)p](Du!!'.s!!B>'!3Q%s!3Q5#!3Q(t!3Q5#!3Q(t!3Q5#!3Q%s!Nc>&!3Q%s
"0DP'XcNMaC]J;H!!@$;!,VH2")Ir;D#"&2D#OD7D#+,3D#OD7D#+,3D#OD7D#"&5C]FHOq#CM5!!$ii
!4Dk/9)qW[!!>jo!)*+f"%rUo9DJPf9E"nk9DSVg9E"nk9DSVg9E"nk9DJPi9)nrbq#CLi!!#Zi!9sR`
l1b5\kl:_Jq#CN]!!)9Z!!)9_!!)9[!!)9_!!)9[!!)9_!!)9Z!!DHc!9s:ZrTWkQT)ekmp](Du!!'.s
!!KD(!3H7t!!'/#!!'.t!!'/#!!'.t!!'/#!!'.s!!B>'!3Q%srN3d6dfBA`p](D4!!$j2!!@$;!,VH2
!,VW7!,VK3!,VW7!,VK3!,VW7!,VH2")Ir;D#FA4!<$_q!<,Xj!;c`u9)nrbq#CLi!!#[f!!#[k!!#[g
!!#[k!!#[g!!#[k!!#[f!!>jo!)*+frCbZ@])_lqp](E\!!)9Z!!DHc!9s:Z!9sI_!9s=[!9sI_!9sC]
!WW5brVur_q#CN]!!)9Y!<;;V!:KpfXnVkuXT/@'q#CN!!!'.s!!'/#!!'.t!!'/#!!'.t!!'/#!!'.s
!!B>'!3Q"rs/kSeU]CF2p](D4!!$j2!!@$;!,VK3!<?s8!!$j3!!$j7!!$j3!!$j7!!$j2!!@$;!,VE1
s(o.EfDtqEp](Ch!!#[f!!>jo!)*+f!)*:k!)*.g!)*:k!)*.g!)*:k!)*+f"%rUo9DAJe9)qVF!<;<Y
!!DHc!9s:Z"6fdcl1k;Zl2CY_l1tA[l2CY_l1tA[l2CY_l1k;]kl:_Jp]1?Yc2bZ\s/l%r"0DP'Xn_r!
XT/@'q#CDsrVur#q>^MtrVur#q>^MtrVur#q#CN!!!'.r!<90i!;-?lD"mu4C]FHOq#CM5!!$j2!!$j7
!!$j3!!$j7!!$j3!!$j7!!$j2!!@$;!,VE1s(pcsWW<&lp](Ch!!#[f!!>jo!)*+f!)*:k!)*.g!)*:k
!)*.g!)*:k!)*+f"%rUo9DAMe9?@1G!!DHc!9s:Z"6fdcl1k;Zl2CY_l1tA[l2CY_l1tA[l2CY_l2:V\
!!DHc!9s7Ys65dKmf3Hl!!'.s!!B>'!3Q%s!3Q5#!3Q(t!3Q5#!3Q(t!3Q5#!3Q%s"0DP'XnVnrXl'2T
!!@$;!,VH2")Ir;D#"&2D#OD7D#=87!!$j7!!$j3!!$j7!!$j2!!@$;!,VE1s(nb:fDl"H!!#[f!!>jo
!)*+f!)*:k!)*.g!)*:k!)*.g!)*:k!)*+f"%rUo9DAMe9D8FG!!DHc!9s=["9@Zd!9s:Z!9sI_!9s=[
!9sI_!9s=[!9sI_!9s:Z"6fdcl1b8Yl,*M;!!B>'!3Q%s"0DP'Xn_qsXo8;#Xni"tXo8;#Xni"tXo8;#
Xn_qtXT/A%XnVnrXcEJT!!@$;!,VH2")Ir;D#"&2D#OD7D#+,3D#OD7D#+,3D#OD7D#"&5C]FHOp]1>1
g&S,Q"%rUo9DJPi9)nrbq#CCfrVupkq>^LgrVupkq>^LgrVupkq#CLi!!#[e!<5]h!8[\Xkl:_Jq#CN]
!!)9Z!!MNd!9rbE!!)9_!!)9[!!)9_!!)9Z!!DHc!9rVGP5k]e!!'.s!!KD(!3H7t!!KD(!3NC"!!'/#
!!'.t!!'/#!!'.s!!B>'!3NO,`rH3X!!$j2!!@$;!,VH2"De&<Ci&qJ!,VW7!,VK3!,VW7!,VH2")Ir;
D#F?c!;c`u9)nrbq#CLi!!#[f!!Gpp!)#u]!!#[k!!#[g!!#[k!!#[f!!>jo!)(E6YQ+di!9rbD!!DHc
!9s:Z"6fdcl1k;Zl2CY_l21Mc!!)9J!!)9Z!!DHc!9oaKj8]:a!3NC!!!B>'!3Q%s"0DP'Xn_qsXo8;#
Xni##XfVR'Xn_r!XT/@'huK/F")IsRD#"&5C]FHOq>^WuC]FHOq#CD2rVuq7q>^Y7C]FHOq#CM5!!$i:
!6kKG9)qUXq#CLi!!#[f!!>jo!)*+f!)*:k!)*.g"A;Af!)*+f"%rUo9D8F<!!;Bbl1b5\kl:_Jq#CN]
!!)9Z!!)9_!!)9Z!!DHc!9s:Z"6fgMl,*M0!!98&XnVkuXT/@'q#CN!!!'.s!!'/#!!'.s!!98&!!'.s
!!B>'Xf[Wal2Um%!,VE1")Ir;D#"&5C]FHOq#CD2rVuq7q#CM5!!$j2!!@$;Ci%f*T)\pc!)*(e"%rUo
9DJPj9)nrb!;ZZq9E"nk9DJPi9)nrbq#CLi!)#u!!4r44klBuC!!DHc!9s:Z"6fdcl1k;Zl2CY_l1k;]
kl:_Jr;ccr!pK^LM#cuE!j)I)p](Du!!'.s!!B>'!3Q%s!3Q5#!3Q%s"0DP'Xn_quXT5KQ!2KSrC]J;H
!!@$;!,VH2")Ir;D#426!!$j7!!$j2!!@$;!,VH2!c.jQTE*UE!_WMdp](Ch!!#[f!!>jo!)*+f!)*:k
!)*+f"%rUo9DJPh9)qWN!0%!Xl1k;^!9jI`l1k;]kl:_Jq#CEZrVur_q#CN]!!)9Z!!;Bbl*gZ/!<0+q
!!B>'!3Q%s"0DP'Xn_qsXo8;#Xn_r!XT/@'q#CGt!!'-R!;-?kD"mu4C]FHOq#CM5!!$j2!!$j7!!$j2
!!@$;!,VH2!c.jQc2ajEr_*"d"%rUo9DJPi9)nrbq#CCfrVupkq#CLi!!#[f!!5dn9:>k:!<;<Y!!DHc
!9s:Z"6fdcl1k;^kl:_Jl1k;]klBu4q#CK\!9rSFOoYNap](H!!!',$q>^W"!!'.s!!KD(!3NC!!!B>'
Xf_C!!j)I)YlMcDs(qH1")Ir;D#"&5C]FHOq#CP6!!$hOq#CM5!,QKI!!6s:D#=9b!;Z]q9DAJh9)nrb
q#CLi!!#[f!!Gpp!)#u\!!>jo92#'\!_WMda8iCDs69:Y"6fdcl1k;]kl:_Jq#CN]!!)9\!<)s"klBuC
!<25I!94(ZXnVkuXT/@'q#CN!!!'.s!!B>'!3Q"r!j)I)p]1;qhZ0#Ds(qH1")Ir;D#+,7!,MW8D#"&5
C]FHOp](A3!,VE1rbSV8bQ.Z9p](Ch!!#[f!!>jo!)*+f"%rUo9DAJg9)qW[!<,Xb!.k1P!9rbC!!DHc
!9s:Z"6fdcl1k;]kl:_Jp](B[!9s4Xs67B#[/g6/p](Du!!'.s!!B>'!3Q%s"0DP'XnVktXT5Kt!<90]
!9jL`D"mu4C]FHOq#CM5!!$j2!!@$;!,VE1!c.jQpAk50f`7TDs%E+e"%rUo9DJPj9)nrb!;ZZt9)nrb
p](@g!)*%ds%C$*\cDcpp](E\!!)9Z!!DHc!9s:Z"6o%Ml1b5[klBuG!;lisl%oE.!<91r!!B>'!3Q%s
"0DP'Xn_r!XfVT*p](At!3Ptqs/jcNUB(=1p](D4!!$j2!!@$;!,VN4"TSO=C]J;H!!6s:D"dr0CnLd[
!<5^e!!>jo!)*+f"%rUo9DJPi91o7Xp](@g!)*%ds%DYXJcGoRkl:_Jq#CN]!!)9Y!!;Bbl1b5[klBuB
!<;;m!4;e/XT/@'q#CN!!!'.r!!98&XnVktXT5Kt!!',$Xb-W<!!@$;!,VH2")Ir;D"mu3C]J;H!!6s:
D"dr0CsE$P!!>jo!)*+f"%rUo9DAJg9)qW[!!5dn9D8Gd9:>k/!!DKM!9s:Z"6fdcl1b5[klBuC!!;Bb
l.H&l!!KF+!3H7t!!B>'!3Q"r!j)I)p](At!3N't])VqLC]J;I!!@$;!,VE1!c.jQp](A3!,V-)JcP6>
"%u8e9DJPi9)nrbp](@g!)*(e!_WMd]E"],ros4Y"6o%Ml1b5[klBuF!<)s"klBt(!7q5MXn_r!XfVT*
p](At!3Q"r!j)I)df>=,rbVE2"9<7S!,VE1!c.jQp](A3!,S8-^]=@,q#CLi9)qW[!!5dn9DAJg9)qWM
!.k4C!<;<X!!;Bbl1b5[klBuC!!;Bbl*^Sk!<91q!!98&XnVktXT5Ku!!98&Xb$Q/!<6m0!!6s:D"mu3
C]J;H!!6s:Cs;sC!<5^d!!>jo9*"bf!_WMdp](@g!)'QsXoSLdpAb9Z!9s7Y!pK^Lp](B[!9sC]JcOd1
s/l"q!j)I)p](At!3Q"r!j)I)a8hP,s(qE0!c.jQqZ-Tq!c.jQp](A3!,Rl"b5hQ8pAb7f!)*(e!_WMd
p](@g!))2LJcPfNs697X!pK^Lp](B[!9s7Y!pK^LWrTL,s/l"q!j)I)p](At!3Q"r!j)I)p&K[EkQ(X!
pAb82!,VE1!c.jQp](A3!,TLPSH/[_pAb7f!)*(e!_WMdp](@g!)&=Pd/a42pAb9Z!9s7Y!pK^Lp]1<X
f`6a,s/l;$q#CJu!3Q"r!j)I)p]1;qV#\(,s(qE0!c.jQp](A3!,VE1rbV'(JcP3=s%E(d!_WMdp](@g
!)*(er_'m(UB(>YpAb9Z!9s7Y!pK^LqZ-Qps65=>f)YiQpAb8s!3Q"r!j)I)pAk5qdf>=,s(qK2"98F<
!,VE1!c.jQpAk50T)cY,s%E(d!_WMdp](@g!)*%ds%DVWJcP!7ros1X!pK^LpAk6X[K)iuriPqq!j)I)
pAk5qJcO0urbV?0!c.jQpAk50blEIur_!4kq#CIh!)*%ds%BTsU&b5XpAb9Z!9s4X!9s@\JcO@%s/l"q
!j)I)pAb2q`rM"ts(qN3rW!"9!,VB0!,Ri!^B":,pAb7f!)*%d!))/KJcPBBs697Xrop$TVuZk"pAk2p
l2ZD9g]7@jpAk2/[K)Eis%E(dr_%hC`;or&pAk6XbQ*4pq#LGspAk5qQiO8hs(qE0s(p]qJcOd1s%E(d
s%BNqQN7'Mp&G*Wq>c*Ib5hREp&G)p`W1SjrrE(8p&G)/OoVihs%E%c!)),JJcOO*!9pH_O8o9_oDjIC
_uKdR^]8rdp](:eU]>uHJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&RK.p>JcLB&JcLB&JcLB&JcLB&JcLB&JcMVIJ,~>

%%EndBinary
grestore
np
grestore
73.1869 196.291 mo
316.994 196.291 li
73.1869 196.291 li
.819211 .6925 0 0 cmyk
ef
73.1869 194.791 mo
316.994 194.791 li
316.993 197.791 li
73.1869 197.791 li
73.1869 194.791 li
0 0 0 1 cmyk
f
332.98 194.596 mo
386.857 195.115 li
.819211 .6925 0 0 cmyk
ef
2.5 lw
0 lc
1 lj
10 ml
[7.5 2.5 ] 0 dsh
true sadj
332.98 194.596 mo
386.857 195.115 li
0 0 0 1 cmyk
@
gsave
527.512 236.708 mo
660.506 236.708 li
660.506 156.602 li
527.512 156.602 li
527.512 236.708 li
clp
660.506 236.708 mo
527.512 236.708 li
527.512 204.218 li
550.145 204.218 li
550.145 196.096 li
649.166 196.096 li
649.166 194.596 li
649.166 194.596 li
649.166 193.096 li
550.145 193.096 li
550.145 189.164 li
527.512 189.164 li
527.512 156.602 li
660.506 156.602 li
660.506 236.708 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[133.32 0 0 80.52 527.512 303.292 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 202 
/H 122 
/M[202 0 0 -122 0 122 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 202 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 202 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 202 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 202 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&i;`lBUB$S[!3PYh
JcNpn!,T4HJcPcM!)&m`S,iTRkl?;8ciF*J[/bm\!c2ZQJcN=]s%CQ9JcP0<s694W!9p9ZU&b4qp&G)p
mf7q>ec>_dp&G)/])[`hs%E1gr;ZgjLB,Kts697Xros.Ws67u4JcPfNs/l"qriPnps/hmnZiL,BpAk2/
pAk50l2ZD9kQ(WUpAk1cpAk4d[K)ius697X!pK^Lp]1<XJcO0us/l"q!j)I)p]1;qblEIus(q]8q#CJ4
!,VE1rbRu&\cDb'pAb7f!)*(er_);PJcP3=s697X!pK^Lp](B[!9p]fUB(=rpAb8s!3Q"r!j)I)qZ)3J
f)YhepAb82!,VE1!c.jQ`rM%us%E.f"98Ep!)*(e!_WMdWrT'us697X!pK^Lp](B[!9s1WJcOR+s/l"q
!j)I)p](At!3O*<OT>DtpAb82!,VE1!c.jQNW@#us%E(d!_WMdp](@g!)(uFJcPTHs697X!pK^Lp](B[
!9p<[XoSL(pAb8s!3Q"r!j)I)n,S%?iW0!ppAb82!,VE1!c.jQ]E"8us%E(d!_WMdqZ-Tq!_WMdL]GTu
ros1X!pK^Lp](B[!9s4X!9r>?JcPfNriPqq!j)I)p](At!3Ptq!3N7$ZiL)Ap](A3!,VE1!c.jQpAb20
o`0RDkQ(TTp](@g!)*(e!_WMdpAb1d_#UG7s697X!pK^Lp](B[!9s7Y!pK^LpAk6XNW@l8s/l"q!j)I)
p](At!3Q"r!j)I)pAk5qf`708s(qE0")IsR!;QTrC]J;H!!6s:D"dr0Co%-O!<5^d!!5dn9DAJg9)qW[
!!5dn9D8Gd9CMq5!;Z]ql1Y/ZklBuC!!;Bbl1b5[klBuB!<;;r!3ZD&XnMesXT5Ku!!98&XnVktXT5L#
!;uotXbZu;!<6m0!!6s:D"mu3C]J;H!!6s:D"dr0CsrBO!<5^d!!5dn9DSVk!!#Xl9DAJg9)qWZ!<5^$
!42b+l1b5\l0/34p](B[!9s7Y!pK^Lp]1?Y!9o+9kQ(Xbp](DuXT5Ku!!98&XnVktXT5Ku!<0+G!1a,i
D"mu4Chs)fp](A3!,VE1!c.jQp]1;0RK1_8s%E+e"%u8e9DAJg9)qW[!!5dn9DAMd9B?/.!<;<`!;ZZt
kl:_Jq#CN]klBuC!!;Bbl1b5[klBtQ!4i11XnVkuXT/@'q#CN!XT5Ku!!98&XnVktXT5L$!.k4=!<6m1
!!@$;!,VH2")McRD"mu3C]J;H!!6s:CrcUO!<5^e!!>jo!)*+f"%u8e9D\_g!!5dn9DAJg9)qVL!7q5N
l1b5\kl:_Jq#CN]!!)9Y!!;Bbl1b5[klBu*!/ppXXn_r"!3H5$Xn_r!XT/@'p](At!3Q"r!j)I)WrTp8
s(qH1")Ir;D#"&5C]FHOp](A3!,VE1!c.jQp&K[EoDnnap](Ch!!#[f!!>jo!)*(e!_WMdp](@g!)(0/
W;ut_p](E\!!)9Z!!DHc!9s7Y!pK^Lp](B[!9oLDh#RJWp](Du!!'.s!!B>'!3Q"r!j)I)p](At!3OoS
OoYMup](G5!!$g8q>^V6!!$j1!!6s:D"mu3C]J:J!6,$=9DAJh9)nrbq#CLi!!#[e!!5dn9DAJg9)qWS
!.k4J!<26X!!DHc!9s:Z"6fdcl1b5[klBuC!!;Bbl+@##!<0+q!!B>'!3Q%s"0DP'XnVktXT5L#!<)s"
XT5JZ!9=.ZD"mu4C]FHOq#CM5!!$j1!!6s:D"mu3C]J;#!1<id9DAJh9)nrbq>^Wu9)nrbp](@g!)*(e
!_WMd[fEf9"6fgMl1k;]kl:_Jq#CN]!!)9Y!!DHcl08!D!U0Ral%9!#!!B>'Xf_C!"0DP'Xn_r!XT/@'
p](Du!3NC!!!98&Xj-p<!!@$;Ci&nI")Ir;D#"&5C]FHOp](D4!,QKI!!6s:Cmk@P!!>jo92#'\"%rUo
9DJPi9)nrbp](Ch!)#u\!!5dn9B?//!!MNd!9jL[!!DHc!9s:Z"6fdcl1k;^l0/0Jl1k;\klBtQ!4r45
XT/@'q#CN!!!'.s!!B>'!3Q%s"Ked+!3Q%s!j)I)quD<Kmf3H+!!$j2!!@$;!,VH2")Ir;D#"&6Chs(O
D#"&4C]J:m!2KSs9)nrbq#CLi!!#[f!!>jo!)*1h"onWr9)nrbq#CIh!)&OVfDl$<!!)9Z!!DHc!9s:Z
"6fdcl1k;Zl2CY_l1k;]klBu4p]1?YlMunE"0DP'Xni##!3H5$Xn_r!XT/@'q#CDsrVur#q#CN!!3NBu
!<911!5SX;C]FHOq#CM5!!$j2!!@$;!,VH2!,VW7!,VH2")IsRD"mu1C]J:(!;-<o9)nrbq#CLi!!#[f
!!>jo!)*+f!)*:k!)*+f"%rVe9DAMe9?mOF!!)9X!!DHc!9s:Z"6fdcl1k;^kl:_Jl1tA[l2CY_l1k;]
kl:_Jp]1?YRK2RP!3Ptq"0DP'Xn_r!XT/@'q#CQ"!!'.'q>^MtrVur#q#CN!!!'.r!<91_!1j/jD"do3
C]FHOq#CP6!!$g8q>^Y7!!$hOq>^M3rVuq7q#CM5!!$j1!<6l?!7CiI9D8Dg9)nrbq#CLi!!#[f!!Gpp
!)#u]!!#[k!!#[f!!>jo!)*(es%E7iLB.A=rW)fq"6fdcl1k;]kl:_Jq#CEZrVur_q>^N[rVur_q#CN]
!!)9Y!<;<)!4r72XnVkuXT/@'q#CN!!!'.s!!'/#!!'.t!!'/#!!'/!!<)s#XT/@'p]1>rPQ:.Ps(qH1
")Ir;D#"&5C]FHOq#CD2rVuq7q>^M3rVuq7q#CM5!!$j1!<6lm!2KVp9DAJh9)nrbq#CLi!!#[g!!*'m
rVupkq>^LgrVupkq#CLi!!#[e!<5^0!5JU7l1b5\kl:_Jq#CN]!!)9Z!!)9_!!)9[!!)9_!!)9Z!!2<a
!<DBZ!<;;E!;$9kXnVkuXT/@'q#CN!!!'.s!!'/#!!'.t!!'/#!!'.s!!B>'!3Q"rs/juTW;us7p](D4
!!$j2!!@$;!,VH2!,VW7!,VK3!,VW7!,VH2")Ir;D"n#1Co.3g!<5^e!!>jo!)*+f"%rUo9DJPf9E"nk
9DSVg9E"nk9DJPi9)nrbp]1=enGnaQros1X"R,mdklCP["6fdcl1k;Zl2CY_l1tA[l2CY_l1k;]kl:_J
q#LEY]`?(QriPqq"0DP'Xn_r!XT/@'q#CDsrVur#q>^MtrVur#q#CN!!!'/"!;uosXbd&T!<-g0!!@$;
!,VH2")Ir;D#"&2D#OD7D#+,3D#OD7D#"&5C]FHOq#LD1e,Z]Qr_*"d"%rUo9DJPi9)nrbq#CCfrVupk
qu?cu!)*:k!)*+f"%rUo9DJSe9:u:G!!;Bbl1b5\kl:_Jq#CN]!!)9Z!!)9_!!)9[!!)9_!!)9Z!!DHc
!9s:Z"6fgMl0JD<!!98&XnVkuXT/@'q>^WuXT/@'q#CDsrVur#q>^MtrVur#q#CN!!!'.s!!B>'Xf])5
bl@f]!,VE1")Ir;D#"&5C]FHOq#CD2rVuq7q>^M3rVuq7q#CM5!!$j2!!-m9s(m>g!_WMdp](Ch!!#[f
!!>jo!)*+f!)*:k!)*.g!)*:k!)*+f"%rUo9DJPi9)qUXcN(BR!pK^Lp](E\!!)9Z!!DHc!9s:Z!9sI_
!9s=[!9sI_!9s:Z"6fdcl1k;]kl:_JRfM^R!j)I)p](Du!!'.s!!B>'!3Q%s!3Q5#!3Q(t!3Q5#!3Q%s
"0DP'Xn_r!XT/@'joD"R!c.jQp](D4!!$j2!!I*<!,MZ3!!$j7!!$j3!!$j7!!$j2!!@$;!,VH2")Ir;
CpF&i!!5dn9DAJh9)nrbq#CLi!!#[f!!#[k!!#[g!!#[k!!#[f!!>jo!)*+f"%rUo9DnjH!!;Bbl2C\[
!!DHc!9s:Z"R,mdl08$E!9sI_!9s=[!9sI_!9s=["R5.N!9s:Z"6fdcl,`q<!!98&XnVkuXT/@'q#CQ"
!!'.'q>^MtrVur#q>^MtrVur#qu?p$!3N@'!3Q%s"0DP'Xd&nU!!6s:D"mu4C]FHOq#CP6!!$hOq>^M3
rVuq7q>^M3rVuq7q>^Y7C]FHOq#CM5!!$in!2TYs9)qW[!!>jo!)*+f"A8^p92#-^!<>dl!!#[g!!#[k
!!#[g!!Gqf!!#[f!!>jo!)(61_#OQ$!9s7Y"6fdcl1k;Zl2CY_l1tA[l2CY_l1tA[l2CY_l1tA]kl:\a
!9s:Z"6fdcl&Yo<!!98&XnVkuXT/@'q#CDsrVur#q>^MtrVur#q>^MtrVur#q>^MtrVur#q#CN!!!'.U
!3-##C]J;H!!@$;!,VH2!,VW7!,VK3!,VW7!,VK3!,VW7!,VK3!,VW7!,VH2")Ir;Co79i!!5dn9DAJh
9)nrbq#CCfrVupkq>^LgrVupkq>^LgrVupkq>^LgrVupkq#CLi!!#[_!0[BbklBu4q#CQ^!!)6`q>^N[
rVur_q>^N[rVur_q>^N[rVur_q>^N[rVur_q#CN]!!)8t!65'AXT5K*q#CN!!!'.s!!'/#!!'.t!!'/#
!!'.t!!'/#!!'.t!!'/#!!'/"!;um"XT/@'M?*MR")IsRD#"&5C]FHOq#CD2rVuq7q>^M3rVuq7q>^M3
rVuq7q>^M3rVuq7q#CM5!!$ic!3cG*9)qUXq#CLi!!#[f!!#[k!!#[g!!#[k!!#[i!!3-#9E"nk9DSVg
9E"nk9DJPi9)nrbT`F-R"6fdcl1k;]kl:_Jq#CEZrVur_q>^N[rVur_q>^N[rVur_q>^N[rVur_q#CN]
!!)9M!1<fhXT/@'q#CN!!!'.t!!*)%rVur#q>^MtrVur#q>^MtrVur#q>^MtrVur#q#CN!!!'.2!6kKG
C]FHOq#CM5!!$j2!!$j7!!$j3!!$j7!!$j3!!$j7!!$j3!!$j7!!$j2!!-m9!<?qh!!>jo!)*+f"%rUo
9DJPf9E"nk9DSVg9E"nk9DSVg9E"nk9DSVg9E"nk9DJPi9)nrbcN(BR"6fdcl1k;]kl:_Jq#CEZrVur_
q>^N[rVur_q>^N[rVur_q>^N[rVur_q#CN]!!)9Y!<;;\!9sOdXT/@'q#CN!!!'.s!!'/#!!'.t!!'/#
!!'.t!!'/#!!'.t!!'/#!!'.s!!B>'!3Q"rs/kekT)\t0!!$j2!!@$;!,VH2!,VW7!,VK3!,VW7!,VK3
!,VW7!,VK3!,VW7!,VH2")Ir;D"n#1CqTht!!>jo!)*+f"%rUo9DJPf9E"nk9DSVg9E"nk9DSVg9E"nk
9DSVg9E"nk9DJPi9)nrbr;c`qs%Ad\!9s4X"mH!ekl:_]!!MQN!!)9Z!!)9_!!)9[!!)9_!!)9[!!)9_
!!)9[!!)9_!!)9Z!!DHc!9s7Ys68#5`rH+ApAb;t!!'.t!!KF+!!'.s!!'/#!!'.t!!'/#!!'.t!!'/#
!!'/!!!3-#Xo8;#Xn_r!XT/@'p]1>rTE+ih!,VB0")Ir;D#+,7Chs(OD#"&2D#OD7D#+,3D#OD7D#+,3
D#OD7D#+,3D#OD7D#"&5C]FHOp]1>1lN"-h!)*%d"%rUo9DSVk91o6b9DJPf9E"nk9D\\i!)*:k!)*.g
!)*:k!)*.g!)*:k!)*+f"%rUo9DAMe9@!U^!<;<Y!!DHc!9s=[!9sI_!9s=[s69L_!9s=[!9sI_!9s=[
!9sI_!9s=[!pK[b!<DB[!!DHc!9s7Ys66!Q!W]@)p](Du!!'.t!!'/#!!'.t!<92#!!'.t!!'/#!!'.t
!!'/#!!'.t!!'/#!!'.s!!B>'!3Q"rs/kD`[/g5Cp](D4!!$j3!!$j7!!$j3!<6m7!!$j3!!$j7!!$j3
!!$j7!!$j3!!$j7!!$j2!!@$;!,VE1s(nt@klC`Vp](Ch!!#[g!!#[k!!#[g!<5^k!!#[g!!#[k!!#[g
!!#[k!!#[g!!#[k!!#[f!!>jo!)*(es%E:jT)elTp](E\!!)9[!!)9_!!2<aqZ$W\r;Zi^q>^N[rVur_
q>^N[rVur_q>^N[rVur_q#CN]!!)9Y!<26*!7LrIXnVkuXT/@'q>^MtrVur#q>^Mtr;Zi"q>^MtrVur#
q>^MtrVur#q>^MtrVur#r;ccr"0DP'XnVnqXdfCjD#OG3!!@$;!,VK3!,VW7!,VK3!,VT6!,VK3!,VW7
!,VK3!,VW7!,VK3!,VW7!,VH2")Ir;D"n#0CuGB,!<,Xd!!>jo!)*.g!)*:k!)*.g!)*7j!)*.g!)*:k
!)*4i!WW3nrVupkq>^LgrVupkq#CLi!!#[e!<,Wn!:TsiklBuD!!MQN!!)9[!!)9_!<;<\!!)9^!!)9[
!!)9_!!)9[!!)9_!!)9[!!)9_!!)9Z!!DHc!9s:Z"6o%Ml1b7T!!98&Xn_r"XfVR'Xni"tXo8>#Xnr(u
Xo/5"Xni"tXo8;#Xni"tXo8;#Xni"tXo8;#Xn_r!XT/@'q#CN!XT5KA!8.>RC]J;I!!I+S!!$j3!!$j7
!<6m4!!$j6!!$j3!!$j7!!$j3!!$j7!!$j3!!$j7!!$j2!!-m9!<?s3!!@%R!,S/*!_WMdq#CCf"%rUo
9DSVg9E"qk9D\\h9Dnhj9DSVg9E"nk9DSVg9E"nk9DSVg9E"nk9DJPi9)nrbq#CLi9)qW>!5\^;klBuD
!!)9_!!)9[!!)9^!!)9\!!)9^!!)9[!!)9_!!)9[!!)9_!!)9[!!)9_!!)9Z!!DHc!9s:Z"6fdcl)+OT
!!98&Xn_qsXo8;#Xni"tXo/5"Xnr(uXo/5"Xni"tXo8;#Xni"tXo8;#Xni"tXo8;#Xn_r!XT/@'q#CN!
!!'.l!36)$C]J;I!!$j7!!$j3!!$j6!!$j4!!$j6!!$j3!!$j7!!$j3!!$j7!!$j3!!$j7!!$j2!!@$;
!,VH2")Ir;Cq]o,!!5dn9DJPf9E"nk9DSVg9Dnhj9D\\h9Dnhj9DSVg9E"nk9DSVg9E"nk9DSVg9E"nk
9DJPi9)nrbr;ccr"%rUo9:Pt`klBuD!!)9_!!;Bb!;lfsl2:S^l2(G\l2:S^l2(J\l2CY_l1tA[l2CY_
l1tA[l2CY_l1tA_l0/0Jl1k;]kl:_JeH!Yj!j)I)q#CDsrVur#q>^Mtr;Zi"qZ$Vur;Zi"qZ-YurVur#
q>^MtrVur#qu?cu!3Q5#!3Q(t"Ked+!3Q%s"0DP'Xe>am!!6s:D#"&2D#OD7D#+,3D#F>6D#424D#F>6
D#454D#OD7D#+,3D#OD7D#+,3D#OD7D#+,7Chs(OD#"&5C]FHOli=9j!_WMdq#CCfrVupkq>^Lgr;Zgj
qZ$Uhr;ZgjqZ-XhrVupkq>^LgrVupkq>^LgrVupkq>^Xk9)nrbq#CLi!!#[=!6kKFklBuD!!)9_!!)9[
!!)9^!!)9\!!)9^!!)9\!!)9^!!)9[!!)9_!!)9[!!;Bb!!3/bl2(G\l2CY_l1k;]kl:_JS,`Vm!3Q%s
!3Q5#!3Q(t!3Q2"!3Q+u!3Q2"!3Q+u!3Q2"!3Q(t!3Q5#!3Q(t!3Q5#s/l.u!3Q5#!3Q%s"0DP'Xlf\m
!!6s:D#"&2D#OD7D#+,3D#F>6D#424D#F>6D#424D#F>6D#+,3D#OD7D#+,3D#OG7D#424D#OD7D#"&5
C]FHOZN07j!_WMdq#CCfrVupkq>^Lgr;ZgjqZ$Uhr;ZgjqZ$Uhr;Zgjq>^LgrVupkq>^LgrW)skqZ$Uh
rVupkq#CLi!!#[k!1s5nklBu4q>^N[rVur_q>^N[r;Zi^qZ$W\r;Zi^qZ$W\r;Zi^q>^N[rVur_q>^N[
r;Zi^qZ$W\rW)u_q>^W^!!)9+!7LoMXT5K*q>^MtrVur#q>^Mtr;Zi"qZ$Vur;Zi"qZ$Vur;Zi"q>^Mt
rVur#q>^Mtr;Zi"rW)ot!3Q5#s/l+t"0DP'Xdf@pC]J9f!!)os!,VW7!,VK3!,VT6!,VN4!,VT6!,VN4
!,VT6!,VK3!,VW7!,VK3!,VT6!,VN4!,VW7s(qN3")Ir;CuGB,!!>jo92#*]!)*:k!)*.g!)*7j!)*1h
!)*7j!)*1h!)*7j!)*4i!WW3nrVupkq>^Lgr;ZgjqZ$UhrW)skq>^Uj!!#Zo!:^$ll0/0Jl1tA[l2CY_
l1tA[l2:S^l2(G\l2:S^l2(G\l2:S^l1tA[l2CY_l1tA[l2:S^l2(G\l2:S^l1tA^kl:_Jp]./k"Ked+
!3Q(t!3Q5#!3Q(t!3Q2"!3Q+u!3Q2"!3Q+u!3Q2"!3Q(t!3Q5#!3Q(t!3Q2"!3Q+u!3Q2"!3Q(t"0DP'
Xi(4n!!I+S!!$j3!!$j7!!$j3!!$j6!!$j4!!$j6!!$j4!!$j6!!$j3!!$j7!!$j3!!$j6!!$j4!!6s:
!!3-#D#+,6C]FHOSH&dc9)nrbq>^LgrVupkq>^Lgr;ZgjqZ$Uhr;ZgjqZ$Uhr;Zgjq>^LgrVupkq>^Lg
r;ZgjqZ$Uhr;Zgjq>^Uj!!#[H!5ed:l2CY_l1tA[l2CY_l1tA[l2:S^l2(G\l2:S^l2(G\l2:S^l1tA[
l2C\_l2(G\l2:S^l2(G\l2:S^l1tA^kl:_Jp]1?YZ2jV!!3Q5#!3Q(t!3Q5#!3Q(t!3Q2"!3Q+u!3Q2"
!3Q+u!3Q2"!3Q(t!3Q5#s/l.u!3Q2"!3Q+u!3Q2"!3Q(t"0DP'XnVnrXo/7$!!$j7!!$j3!!$j7!!$j3
!!$j6!!$j4!!$j6!!$j4!!$j6!!$j3!!$j7!<6m4!!$j6!!$j4!!$j6!!$j3!!@$;!,VE1s(odWhuEaM
rVupkq>^LgrVupkq>^Lgr;ZgjqZ$Uhr;ZgjqZ$Uhr;Zgjq>^LgrW)skqZ$Uhr;ZgjqZ$Uhr;ZgjrW)ls
"%rUo9DAMe9;hgjl2CY_l1tA[l2CYakl:_]!!)9^!!)9\!!)9^!!)9\!!)9^!!)9[!!)9^!!)9\!!)9^
!!)9\!!)9^!!)9[!!MNd!9rbD!<26A!6G3@Xo8;#Xni"tXo8;#Xni"tXo/5"Xnr(uXo/5"Xnr(uXo/5"
Xni"tXo/5"Xo/5$!!'/"!!'.u!!'/"!!'.t!!KD(!3NC!!<0+&!;ultD#OD7D#+,3D#OD7D#+,3D#F>6
D#424D#F>6D#424D#F>6D#+,3D#F>6D#424D#F>6D#424D#F>6D#+,7C]FHOD#")1D"n"9!!#[k!!#[g
!!#[k!!#[g!!#[j!!#[h!!#[j!!#[h!!#[j!!#[g!!#[j!!#[h!!#[j!!#[h!!#[j!!#[g!!Gpp!)#u\
!<,XH!8.AOl1k;Zl2CY_l1tA[l2C\_l2(G\l2:S^l2(G\l2:S^l2(G\l2:S^l2(J\l2:S^l2(G^kl:\b
!!)9\!!)9^!!)9[!!)9_!!)9Z!!;Bbl*LHiXn_qsXo8;#Xni"tXo8>#Xnr(uXo/5"Xnr(uXo/5"Xnr(u
Xo/5"Xnr+uXo/5"Xnr(uXo/5"Xnr(uXo/5"Xni"tXo8;#Xn_quXT5Kp!5\a8D#"&2D#OD7D#+,3D#OG7
D#424D#F>6D#424D#F>6D#424D#F>6D#454D#F>6D#424D#F>6D#424D#F>6D#+,3D#OD7D#"&4C]J:d
!;6El9DJPf9E"nk9DSVg9E"qk9D\\h9Dnhj9D\\h9Dnhj9D\\h9Dnhj9D\_h9Dnhj9D\\h9Dnhj9D\\h
9Dnhj9DSVg9E"nm9)nth!!5dn9=+[#klBuD!!)9_!!)9[!!)9^!!)9\!!)9^!!)9\!!)9^!!)9\!!)9^
!!)9\!!)9]!!)9\!!)9^!!)9\!!)9^!!)9[!!)9_!!)9Z!!;Bbl.,jl!!98&Xn_qsXo8;#Xni"tXo/5"
Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo&/!Xnr(uXo/5"Xo8>"!!'/"!!'.t!!'/#!!'.s!!98&
XgA'0C]J;I!!$j7!!6s:!;lfsD#F>6D#424D#F>6D#424D#F>6D#424D#F>6D#424D#=85D#424D#F>6
D#424D#F>6D#+,3D#OD7D#"&4C]J;=!6>-A9)qW\!!#[k!!#[g!!#[j!!#[h!!#[j!!#[h!!#[j!!#[h
!!#[j!!#[i!!*'mqu?^iqZ$Uhr;ZgjqZ$Uhr;Zgjq>^LgrVupkq#CIh!)'j&qu?f_!9s:Z!9sI_!9s=[
!9sF^!9s@\!9sF^!9s@\!9sF^!9s@\!9sF^!9s@\!9sC]!9s@\!9sF^!9s@\!9sF^!9s@\s69L_!9s=[
!9jRL!9pij!j)I)q#CDsrVur#q>^Mtr;Zi"qZ$Vur;Zi"qZ$Vur;Zi"qZ$Vur;Zi"qZ$Vuqu?`!qZ$Vu
r;Zi"qZ$Vur;Zi"qZ-YurVur#q>^W"XT5KM!9F1^C]J;I!!$j7!!$j3!!$j6!!$j4!!$j6!!$j4!!$j6
!!$j4!!$j6!!$j4!!$j5!!$j4!!$j6!!$j4!!6s:!!3-#D#454D#OD7D#+,6Chs)fZiC/#!)*+f!)*:k
!)*.g!)*7j!)*1h!)*7j!)*1h!)*7j!)*1h!)*7j!)*1h!)*4i!)*1h!)*7j!)*1h!)*7j!)*1hs%E=k
!)*.g"%u8e9BQ<$!!DKM!9s:Z!9sI_!9s=[!9sF^!9s@\!9sF^!9s@\!9sF^!9s@\!9sF^s69F]!9sF^
!<DB]!!)9^!!)9\!!)9^!!)9\!!)9^!!)9[!!DHc!9plks/c;%Xn_qsXo8;#Xni"tXo/5"Xnr(uXo/5"
Xnr(uXo/5"Xnr(uXo/8"Xo&/!Xo&/!Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo/5"Xni#"XT/@'rW'G.")McR
D#"&2D#OD7D#+,3D#F>6D#424D#F>6D#424D#F>6D#424D#FA6D#=85D#=85D#424D#F>6D#424D#F>6
D#424D#F>6D#+,6C]FHOaoLc."%u8e9DJPf9E"nk9DSVg9Dnhj9D\\h9Dnhj9D\\h9Dnhj9D\\h9Dnkj
9Debi9Debi9D\\h9Dnhj9D\\h9Dnhj9E"qj!!#[j!!#[g!!>jo!)'^""6fdcl1k;Zl2CY_l1tA[l2:S_
klCV]!9sF^!9s@\!9sF^!9s@\!9sC]!9sC]!9sC]!9s@\!9sF^!9s@\!9sF^!9s@\!9sF^!9s=["R,md
l071-eGo]R!!'.s!!'/#!!'.t!!'/"!!'.u!!'/"!!'.u!!'/"!!'.u!!'/!!!'/!!!'/!!!'/"!!3-#
Xo/5"Xnr(uXo/5"Xnr(uXo/5"Xni##XT/@'XgS33C]FHOr;ccr!,VW7!,VK3!,VT6!,VN4!,VT6!,VN4
!,VT6!,VN4!,VQ5!,VQ5!,VQ5!,VN4!,VT6!,VN4!,VT6!,VN4!,VT6!,VK3"De&<Ci&nI^&S7.!!#[f
!!#[k!!#[g!!#[j!!#[h!!#[j!!#[h!!#[j!!#[h!!#[i!!#[i!!#[i!!#[h!!#[j!!#[h!!#[j!!#[h
!!#[j!!#[g!!Gpp!)#u@!87DUkl:_Jl1tA[l2CY_l1tA[l2:S^l2(G\l2:S^l2(G\l2:S^l2(G\l21M]
l21M]l21M]l2(G^kl:\b!!)9\!!)9^!!)9\!!)9^!!)9[!!)9_!!)8l!!KD(!3NC"!!'/#!!'.t!!'/"
!!'.u!!'/"!!'.u!!'/"!!'.u!!'/!!!'/!!!'/!!!'.u!!'/"!!'.u!!'/"!!'.u!!'/"!!'.t!!'/#
!!'.n!5ed>C]FHOD#+,3D#OD7D#+,3D#F>6D#424D#F>6D#424D#F>6D#424D#F>7!,VQ5!,VQ5!,VN4
!,VT6!,VN4!,VT6!,VN4!,VT6!,VK3!,VW7!,TFNpAb=h!!#Ybq>^LgrVupkq>^Lgr;ZgjqZ$Uhr;Zgj
qZ$Uhr;ZgjqZ$Uhqu?^iqu?^iqu?^iqZ$Uhr;ZgjqZ$Uhr;ZgjqZ$Uhr;Zml!!)os!)*:k!)'a#!9sI_
!9s=[!9sI_!9s=[!9sF^!9s@\!9sF^!9s@\!9sF^!9s@\!9sC]!9sC]!9sC]!9s@\!9sF^!9s@\!9sF^
!9s@\!9sF^!9s=[!9sI_!9r)8huEbZrVur#q>^MtrVur#q>^Mtr;Zi"qZ$Vur;Zi"qZ$Vur;Zi"qZ$Vu
qu?`!qu?`!qu?`!qZ$Vur;Zi"rW)ot!3Q2"!3Q+u!3Q2"!3Q(t!3Q5#!3N[0!,VW7!,VK3!,VW7!c.i:
qu?_5r;Zh6qZ$V4r;Zh6qZ$V4r;Zh6qZ$V4qu?_5qu?_5qu?_5qZ$V4r;Zh6qZ$V4r;Zh6qZ$V4r;Zh6
q>^M3rVuq7mJt?/!)*:k!)*.g!)*:k!)*.g!)*7j!)*1h!)*7j!)*1h!)*7j!)*1h!)*4i!)*7j!<>dj
!!#[h!!#[j!!#[h!!#[j!!#[h!!#[j!!#[g!!#[k!!#['!;ultl2CY_l2(J\l2C\_l21P]l2:S^l2(G\
l2:S^l2(G\l2:S^l2(G\l21M]l21M]l21M]l21P]l2:S^l2(G\l2:S^l2(G\l2:S^l1tA[l2CY_l1k>Y
l+m?"Xo8;#Xnr+uXo8>#Xo&2!Xo/5"Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo&/!Xo&/!Xo&/!Xo&2!Xo/5"
Xnr(uXo/5"Xnr(uXo/5"Xni"tXo8;#Xn_trXkWp=!!$j7!!$j4!<6m7!<6m5!<6m6!!$j4!!$j6!!$j4
!!$j6!!$j4!!$j5!!$j5!!$j5!!$j5!<6m6!!$j4!!6s:!!3-#D#424D#F>6D#+,3D#OD7D#")1Cr$)O
9E"nk9D\_h9E"qk9Deei9Dnhj9D\\h9Dnhj9D\\h9Dnhj9D\\h9Debi9Debi9Debi9Deei9Dnhj9D\\h
9Dnhj9D\\h9Dnhj9DSVg9E"nk9DJSe9Ci/;!<26Y!!)9_!!)9\!!)9]!!)9]!!)9]!!)9\!!)9^!!)9\
!!)9^!!)9\!!)9]!!)9]!!)9^!!*)aqu?`]qu?`]qZ$W\r;Zi^qZ$W\r;Zi^qZ-Z\rVur_q#CK\!9q]-
riPtr!Nc>'!!'.u!!'/!!!'/!!!'/!!!'.u!!'/"!!'.u!!'/"!!'.u!!'/!!!'/!!!'/!!!'/!!!'/!
!!'.u!!'/"!!'.u!!'/"!!'.u!<92#!!98&!;c`tXT5KI!<-g1!!$j7!!$j4!!$j5!!$j5!!$j5!!$j4
!!$j6!!$j4!!$j6!!$j4!!$j5!!$j5!!$j5!!$j5!!$j5!!$j4!!$j6!!$j4!!$j6!!$j4!<6m7!!$j2
!!6s:Ct8U\!<,Xe!!#[k!!#[h!!#[i!!#[i!!#[i!!#[h!!#[j!!#[h!!#[j!!#[h!!#[i!!#[i!!#[i
!!#[i!!#[i!!#[h!!#[j!!#[k!<)ru9Dnhj9D\_h9E"nk9DJPh9)qW0!!DKM!9s=[s69L_!9s@\!9sC]
!9sC]!9sC]!U0U^!!)9^!!)9\!!)9^!<;<]!!)9]!!)9]!!)9]!!)9]!!)9]!!)9\!!)9^!!)9\!!)9^
!!)9\!!)9^!!)9[!!MQN!9rb9!9!n[XfVT*q>gPtrVur#qZ$Vuqu?`!qu?`!qu?`!qZ$Vur;Zi"qZ$Vu
r;cl"qu?`!qu?`!qu?`!qu?`!r;ZiuXo&/!Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo/5"Xni##XfVT*Xj-nK
Chs)fq>gP3rVuq7rW)ot!,VQ5!,VQ5!,VQ5!,VN4!,VT6!,VN4!,VT6s(qT5!,VQ5!,VQ5!,VQ5!,VQ5
!,VQ5!,VN4!,VT6!,VN4!,VT6!,VN4!,VT6!,VK3!,MaR!,QJs!!>ke!)*.gs%E=k!)*1h!)*4i!)*4i
!)*4i!)*1h!)*7j!)*1h!)*7js%E7i!)*4i!)*4i!)*4i!)*4i!)*4i!)*1h!)*7j!)*1h!)*7j!)*1h
!)*7j!)*.g"A;Af92"LLjo>PK!!)9JqZ$W\r;Zi^qZ$W\qu?`]qu?`]qu?`]quHc]r;Zi^qZ$W\qu?`]
qu?`]qu?`]qu?`]qu?`]qu?`]rW!!"!9s@\!9sF^!9s@\!9sF^!9s@\!9sF^!9s=[!9sI_!9qc/"K_Y(
Xf_I#!3Q2"!3Q+u!NcA#!!'/!!!'/!!!'/!!<92"!!'.u!!'/!!!'/!!!'/!!!'/!!!'/!!!'/!!!'/!
!!'.u!!'/"!!'.u!!'/"!!'.u!!'/"!!'.t!!'/#!!02%cN")a!!$hOqZ$V4r;Zh6qZ$V4qu?_5qu?_5
qu?_5quHb5r;Zh6qZ$V4qu?_5qu?_5r;ZiuD#=85D#=85D#=85D#=85D#424D#F>6D#424D#F>6D#424
D#F>6D#+,3D#OD7CsE"]9)o"n92#-^!)*7j!)*1h!)*4i!)*4i!)*4i!)*4is%E:j!)*1h!)*4i!)*4i
!)*4i!)*4i!)*4i!)*4i!)*4i!)*1h!)*7j!)*1h!)*7j!_WLnr;Zgjr;Zgjq>^LgrVupkcN+"0rVur_
qZ$W\r;Zi^qZ$W\qu?`]qu?`]qu?`]qu?`]qu?`]qZ$W\qu?`]qu?`]qu?`]qu?`]qu?`]qu?`]qu?`]
qZ$W\r;Zi^qZ$W\r;cl^qu?`]r;cl^qZ$W\rVur_q#LEYpAk3WqZ-!`s/l8#!3Q+u!3Q2"!3Q+u!3Q/!
!3Q/!!3Q/!!3Q/!!3Q/!!3Q+u!3Q/!!3Q/!!3Q/!!3Q/!!3Q/!!3Q/!!3Q/!!3Q5#rVur#r;Zi"qZ$Vu
r;cl"qu?`!r;cl"qZ$VurVur#q#LDrpAk2pk5bNurVuq7qZ$V4r;Zh6qZ$V4qu?b6!;ultD#=85D#=85
D#=85D#424D#=85D#=85D#=85D#=85D#=85D#=85D#=85D#424D#F>6D#424D#FA6D#=85D#FA6D#424
D#OD7D#+,3!<-g/!<-ft!<5^k!!#[h!!#[j!!#[h!!#[i!!#[i!!#[i!!#[i!!#[i!!#[h!!#[i!!#[i
!!#[i!!#[j!!*'mqu?^iqu?^iqu?^iqZ$Uhr;ZgjqZ$Uhr;cjjqu?^ir;cjjqZ$UhrVupkq#LCepAk1c
nc8XQq>^N[r;Zi^rW)ot!9sF^s69F]!9sC]!9sC]!9sC]!9sC]!9sC]!9s@\!9sC]!9sC]!9sC]!9sC]
!9sC]!9sC]!9sC]!9s@\!9sF^!9s@\!9sC]!9sC]!U0U_!!)9]!<;<_!<;<\!!MQN!9rbD!!DKM!9s%S
rN5nr!3Q2"!3Q+u!3Q2"s/l2!!3Q/!!3Q/!!3Q/!!3Q/!!3Q/!!3Q+u!3Q/!!3Q/!!3Q/!!3Q/!!3Q/!
!3Q/!!3Q/!!3Q+u!3Q2"!3Q+u!3Q/!!3Q/!!3Q/!!3Q/!s/l8#s/l.u"Ked+Xf_C!"0J[*Xn;\n!<$a1
!!$j6!!$j4!!$j6!<6m5!!$j5!!$j5!!$j5!!$j5!!$j5!!$j4!!$j5!!$j5!!$j5!!$j5!!$j5!!$j5
!!$j5!!$j4!!6s:!!3-#D#424D#=85D#=85D#=85D#=;5D#OG7D#428Chs)fD#"&5Chs)fnc8V]q>^Lg
r;ZgjqZ$Uhr;cjjqu?^iqu?^iqu?aj!;ult9Debi9Debi9D\\h9Debi9Debi9Debi9Debi9Debi9Debi
9Debi9D\\h9Dnhj9D\\h9Debi9Debi9Debi9Deei9E"qk9D\\m91o7X9*"eg"%u8e9Ci/`l2Lb`l2(G\
l2:S^l2(G\l21M]l21M]l21M]l21M]l21M]l21M]l21M]l2(G\l21M]l21M]l21M]l21M]l2:S_!9sC]
!9sC]!9sC]s69I^s69F]!9sC]!9sC]!9sC]!9sC]!9sC]!9s@\!9sI_s69C\s69"Qs/l;$s/l.u!3Q2"
!3Q+u!j)G&rVur#qu?`!qu?`!qu?`!qu?`!qu?`!qu?`!qZ$Vuqu?`!qu?`!qu?`!qu?`!qu?`!qu?`!
qu?`!quHc!r;cl"qu?`!qu?`!qu?`!qu?c"!;ultXo&/!Xnr(uXo8>#Xnr+uXmc>jD#XM8D#424D#F>6
D#424D#=85D#=85D#=85D#=85D#=85D#=85D#=85D#424D#=85D#=85D#=85D#=85D#=85D#=85D#=85
D#=;5D#FA6D#=85D#=85D#=85D#=85D#=85D#=85D#424D#OG7D#454D"%H)9E,"l9D\\h9Dnhj9D\\h
9Debi9Debi9Debi9Debi9Debi9Debi9Debi9D\\h9Debi9Debi9Debi9Debi9Debi9Debi9Debi9Deei
9Dnkj9E,"k!!#[i!!#[i!!#[i!!#[i!!#[i!!#[h!!#[k!<5^h!<5^b!<#4`l2<pJl2<pJl2<pJl23gI
l23gIl23gIl23gIl23gIl23gJks>86!9sDI!9sAH!9sDI!9sDI!9sDI!9sDI!9sDI!9sDI!9sDI!9sDI
!9sAH!9sDI!9sDI!9sDI!9sDI!9sDI!9sDI!9sDIs69JJs69JJ!9jLJrB^2YrU^&krU^&krU^&krU^&k
r:9ojr:9ojr:9ojr:9ojr:9ojr:9ojr:9ojr:9ojqssfir:9ojr:9ojr:9ojr:9ojr:9ojrUU']Xo.bj
Xo.bjXo%\iXo.bjXo.bjXo.bjXo.bjXo.bjXo.bjXo.ejXo7kkXo7kkXo7kd!<)6`D#N]"D#N]"D#N]"
D#ET!D#ET#D!UEdlMtc!lMtc!lMtc!lMtc!lMtc!lMtbulMtc!lMtc!lMtc!lMtc!lMtc!lMtc!lMtc!
lMtc!lMtbulMtc!lMtc!lMtc!lMtc!lMtc!lN(hfrTaH"r9OB!rTjK"rTjK"rTj4YrAO[KrAO[KrAO[K
rAO[Kr&+OJr&+OJr&+OJr&+OJr&+OJr&+OJr&+OJr&+OJq_eFIr&+OJr&+OJr&+OJr&+OJr&+OJr&+OJ
r&+OJr&+OJq_eFIr&+OJr&+OJr&+OJr&+OJr&+OJr&+OJr&4RJrAO[KrAO[KrAO<Ks69C\!9sF^!9s@\
!9sF^s69F]!9sC]!9sC]!9sC]!9sC]!9sC]!9sC]s69I^s69F]!9sC]!9sC]!9sC]!9sC]!9sC]!9sI_
!WW5bqu?`]qZ$W\qu?`]qu?`]qu?`]qu?`]qu?`]quHc]r;Zi^qZ-Z\rrE)`n,WKjqZ$Vur;Zi"qZ$Vu
r;cl"qu?`!qu?c"!;ultXo&/!Xo&/!Xo&/!Xo&2!Xo/8"Xo&/!Xo&/!Xo&/!Xo&/!Xo&/!Xo&/!Xo&/!
Xo&/!Xnr(uXo&/!Xo&/!Xo&/!Xo&/!Xo&/!Xo&/!XT5L%!!'.u!<92$!<91j!<6m4!!$j6!!$j4!!$j6
!<6m5!!$j5!!$j5!!$j5!!$j5!!$j5!!$j5!<6m6!<6m5!!$j5!!$j6!!*(9qu?_5qu?_5qu?_5qu?_5
qu?_5qZ$V4qu?_5qu?_5qu?_5qu?_5qu?_5quHb5r;Zh6qZ-Y4rrE(8n,WJ]qZ$Uhr;ZgjrW)ot!)*7j
s%E7i!)*4i!)*4i!)*4i!)*4i!)*4i!)*4is%E:js%E7i!)*4i!)*4i!)*4i!)*4i!)*4i!)*4i!)*4i
!)*1h!)*4i!)*4i!D<Fk!!#[i!!#[i!!#[i!<5^j!!#[h!<5^l!<5^`!<)0Y!<;<`!<;<\!!)9^!!)9\
!!)9]!!)9]!!)9]!!)9]!!)9]!!)9\!!)9^!!)9\!!)9]!!)9]!!)9]!!)9]!!)9]!!)9]!!)9]!!)9\
!!)9^!<;<]!!)9]!!)9]!!)9]!!)9\!!)9_!<;<[!<)0T!<)usXni%tXoAD$Xnr(uXo/5"Xnr(uXo&/!
Xo&/!Xo&/!Xo&/!Xo&/!Xnr(uXo/5"Xnr(uXo&/!Xo&/!Xo&/!Xo&/!Xo&/!Xo&/!Xo8;%!!'.u!!'/"
!<92!!!'/!!!'/!!!'/!!!'.u!!'/#!<91t!<'%j!<$a1!<6m8!<6m4!!$j6!!$j4!!$j5!!$j5!!-m9
r;Zh6qu?_5qu?_5qZ$V4r;Zh6qZ$V4qu?_5qu?_5qu?_5qu?_5qu?_5qu?_5qu?_5qZ$V4r;ck6qu?_5
qu?_5qu?_5qu?_5qZ$V4rW)t7q>gJ1nc8V]q>gOgrrE'lqZ$Uhr;ZgjqZ$Uhqu?^iqu?^iqu?^iqu?^i
qu?^iqZ$Uhr;ZgjqZ$Uhqu?^iqu?^ir;Ziu9Debi9Debi9Debi9Debi9D\\h9Dnkj9Debi9Debi9Debi
9Debi9D\\h9E"qk9DSYe9BH3Vl0/34q>^T]!!!'#!9s@\!9sC]!9sC]!9sC]!9sC]!9sC]!9s@\!9sF^
!9s@\!9sC]!9sC]!9sC]!9sC]!9sC]!9sC]!9sC]!9s@\!9sF^!9s@\!9sC]!U0U_!<;<_!<;<\!!MQN
!9rb%!!B@*!3Q(t!3Q2"!3Q+u!3Q/!!3Q/!!3Q/!!3Q/!!3Q/!!3Q+u!3Q2"!3Q+u!3Q/!!3Q/!!3Q/!
!3Q/!!3Q/!!3Q/!!3Q/!!3Q+u!3Q2"!3Q+u!3Q/!!3Q/!s/l8#s/l.u"Ked+Xf^U`p](D4C]J;J!!$j6
!!$j4!!$j5!!$j5!!$j5!!$j5!!$j5!!$j4!!$j6!!$j4!!$j5!!$j5!!$j5!!$j5!!$j5!!$j5!!$j5
!!$j7!<)ruD#F>6D#424D#=85D#=;5D#OG7D#428Chs)fCt\jk91o7Xq>^Lgr;ZgjqZ$Uhqu?^iqu?^i
qu?aj!;ult9Debi9D\\h9Dnhj9D\\h9Debi9Debi9Debi9Debi9Debi9Debi9Debi9D\\h9Dnhj9D\\h
9Debi9Deei9E"qk9D\\l91o7X9DSYH!<26Z!<;<_!!)9\!!)9^!<;<]!!)9]!!)9]!!)9]!!)9\!!)9^
!!)9\!!)9]!!)9]!!)9]!!)9^!!*)aqu?`]quHc]r;Zi^qZ$W\r;Zi^qZ$W\r;cl^qZ$W\rVur_q#LEY
fDtoQq>gPtrVur#rW)ot!3Q2"s/l2!!3Q/!!3Q/!!3Q/!!3Q+u!3Q2"!3Q+u!3Q/!!3Q/!!3Q/!!3Q/!
!3Q/!!3Q/!s/l5"!3Q+u!3Q2"!3Q+u!3Q2"s/l.u!3Q5#!3Q%sriOfQrbVE2s(qZ7!,VN4!,VT6s(qT5
!,VQ5!,VQ5!,VQ5!,VN4!,VT6!,VN4!,VQ5!,VQ5!,VQ5!,VQ5!,VQ5!,VQ5s(qW6!,VN4!,VT6!,VN4
!,VT6s(qQ4!,VW7!,VH2rbU?ir;cgiq>gOgrVupkqZ$Uhr;cjjqu?^iqu?^iqu?^iqu?^iqZ$Uhr;Zgj
qZ$Uhqu?^iqu?^iqu?^iqu?^iqu?^iquHair;ZgjqZ$[j!!!'#!)*1h!)*7js%E4h!)*:k!)*+fr_(K9
!9sI_!9s@\!9sF^!9s@\!9sC]!9sC]s69I^!9s@\!9sF^!9s@\!9sC]!9sC]!9sC]!9sC]!9sC]!9s@\
!9sF^!9s@\!9sF^!9s@\!9sF^!9s=[!9sI_!9s7Y!9s%SgAh5UrVur#qZ$Vur;Zi"qZ$Vuqu?`!quHc!
r;Zi"qZ$Vur;Zi"qZ$Vuqu?`!qu?`!qu?`!qu?`!r;ZiuXnr(uXo/5"Xnr(uXo/5"Xnr(uXo/5"Xni"t
Xo8;#XnVkrXipbFD#OD7D#426C]FG:!!$j4!!$j5!!$j5!<6m6!!$j4!!$j6!!$j4!!$j5!!$j5!!$j5
!!$j5!!$j5!!$j4!!$j6!!$j4!!$j6!!$j4!!$j6!!$j3!!$j7!!6s:!;ZZqCs2kZ9E"nk9D\\h9Dnhj
9D\\h9Debi9Deei9Dnhj9D\\h9Dnhj9D\\h9Debi9Debi9Debi9Debi9Debi9D\\h9Dnhj9D\\h9Dnhj
9D\\h9Dnhj9DSVg9E"nk9DAJe9C2`;!!MNd!9rbF!<;<_!!)9\!!)9]!!)9\!!)9^!!)9\!!)9^!!)9\
!!)9]!!)9]!!)9]!!)9]!!)9]!!)9_!<)rul2:S^l2(G\l2:S^l2(G\l2:S^l1tA[l2CY_l,!E'XT/@'
Xnr+uXo8;%XT/A"!!'/!!!'.u!!'/"!!'.u!!'/"!!'.u!!'/!!!'/!!!'/!!!'/!!!'/!!!'.u!!'/"
!!'.u!!'/"!!'.u!!'/"!!'.t!!'/#!!'.t!6G3DC]FHOD#454D#OD7D#424D#=85D#424D#F>6D#424
D#F>6D#424D#=85D#F>7!,VQ5!,VQ5!,VQ5!,VN4!,VT6!,VN4!,VT6!,VN4!,VT6!,VK3!,VW7!,TXT
r;Zsn!!#YbqZ-XhrVupkqZ$Uhqu?^iqZ$Uhr;ZgjqZ$Uhr;ZgjqZ$Uhqu?^iqu?^iqu?^iqu?^iqu?^i
qZ$Uhr;ZgjqZ$Uhr;ZgjqZ$Xi!<)ru9DSVg9E"nk9>UZ2kl:_Jq#CEZrVur_qZ-Z\r;Zi^qZ$W\r;Zi^
qZ$W\r;Zi^qZ$W\qu?`]qu?`]qu?`]qu?`]qu?`]qZ$W\r;Zi^qZ$W\r;Zi^qZ$W\r;Zi^q>^Z_!!)9J
h#QR;"0DP'Xn_qsXo8;#Xnr+uXo/5"Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo&/!Xo&/!Xo&/!Xo&/!Xo&/!
Xnr)"XT/>&!!'.u!!'/"!!'.u!!'/"!!'.t!!KD(!3NB?!!@$;!,VH2!,VW7!,VN4s(qW6!,VN4!,VT6
!,VN4!,VT6!,VN4!,VQ5!,VQ5!,VQ5!,VQ5!,VQ5!,VN4!,VT6!,VN4!,VT6!,VN4!,VT6!,VK3"De&<
Ci&_DcN"&?!!#[f!!#[k!!#[h!<5^j!!#[h!!#[j!!#[h!!#[j!!#[h!!#[i!!#[i!!#[j!!*'mqu?^i
qu?^iqZ$Uhr;ZgjqZ$Uhr;ZgjqZ$Uhr;Zgjq>^Xk!!#Yb_>sW#!<DB[!!)9_!!)9[!!)9^!!)9\!!)9^
!!)9\!!)9^!!)9\!!)9^!<;<]!!)9]!!)9]!!)9]!!)9\!!)9^!!)9\!!)9^!!)9\!<;<_!!;Bb!;lg!
kl:_J_#OS>XT5L!!!'/#!!'.t!!'/"!!'.u!!'/"!!'.u!!'/"!!'.u!!'/"!<92!!!'/!!!'/!!!'/!
!!'.u!!'/"!!'.u!!'/"!!'.u!<92#!!'.t!!B>'!3OfPli7-(C]J;I!!$j7!!$j3!!$j6!!$j4!!$j6
!!$j4!!$j6!!$j4!!$j6!<6m5!!$j5!!$j5!!$j5!!$j4!!$j6!!$j7!<)ruD#F>6D#454D#OD7D#+,6
C]FHO_#OR19)qW\!!#[k!!#[g!!#[j!!,^mqu?^ir;ZgjqZ$Uhr;ZgjqZ$Uhr;cjjqu?^iqu?^iqu?^i
qu?^iqZ$Uhr;ZgjqZ$Uhr;ZgjqZ-XhrVupkq>^Uj!!#[Z!7V#Jl1k;Zl2CY_l1tA[l2:S^l2(G\l2:S^
l2(G\l2:S^l2(G\l2:S^l2(G\l21M]l2:S_!9sC]!9s@\!9sF^!9s@\!9sF^!9s=[!9sI_!9s=["6o%M
l+d;uXo/7u!!'/#!!'.t!!'/"!!'.u!!'/"!!'.u!!'/"!!'.u!!'/"!!'.u!!'/!!!'/!!!'/!!!'.u
!!'/"!!'.u!!'/"!!'.t!!'/#!!'.t!!',&XT5K=!<-g1!!$j7!!$j3!!$j6!!$j4!!$j6!!$j4!!$j6
!!$j4!!$j6!!$j4!!$j5!!$j5!!$j5!!$j4!!$j6!!$j4!!$j6!!$j3!!$j7!!$j3!!@%R!,U!^nGrP]
q#CCfrVupkq>^Lgr;ZgjqZ$Uhr;ZgjqZ$Uhr;ZgjqZ$Uhr;ZgjqZ$Uhqu?^iqu?^iqu?^iqZ$Uhr;Zgj
qZ$[j!!!'#!)*.g!)*:k!)*.g"%u8e9>CQ-l1b5Yl2CY_l1tA[l2C\_l2(G\l2:S^l2(G\l2:S^l2(G\
l2:S^l2(G\l21M]l21P]l2:S^l2(G\l2:S^l2(G\l2:S^l1tA[l2CY_l1k>Yl/r'#!<91r!!'/#!!'.t
!!'/#!<91u!!'/"!!'.u!!'/"!!'.u!!'/"!!'.u!!'/!!!'/!!<92#!!*)%qZ$Vur;Zi"qZ$Vur;Zi"
q>^MtrVur#q#LDr^]=CNp](>2!!3-#D#+,3D#OG7D#424D#F>6D#424D#F>6D#424D#F>6D#424D#=85
D#=;5D#F>6D#424D#F>6D#424D#F>6D#+,3D#OD7D#")1D#OFP!<5^e!!#[k!!#[g!!#[k!<5^h!!#[j
!!#[h!!#[j!!#[h!!#[j!!#[h!!#[i!!#[i!<5^j!!#[h!!#[j!!#[h!!#[j!!#[g!!#[k!!#[f!<,XN
!7UuKl2CY_l1tA[l2CY_l1tA[l2:S^l2(G\l2:S^l2(G\l2:S^l2(G\l21M]l2(G\l2:S^l2C\^!!)9^
!!)9\!!)9^!!)9[!!)9_!!)9Z!<;;j!!'/#!!98&!;lfsXo8;#Xni"tXo/5"Xnr(uXo/5"Xnr(uXo/5"
Xnr(uXo&/!Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo/5"Xni"tXo8;#Xn_tsXnVn0!!$j7!!$j3!!$j7!!$j3
!!$j6!!$j4!!$j6!!$j4!!$j6!!$j5!!*(9qu?_5qZ$V4r;Zh6qZ$V4r;Zh6qZ$V4r;Zh6q>^M3rVuq7
q#LG2_uT<-!)*:k!)*.g!)*:k!)*.g!)*7j!)*1h!)*7j!)*1h!)*7j!)*1h!)*4i!)*1h!)*7j!)*1h
!)*7j!)*1h!)*7j!)*.g!)*:k!)*+fs%B^!!9sI_!9s=[!9sI_!9s=[!9sF^!9s@\!9sF^!9s@\!9sF^
!9s@\!9sC]!9s@\!9sF^!9s@\!9sF^!9s@\!9sF^!9s=[!9sI_!9ql2g&M,TrVur#q>^MtrVur#q>^Mt
r;Zi"qZ$Vur;Zi"qZ$Vur;Zi"qZ$Vuqu?`!qZ$Vur;Zi"qZ$]"!!!'#!3Q+u!3Q2"!3Q(t!3Q5#!3N7$
!,VW7!,VK3!,VW7!,VK3!,VT6!,VN4!,VT6!,VN4!,VT6!,VN4!,VQ5!,VN4!,VT6!,VN4!,VT6!,VN4
!,VT6!,VK3!,VW7!,Uj!_Z0[0rVupkq>^LgrVupkq>^Lgr;ZgjqZ$Uhr;ZgjqZ$Uhr;ZgjqZ$Uhr;Ziu
9D\\h9Dnhj9D\\h9Dnhj9D\\h9Dnhj9DSVg9E"nk9=+]n!!MNd!9rbE!!)9_!!)9[!!)9^!!)9\!!)9^
!!)9\!!)9^!!)9\!!)9]!!)9\!!)9^!!)9\!!)9^!!)9\!!)9^!!)9[!!_Zf!9r_J!3?/'XT/@'Xni"t
Xo8;#Xni"tXo/5"Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo&/!Xnr(uXo/5"Xnr(uXo/5"Xnr(uXo/5"Xni##
XT/@'Xig_&!!I*<!,QKJ!!$j7!!$j3!!$j6!!$j4!!$j6!!$j4!!$j6!!$j4!!$j5!!$j4!!$j6!!$j4
!!$j6!!$j7!<)ruD#F>6D#+,7C]FHOCoRI<9)nrb9DSVg9E"nm9)nti!!#[j!!#[h!!#[j!!#[h!!#[j
!!#[h!!#[i!!#[h!!#[j!!#[h!!#[j!!#[h!!#[j!!#[g!!Gpp!)#uE!6G3Cl0/34q#CEZrVur_q>^N[
r;Zi^qZ$W\r;Zi^qZ$W\r;Zi^qZ$W\r;cl^r;Zm!!9sF^!9s@\!9sF^!9s@\!9sF^!9s=["6fdcl)asa
!!B@*!3Q%s!3Q5#!3Q(t!3Q2"!3Q+u!3Q2"!3Q+u!3Q2"!3Q+u!3Q2"s/l.u!3Q2"!3Q+u!3Q2"!3Q+u
!3Q2"!3Q(t"0DP'XnVn%!!@%R!,VH2!,VW7!,VK3!,VT6!,VN4!,VT6!,VN4!,VT6!,VN4!,VT6s(qQ4
!,VT6!,VN4!,VT6!,VN4!,VT6!,VK3")Ir;Cr?>9!!>ke!)*+f!)*:k!)*.g!)*7j!)*1h!)*7j!)*1h
!)*7j!)*1h!)*7js%E4h!)*7j!)*1h!)*7j!)*1h!_WLn!WW3nq>^Uj!!#Zj!!;Bbl1k;Zl2CY_l1tA[
l2:S^l2(G\l2:S^l2(G\l2:S^l2(G\l2:S^l1tA[l2:S^l2(G\l2:S^l2(G\l2:S^l1tA^kl:_JgAoM!
!j)I)q#CDsrVur#q>^Mtr;Zi"qZ$Vur;Zi"qZ$Vur;Zi"qZ$Vur;Zi"q>^MtrVus!Xnr(uXo/5"Xnr(u
Xo/5"Xni#"XT/@'VuQg6!<?s3!!$j7!!$j3!!$j6!!$j4!!$j6!!$j4!!$j6!!$j4!!$j6!!$j3!!$j6
!!$j4!!$j6!!$j4!!$j6!!$j3!!@$;!,V3+[f?J&!)*+f!)*:k!)*.g!)*7j!)*1h!)*7j!)*1h!)*7j
!)*1h!)*7j!)*.g!)*7j!)*1h!)*7j!)*1h!)*7j!)*.g"%rUo9@a*l!!;Bbl1k;Zl2CY_l1tA[l2:S^
l2(G\l2:S^l2(G\l2:S^l2(G\l2:S^l1tA[l2:S^l2C\^!!)9^!!)9\!<;<_!!)9[!!DHc!9pE^!j)I)
rW)ir!3Q5#!3Q(t!3Q2"!3Q+u!3Q2"!3Q+u!3Q2"!3Q+u!3Q2"!3Q(t!3Q2"!3Q+u!3Q2"!3Q+us/l8#
!3Q(t"0DP'XmH,$!!6s:D#"&2D#OD7D#+,3D#F>6D#424D#F>6D#424D#F>6D#=86!,VT6!,VK3!,VT6
!,VN4!,VT6!,VN4s(qZ7!,VK3")Ir;Cq0Q8!!5dn9DJPf9E"nk9DSVg9Dnhj9D\\h9Dnhj9D\\h9Dnhj
9D\\h9Dnhj9DSVg9Dnhj9D\\h9Dnhj9D\_h9E"nk9DSVg9*,(n9;hglklBuD!!)9_!!)9[!!)9^!!)9\
!!)9^!!)9\!!)9^!!)9\!<;<_!!)9[!!)9^!!)9\!!)9^!!)9[!!MNd!9rbE!!DKM!9qi1f`2)U!3Q%s
!3Q5#!3Q(t!3Q2"!3Q+u!3Q2"!3Q+u!3Q2"!3Q+us/l8#!3Q(t!3Q2"!3Q+u!j)G&!WW5&q>^Z#!!'.'
q>^W"XT5K%!!6s:D#"&2D#OD7D#+,3D#F>6D#424D#F>6D#424D#F>6D#454D#OD7D#+,3D#F>6D#424
D#F>6D#+,7C]FHOD#+,6Chs)fk5`@!!_WMdq#CCfrVupkq>^Lgr;ZgjqZ$Uhr;ZgjqZ$Uhr;ZgjqZ-Xh
rVupkq>^Lgr;ZgjqZ$Uhr;Zgjq>^Xk!!#Ybq>^Uj9)qVk!;6Ell1k;Zl2CY_l1tA[l2C\_l2(G\l2:S^
l2(G\l2:S^l1tA[l2CY_l1tA[l2C\_l2(G\l2:S^l1tA^kl:_Jp](B[!9sI_WrW.$q#CDsrVur#q>^Mt
rW)u#qZ$Vur;Zi"qZ$Vur;Zi"q>^MtrVur#q>^MtrW)u#qZ$Vur;Zi"q>^W"!!'.r!!98&Xi^Y$!<-g1
!!$j7!!$j3!!$j7!<6m4!!$j6!!$j4!!$j6!!$j3!!$j7!!$j3!!$j7!<6m4!!$j6!!$j7!;um"C]FHO
p](A3!,SS6r_*%e!)*:k!_WLnqu?^irW)skqZ$Uhr;ZgjqZ$Uhr;Zgjq>^LgrVupkq>^LgrW)skqZ$Uh
r;Zgjq>^Uj!!#[e!!5dn9Aolk!!)9Y!!)9_!!)9[!!)9_!!)9[!!)9^!!)9\!!)9^!!)9[!!)9_!!)9]
!!3-#l2CY_l1tA[l2C\_l1tA^kl:_Jp]1<XXT84u!3Q"r!3Q5#!3Q(t!3Q5#!3Q(t!3Q2"!3Q+u!3Q2"
!3Q(t!3Q5#!3Q(t!3Q5#!3Q(t!3Q5#s/l+t"0DP'XnVnqXnVn#!!$j1!!$j7!!$j3!!$j7!!$j3!!$j6
!!$j4!!$j6!!$j3!!$j7!!$j3!!$j7!!$j3!!$j7!<6m3!!@$;!,VE1rbTLQj8]0Qp](:erVupkq>^Lg
rVupkq>^Lgr;ZgjqZ$Uhr;Zgjq>^LgrVupkq>^LgrVupkq>^LgrW)skq>^Oh!!*'mp]1:dSH&fWkl:_J
q>^N[rVur_q>^N[r;Zi^qZ$W\r;Zi^q>^N[rVur_q>^N[rVur_q>^N[rVur_q#CN]!!)9Y!<;<;!5ed>
XfVR'Xni"tXo8;#Xni"tXo/5"Xnr(uXo/5"Xni"tXo8;#Xni"tXo8;#Xni"tXo8;#Xn_r!XT/@'p]1>r
V?$>j"DhlS!,VK3!,VW7!,VK3!,VT6!,VN4!,VT6!,VK3!,VW7!,VK3!,VW7!,VK3!,VW7!,VH2")Ir;
D"n#1D".M,!!Gqf!!#[g!!#[k!!#[g!!#[j!!#[h!!#[j!!#[g!!#[k!!#[g!!#[k!!#[g!!#[k!!#[f
!!>jo!)*(es%ClB`rH5+!!)9[!!)9_!!)9[!!)9^!!)9\!!)9^!!)9[!!)9_!!)9[!!)9_!!)9^!<)ru
l2CY_l1k;]kl:_Jp]1?YT`Fri"0DP'Xni"tXo8;#Xni"tXo/5"Xnr(uXo/5"Xni"tXo8;#Xni"tXo8;#
Xni"tXo8;#Xn_r!XT/@'p]1>rli=6i")Ir;D#+,3D#OD7D#+,3D#F>6D#424D#F>6D#=87!!$j7!!$j3
!!$j7!!$j3!!$j7!!$j2!!@$;!,VE1s(o1Fj8]9T!!#[g!!#[k!!#[g!!#[j!!#[h!!#[j!!#[g!!#[k
!!#[g!!#[k!!#[g!!#[k!!#[f!!>jo!)*(es%Ag]"6fdcl1tA[l2CY_l1tA[l2:S^l2(J\l2CY_l1tA[
l2CY_l1tA[l2CY_l1tA[l2CY_l1k;]kl:_J_uS$^"0DP'Xni"tXo8;#Xni"tXo/5"Xnr+uXo8;#Xni"t
Xo8;#Xni"tXo8;#Xni#!XT/>%!3Q%s"0DP'XcNMbC]FHOq>^M3rVuq7q>^M3r;Zh6qZ-Y4rVuq7q>^M3
rVuq7q>^M3rVuq7q>^M3rVuq7q#CM5!!$ii!4Dk09)nrbq>^LgrVupkq>^Lgr;ZgjqZ-XhrVupkq>^Lg
rVupkq>^LgrVupkq>^LgrVupkq#CLi!!#Zi!9sOdklBu4q>^N[rVur_q>^N[r;Zi^q>^N[rVur_q>^N[
rVur_q>^N[rVur_q>^N[rVur_q#CN]!!)9S!1s5nXT5K*q>^MtrVur#q>^Mtr;Zi"q>^MtrVur#q>^Mt
rVur#q>^MtrVur#q>^MtrVur#q#CN!!!'.8!7LoMC]J9fq>^M3rVuq7q>^M3r;Zh6q>^M3rVuq7q>^M3
rVuq7q>^M3rVuq7q>^M3rVuq7r;ccr")Ir;CleW#9)qUX!!)os!)*:k!)*.g!)*7j!)*.g!)*:k!)*.g
!)*:k!)*.g!)*:k!)*.g!)*:k!)*+f"%rUo9@X$T!!;Bbl1k;^l0/0Jl1tA[l2:S^l1tA[l2CY_l1tA[
l2CY_l21M_!!)9_!!)9[!!)9_!!)9Z!!DHc!9p0Wn,NNl!3Q%s"Ked+!3Q(t!3Q2"!3Q(t!3Q5#!3Q(t
!3Q5#!3Q(t!3Q5#!3Q(t!3Q5#!3Q%s"0DP'Xm?%a!!6s:D#"&6Chs(OD#+,3D#F>6D#425!,VW7!,VK3
!,VW7!,VK3!,VW7!,VK3!,VW7!,VH2")Ir;Cq'Ju!!5dn9DJPj91o6b9DSVg9Dnhj9DSVg9E"nk9DSVg
9E"nk9DSVg9E"nk9DSVg9E"nk9DJPg9)ntm999,TklBuC!!DHc!9s=[s69L_!9s=[!9sI_!9s=[!9sI_
!9s=[!9sI_!9s=["R5.N!9s:Z"6fdcl-B@H!!98&XnVkuXT/@'q>gPtrVur#q>^MtrVur#q>^MtrVur#
q>^MtrVur#q>^Z#XT/@'q#CN!!!'-j!;6BoC]J;H!!@$;!,VK3s(qZ7!,VK3!,VW7!,VK3!,VW7!,VK3
!,VW7!,VK3"DhlS!,VH2")Ir;Cut_u!!5dn9DAJh9)nrbq>gOgrVupkq>^LgrVupkq>^LgrVupkq>^Lg
rVupkq>^Xk9)nrbq#CLi!!#[7!65'@klBuC!!DHc!9s:Z"R,mdl08$E!9sI_!9s=[!9sI_!9s=[!9sI_
!9sF^r;Zra!!)9Z!!DHc!9odLqZ$]"!3Q"r"0DP'Xn_r"XT/@'Xni"tXo8;#Xni"tXo8;#Xni"tXo8;#
Xn_r!XT/@'q#CN!!!'.[!3cG)C]J;H!!@$;!,VH2"De&<Ci&qJ!,VW7!,VQ5!WW4:rVuq7q>^M3rVuq7
q#CM5!!$j2!!@$;!,Sb;j8]6S!)*(e"%rUo9DJPj9)nrb9DSVg9E"nk9DSVg9E"nk9DSVg9E"nk9DJPi
9)nrbq#CLi!!#[e!1<fgklBuC!!DHc!9s=["9@Zd!9s:Z!9sI_!9s=[!9sI_!9s=[!9sI_!9s:Z"6fdc
l1k;]kl:_J_uS$^!j)I)p](Du!!'.s!!B>'!3Q%s!3Q5#!3Q(t!3Q5#!3Q(t!3Q5#!3Q%s!Nc>&!3Q%s
"0DP'XcNMaC]J;H!!@$;!,VH2")Ir;D#"&2D#OD7D#+,3D#OD7D#+,3D#OD7D#"&5C]FHOq#CM5!!$ii
!4Dk/9)qW[!!>jo!)*+f"%rUo9DJPf9E"nk9DSVg9E"nk9DSVg9E"nk9DJPi9)nrbq#CLi!!#Zi!9sR`
l1b5\kl:_Jq#CN]!!)9Z!!)9_!!)9[!!)9_!!)9[!!)9_!!)9Z!!DHc!9s:ZrTWkQT)ekmp](Du!!'.s
!!KD(!3H7t!!'/#!!'.t!!'/#!!'.t!!'/#!!'.s!!B>'!3Q%srN3d6dfBA`p](D4!!$j2!!@$;!,VH2
!,VW7!,VK3!,VW7!,VK3!,VW7!,VH2")Ir;D#FA4!<$_q!<,Xj!;c`u9)nrbq#CLi!!#[f!!#[k!!#[g
!!#[k!!#[g!!#[k!!#[f!!>jo!)*+frCbZ@])_lqp](E\!!)9Z!!DHc!9s:Z!9sI_!9s=[!9sI_!9sC]
!WW5brVur_q#CN]!!)9Y!<;;V!:KpfXnVkuXT/@'q#CN!!!'.s!!'/#!!'.t!!'/#!!'.t!!'/#!!'.s
!!B>'!3Q"rs/kSeU]CF2p](D4!!$j2!!@$;!,VK3!<?s8!!$j3!!$j7!!$j3!!$j7!!$j2!!@$;!,VE1
s(o.EfDtqEp](Ch!!#[f!!>jo!)*+f!)*:k!)*.g!)*:k!)*.g!)*:k!)*+f"%rUo9DAJe9)qVF!<;<Y
!!DHc!9s:Z"6fdcl1k;Zl2CY_l1tA[l2CY_l1tA[l2CY_l1k;]kl:_Jp]1?Yc2bZ\s/l%r"0DP'Xn_r!
XT/@'q#CDsrVur#q>^MtrVur#q>^MtrVur#q#CN!!!'.r!<90i!;-?lD"mu4C]FHOq#CM5!!$j2!!$j7
!!$j3!!$j7!!$j3!!$j7!!$j2!!@$;!,VE1s(pcsWW<&lp](Ch!!#[f!!>jo!)*+f!)*:k!)*.g!)*:k
!)*.g!)*:k!)*+f"%rUo9DAMe9?@1G!!DHc!9s:Z"6fdcl1k;Zl2CY_l1tA[l2CY_l1tA[l2CY_l2:V\
!!DHc!9s7Ys65dKmf3Hl!!'.s!!B>'!3Q%s!3Q5#!3Q(t!3Q5#!3Q(t!3Q5#!3Q%s"0DP'XnVnrXl'2T
!!@$;!,VH2")Ir;D#"&2D#OD7D#=87!!$j7!!$j3!!$j7!!$j2!!@$;!,VE1s(nb:fDl"H!!#[f!!>jo
!)*+f!)*:k!)*.g!)*:k!)*.g!)*:k!)*+f"%rUo9DAMe9D8FG!!DHc!9s=["9@Zd!9s:Z!9sI_!9s=[
!9sI_!9s=[!9sI_!9s:Z"6fdcl1b8Yl,*M;!!B>'!3Q%s"0DP'Xn_qsXo8;#Xni"tXo8;#Xni"tXo8;#
Xn_qtXT/A%XnVnrXcEJT!!@$;!,VH2")Ir;D#"&2D#OD7D#+,3D#OD7D#+,3D#OD7D#"&5C]FHOp]1>1
g&S,Q"%rUo9DJPi9)nrbq#CCfrVupkq>^LgrVupkq>^LgrVupkq#CLi!!#[e!<5]h!8[\Xkl:_Jq#CN]
!!)9Z!!MNd!9rbE!!)9_!!)9[!!)9_!!)9Z!!DHc!9rVGP5k]e!!'.s!!KD(!3H7t!!KD(!3NC"!!'/#
!!'.t!!'/#!!'.s!!B>'!3NO,`rH3X!!$j2!!@$;!,VH2"De&<Ci&qJ!,VW7!,VK3!,VW7!,VH2")Ir;
D#F?c!;c`u9)nrbq#CLi!!#[f!!Gpp!)#u]!!#[k!!#[g!!#[k!!#[f!!>jo!)(E6YQ+di!9rbD!!DHc
!9s:Z"6fdcl1k;Zl2CY_l21Mc!!)9J!!)9Z!!DHc!9oaKj8]:a!3NC!!!B>'!3Q%s"0DP'Xn_qsXo8;#
Xni##XfVR'Xn_r!XT/@'huK/F")IsRD#"&5C]FHOq>^WuC]FHOq#CD2rVuq7q>^Y7C]FHOq#CM5!!$i:
!6kKG9)qUXq#CLi!!#[f!!>jo!)*+f!)*:k!)*.g"A;Af!)*+f"%rUo9D8F<!!;Bbl1b5\kl:_Jq#CN]
!!)9Z!!)9_!!)9Z!!DHc!9s:Z"6fgMl,*M0!!98&XnVkuXT/@'q#CN!!!'.s!!'/#!!'.s!!98&!!'.s
!!B>'Xf[Wal2Um%!,VE1")Ir;D#"&5C]FHOq#CD2rVuq7q#CM5!!$j2!!@$;Ci%f*T)\pc!)*(e"%rUo
9DJPj9)nrb!;ZZq9E"nk9DJPi9)nrbq#CLi!)#u!!4r44klBuC!!DHc!9s:Z"6fdcl1k;Zl2CY_l1k;]
kl:_Jr;ccr!pK^LM#cuE!j)I)p](Du!!'.s!!B>'!3Q%s!3Q5#!3Q%s"0DP'Xn_quXT5KQ!2KSrC]J;H
!!@$;!,VH2")Ir;D#426!!$j7!!$j2!!@$;!,VH2!c.jQTE*UE!_WMdp](Ch!!#[f!!>jo!)*+f!)*:k
!)*+f"%rUo9DJPh9)qWN!0%!Xl1k;^!9jI`l1k;]kl:_Jq#CEZrVur_q#CN]!!)9Z!!;Bbl*gZ/!<0+q
!!B>'!3Q%s"0DP'Xn_qsXo8;#Xn_r!XT/@'q#CGt!!'-R!;-?kD"mu4C]FHOq#CM5!!$j2!!$j7!!$j2
!!@$;!,VH2!c.jQc2ajEr_*"d"%rUo9DJPi9)nrbq#CCfrVupkq#CLi!!#[f!!5dn9:>k:!<;<Y!!DHc
!9s:Z"6fdcl1k;^kl:_Jl1k;]klBu4q#CK\!9rSFOoYNap](H!!!',$q>^W"!!'.s!!KD(!3NC!!!B>'
Xf_C!!j)I)YlMcDs(qH1")Ir;D#"&5C]FHOq#CP6!!$hOq#CM5!,QKI!!6s:D#=9b!;Z]q9DAJh9)nrb
q#CLi!!#[f!!Gpp!)#u\!!>jo92#'\!_WMda8iCDs69:Y"6fdcl1k;]kl:_Jq#CN]!!)9\!<)s"klBuC
!<25I!94(ZXnVkuXT/@'q#CN!!!'.s!!B>'!3Q"r!j)I)p]1;qhZ0#Ds(qH1")Ir;D#+,7!,MW8D#"&5
C]FHOp](A3!,VE1rbSV8bQ.Z9p](Ch!!#[f!!>jo!)*+f"%rUo9DAJg9)qW[!<,Xb!.k1P!9rbC!!DHc
!9s:Z"6fdcl1k;]kl:_Jp](B[!9s4Xs67B#[/g6/p](Du!!'.s!!B>'!3Q%s"0DP'XnVktXT5Kt!<90]
!9jL`D"mu4C]FHOq#CM5!!$j2!!@$;!,VE1!c.jQpAk50f`7TDs%E+e"%rUo9DJPj9)nrb!;ZZt9)nrb
p](@g!)*%ds%C$*\cDcpp](E\!!)9Z!!DHc!9s:Z"6o%Ml1b5[klBuG!;lisl%oE.!<91r!!B>'!3Q%s
"0DP'Xn_r!XfVT*p](At!3Ptqs/jcNUB(=1p](D4!!$j2!!@$;!,VN4"TSO=C]J;H!!6s:D"dr0CnLd[
!<5^e!!>jo!)*+f"%rUo9DJPi91o7Xp](@g!)*%ds%DYXJcGoRkl:_Jq#CN]!!)9Y!!;Bbl1b5[klBuB
!<;;m!4;e/XT/@'q#CN!!!'.r!!98&XnVktXT5Kt!!',$Xb-W<!!@$;!,VH2")Ir;D"mu3C]J;H!!6s:
D"dr0CsE$P!!>jo!)*+f"%rUo9DAJg9)qW[!!5dn9D8Gd9:>k/!!DKM!9s:Z"6fdcl1b5[klBuC!!;Bb
l.H&l!!KF+!3H7t!!B>'!3Q"r!j)I)p](At!3N't])VqLC]J;I!!@$;!,VE1!c.jQp](A3!,V-)JcP6>
"%u8e9DJPi9)nrbp](@g!)*(e!_WMd]E"],ros4Y"6o%Ml1b5[klBuF!<)s"klBt(!7q5MXn_r!XfVT*
p](At!3Q"r!j)I)df>=,rbVE2"9<7S!,VE1!c.jQp](A3!,S8-^]=@,q#CLi9)qW[!!5dn9DAJg9)qWM
!.k4C!<;<X!!;Bbl1b5[klBuC!!;Bbl*^Sk!<91q!!98&XnVktXT5Ku!!98&Xb$Q/!<6m0!!6s:D"mu3
C]J;H!!6s:Cs;sC!<5^d!!>jo9*"bf!_WMdp](@g!)'QsXoSLdpAb9Z!9s7Y!pK^Lp](B[!9sC]JcOd1
s/l"q!j)I)p](At!3Q"r!j)I)a8hP,s(qE0!c.jQqZ-Tq!c.jQp](A3!,Rl"b5hQ8pAb7f!)*(e!_WMd
p](@g!))2LJcPfNs697X!pK^Lp](B[!9s7Y!pK^LWrTL,s/l"q!j)I)p](At!3Q"r!j)I)p&K[EkQ(X!
pAb82!,VE1!c.jQp](A3!,TLPSH/[_pAb7f!)*(e!_WMdp](@g!)&=Pd/a42pAb9Z!9s7Y!pK^Lp]1<X
f`6a,s/l;$q#CJu!3Q"r!j)I)p]1;qV#\(,s(qE0!c.jQp](A3!,VE1rbV'(JcP3=s%E(d!_WMdp](@g
!)*(er_'m(UB(>YpAb9Z!9s7Y!pK^LqZ-Qps65=>f)YiQpAb8s!3Q"r!j)I)pAk5qdf>=,s(qK2"98F<
!,VE1!c.jQpAk50T)cY,s%E(d!_WMdp](@g!)*%ds%DVWJcP!7ros1X!pK^LpAk6X[K)iuriPqq!j)I)
pAk5qJcO0urbV?0!c.jQpAk50blEIur_!4kq#CIh!)*%ds%BTsU&b5XpAb9Z!9s4X!9s@\JcO@%s/l"q
!j)I)pAb2q`rM"ts(qN3rW!"9!,VB0!,Ri!^B":,pAb7f!)*%d!))/KJcPBBs697Xrop$TVuZk"pAk2p
l2ZD9g]7@jpAk2/[K)Eis%E(dr_%hC`;or&pAk6XbQ*4pq#LGspAk5qQiO8hs(qE0s(p]qJcOd1s%E(d
s%BNqQN7'Mp&G*Wq>c*Ib5hREp&G)p`W1SjrrE(8p&G)/OoVihs%E%c!)),JJcOO*!9pH_O8o9_oDjIC
_uKdR^]8rdp](:eU]>uHJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&RK.p>JcLB&JcLB&JcLB&JcLB&JcLB&JcMVIJ,~>

%%EndBinary
grestore
np
grestore
405.854 194.596 mo
649.166 194.596 li
405.854 194.596 li
.819211 .6925 0 0 cmyk
ef
405.854 193.096 mo
649.166 193.096 li
649.166 196.096 li
405.854 196.096 li
405.854 193.096 li
0 0 0 1 cmyk
f
20.299 196.291 mo
65.1641 196.291 li
.819211 .6925 0 0 cmyk
ef
20.299 196.291 mo
65.1641 196.291 li
0 0 0 1 cmyk
@
93.5137 196.291 mo
93.5137 133.922 li
93.5137 196.291 li
.819211 .6925 0 0 cmyk
ef
92.7636 196.291 mo
92.7636 191.791 li
94.2636 191.791 li
94.2636 196.291 li
92.7636 196.291 li
92.7636 190.291 mo
92.7636 185.791 li
94.2636 185.791 li
94.2636 190.291 li
92.7636 190.291 li
92.7636 184.291 mo
92.7636 179.791 li
94.2636 179.791 li
94.2636 184.291 li
92.7636 184.291 li
92.7636 178.291 mo
92.7636 173.791 li
94.2638 173.791 li
94.2636 178.291 li
92.7636 178.291 li
92.7636 172.291 mo
92.7636 167.791 li
94.2638 167.791 li
94.2638 172.291 li
92.7636 172.291 li
92.7636 166.291 mo
92.7638 161.791 li
94.2638 161.791 li
94.2638 166.291 li
92.7636 166.291 li
92.7638 160.291 mo
92.7638 155.791 li
94.2638 155.791 li
94.2638 160.291 li
92.7638 160.291 li
92.7638 154.291 mo
92.7638 149.791 li
94.2638 149.791 li
94.2638 154.291 li
92.7638 154.291 li
92.7638 148.291 mo
92.7638 143.791 li
94.2638 143.791 li
94.2638 148.291 li
92.7638 148.291 li
92.7638 142.291 mo
92.7638 137.791 li
94.2638 137.791 li
94.2638 142.291 li
92.7638 142.291 li
92.7638 136.291 mo
92.7638 133.922 li
94.2638 133.922 li
94.2638 136.291 li
92.7638 136.291 li
0 0 0 1 cmyk
f
206.912 196.291 mo
206.912 133.922 li
.819211 .6925 0 0 cmyk
ef
1.5 lw
[4.5 1.5 ] 0 dsh
206.912 196.291 mo
206.912 133.922 li
0 0 0 1 cmyk
@
93.5136 145.262 mo
208.317 145.262 li
.819211 .6925 0 0 cmyk
ef
[] 0 dsh
95.5136 145.262 mo
206.326 145.262 li
0 0 0 1 cmyk
@
99.5136 145.262 mo
103.514 150.262 li
93.5136 145.262 li
103.514 140.262 li
cp
ef
202.326 145.262 mo
198.326 140.262 li
208.326 145.262 li
198.326 150.262 li
cp
ef
0 0 0 1 cmyk
%ADOBeginSubsetFont: UZTAAA+TimesNewRomanPS-ItalicMT Initial
ct_T42Dict begin
-0.496 -0.305 1.332 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /UZTAAA+TimesNewRomanPS-ItalicMT
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000007966670
676d0000000000000854000005cd676c796600000000000019e000000376
686561640000000000000e2400000036686865610000000000000e5c0000
0024686d74780000000000000e80000000106c6f63610000000000000e90
0000000a6d6178700000000000000e9c000000206e616d65000000000000
0ebc00000034707265700000000000000ef000000aed6764697200000000
0000000000000000058e0000054c001f054c001c037100180000ffe10000
ffe80000ffe8fe4afffc056b0023fe68ffe2033e00000095000000950000
000000000000002500a8008e010b007d00820045003200a400ca006b0070
005100af003c00f001d700470004002500770029004000fd001601610046
01370029008e0017ffca0025005bffe902e600020099008100f2007500d6
006300c60006009a01330024003800cc003dff67001305d8003600860095
ffdb0007043400a500d8ffdcfffe004800a200d8013c01530380053e0057
007a007c008c0117012a0138017c0026003c007800bd00c0021009b5000c
004d004e00540058006700b4040100020005005000af01d5034300240058
008b013501c0ffac002000250026002d00410136022bffba001e002a0034
003b003f00850094009800d7012e013d033104b900170040006100b9010e
0116012201bfff9c001f001f004d005c0086008c009600aa00cb00cb011f
0154022f036005a9fee8000e006f007c007d008b00d500f1010a01570178
02b803adfe3fff6affb3ffc4001f0037003f0044004a0078007d009700a2
00a700b600c000c100c600d8011d0150019701ee04740532fd81fed1fee0
ff16fff1000f002d00550068006e007f00890095009e00c200da00e400f8
01040108011101c2023002da030e049e0517ff00ff8700000020002f0041
0057007800870088008800b900c200c5012001280133017401d6020e020f
026c027e02ab02ec038903b103e304e7ff43ffa8ffc3ffdcffe900070023
0023002600520077007d0081008f009900ac00ae00b500b800c800ea00f0
00f40135016a018b01b101b501f7021402ad02d504fc05d805f0ff9dfffc
000b00240025002c0030003000330040004700490057006e009a00bd00c9
00cd00dc00fa00fa011b0139017e0187018a018e0195019601df01f60286
02cf02de039603a903b003c804010432046a058b05e006510761fe96fe9a
ff4bff870013002500340038003e004a0065006b0073007a009c00a200b2
00b700bf00f000f700fb0104011301200124013b01520178017c0181018f
01a001d90248026a026f02700301031d032303270388041f04ab04d104da
057a058bfe26fe59ff2e00010002000a003b003b004700580058005f0066
006b007a007a008b009900af00bc00c000c700cc00e900f200f500fb00fb
0102010a010b01150121012701450145015501570158015e01610168017d
01a301ab01da01ee021002180222028f029402a302d202e703710393039b
03b303d303fe04ff050b05320532054b0559058b05ab05f2065506890742
076207a708ccfd2afdc8fddefe0cfe15fe27fe53fe84febbff58ff76ff77
ffa1ffa7ffadffafffc00000000000030094001d001f002000200027002e
0048004b004c005e005f006b0071007c008a00900091009100a700af00b3
00b400c400c600d100d200de00df00df00e600e800ea00eb00f200f500f5
00fc010201180123013101330137015c016201660170017a017a017a0182
01980199019b01b001bf01c001ca01d301d701d801e001e001f601f701f8
02120213022f023702440247024f0252026302650270027f0298029b02a6
02b702ba02c502cf02d602d702e502fe031c031d03450348035d035e0371
0379038103a103b703d403d503d803e103f803fe0404041f042104230425
043a0467048304e00528054b0564056a059f059f05c2060b066a06af06b3
06cb06e8070607280748075007a607b207ff009500af0092009600000000
0000000000000000017e01a80129025b0212020301c302b4019301cd02b2
04ed020e0159017a0300022d042c00c8004d00e602890325013e0378011b
00f1018d00490203007c000e029d02470024000000000052004400330038
005405d3041501a7000002860168005000cf0002004b0024008800ba0025
ffd800110091ff6b00b5011700260065ff9900490080014b01c000f40167
027102ea04fc0310017c01e103d9015501e601ee0434019606cb005c022b
0099003d009f00160039002700de00790120022e005a0099038800940021
0019002a046c05e8000001f203b200aa0296028902b4ffc9020000ec0005
005a0447010004e00000052a001f01eb00ae016800ca02d3028901b50406
01a1014f014b011c0308005e00c70024029d006503750104028002f304d8
00d90239025a032c01f204310303005002e50283005901eb010800ac0196
02f8012100950180004400e501eb02e5007400f301ff02fd038f026801c8
01c70116022b0142033000fe02e101620200002400ee0517010802370066
0006010201e602aa0366019b00d305c203dc044d03b6000401be013702fc
03200244014d0338ffed002506f8030dfed5ff43004402ffff92040bfdef
0155017100d9ffc4032d0461044afbb5fbcf02170192036d0558fff2fe7d
0583023e006605e9073d00790243002500cf00fd00af002a01ef021a0026
001f0025003a000001170490fbfb0251001d02f001f50078018f005f0024
0044005400bf00af006701a8002600050006003f009800fa02ab00c2004d
0375004a00b600c401bf017c006f00130263000c006801520002012e0104
001f001f009a000000f1046900790080005000bd056b00ab0080001e05a5
fe4000ce006e0056004800db018b00b30048023904580053008200820022
0000404154403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b01723
70b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325
456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c
2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b1
2cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb01723
44b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb01723
44b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb01723
44b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c48
2d2c01182f2d2c20b0032545b019234445b01a23444565234520b0032560
6a20b009234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a
45208a54582321b03f1b235961441cb114008a5279b31940201945208a54
582321b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2c
b10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1
1011432343650b2d2c4b525845441b2121592d2c0120b003252349b04060
b0206320b000525823b002253823b002256538008a63381b212121212159
012d2c4bb06451584569b00943608a103a1b212121592d2c01b005251023
208af500b0016023edec2d2c01b005251023208af500b0016123edec2d2c
01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161011020
3c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c35
2d2c76b802ee23701020b802ee4520b0005058b00161593a2f182d2c2121
0c6423648bb84000622d2c21b08051580c6423648bb82000621bb200402f
2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b002
602d2c0c6423648bb84000626023212d2cb4000100000015b00826b00826
b00826b008260f10161345683ab001162d2cb4000100000015b00826b008
26b00826b008260f1016134568653ab001162d2c4b53234b515a5820458a
60441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a5838
1b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358
021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425
b00425060c6423646164b807085158b00425b00425012046b01060482046
b0106048590a21211b2121592d2cb012435c580cb00425b00425060c6423
646164b807085158b00425b00425012046b8fff060482046b8fff0604859
0a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b51
5a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c
0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c4623
46608a8a462320468a608a61b8ff8062232010238ab903b003b08a704560
20b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b1
23018851b1400188535a58b910000020885458b202010243604259b12401
885158b920000040885458b202020243604259b12401885458b202200243
6042004b014b5258b2020802436042591bb940000080885458b202040243
604259b94000008063b80100885458b202080243604259b94000010063b8
0200885458b2021002436042595959592d0000000001000000050ccdc12f
8ef55f0f3cf50819080000000000a31fb8bd00000000c5b1f9c8fc05fd8c
0aaa0830000200090001000000000000000100000721fe4500570a3afc05
fa500aaa0018000700000000000000000000000000040639011c02000000
05c7ffc30473008f00000034003400ef01bb000000010000000400f2003c
0082000500020010002f0055000004d90258000400020000000100120001
000000000006001f00005553484559432b54696d65734e6577526f6d616e
50532d4974616c69634d54000000b15400410c03bc003003bc004003bc00
a003bc00b003bc0005ffc003bbb345453240b803bbb32b2e3240b803bbb2
282932b9ffc003bbb31a263280411303bb009f03bb00af03bb00cf03bb00
04000003bb001f03bb000203bb02af0027001fffc003b9b2161b32b9ffc0
03b8b2424232b9ffc003b8b2363832b9ffc003b8b32a2d32df410a03b800
ef03b8000203b803b90028001fffc003b9b3282e32f0410f03b900010000
03b7000103b700030800001f03be03bf002b001fffc003bfb2242a32b903
b60381b23a1f0f411703b3001003b2002003b2005003b2007003b200e003
b2000600cf03b300df03b300ef03b300ff03b30004001203a8b2e2891fbe
039f016b019a001f039800930801400c1f7f047f05027f027f03025fbb02
b00001ffc00117b2196632b8ffc0b3651a6632b9ff800173b2196632bd03
8401170800001fffc002afb2313340b802afb22e3340b802afb328293240
b802afb326273240b802afb321253240b802afb31c203240b802afb22333
40b802afb21933a0bc02af00b002af00e002afb5034003212932b8fff2b3
3a263d32bc038203820382003a0800b51f40255c331eb80381b25c6432b8
ffeeb3252e3314b80381b32b2e3269be03810001008a03810001000e0381
b32b2f3210b80381b3515b320cb80381b34e513222b80381b3474d320eb8
0381b246330ab80381400926473212254358320cb80381b2323310b80381
b22a3312b80381b3373d3212bb0381003d0033fff44015253d331825355b
32102526343206252a330c252e33b8fffe4024252d330c3a2f33329925aa
25ba25c92504052536330c25323832193a293a383a03182517b80381b428
25382504bc0381038103810025080040101f0f1f2b2e32691f781f020b1f
303332b8fff1b31f263d32bc038003800380001f080040151f375f07af07
025f06af060222ac2b2e3209ac2f33b8ffdc400aac1f223222232b52320e
b8037fb229330eb8037fb2223314b8037fb21e2032b8ffe7b71e2b33321e
2b2f32b9ffc0037fb64c4f3232262c33410affee037f00390033fff8037f
002b0033ffea037fb23a3320b8037fb33f46321eb8037fb32f3a3212b803
7fb22e331eb8037fb32a2d320eb8037fb2263304b8037fb3494a3404b803
7fb2463304b8037fb2213318b8037f400c1d3322263032322226333832b8
fff8400a262b2f3209261b21328abe037f0001037f037f037f0026080040
2e1f371f062f063f06039f02af02bf02cf02049f03af03bf03cf03046f03
7f038f03031f032f033f034f035f03050f413502ed0001005f02ed009f02
ed00df02ed0003002f02ed003f02ed006f02ed000300af02af0001004f02
af009f02af0002002f02af003f02af0002003f02b00001004f02af005f02
af0002002f02af003f02af0002007003b2000103b203b202ed02ed02b002
b002af02af401a3701003001400102010100090102000800171700000012
110840410b027b02230034000d013d0034000d01370034000d011b401a34
0d8f340d84340d68340d59340d54340d48340d2c340d28340d4110023500
20000d021b0020000d01fc0020000d01c30020000d01500020000d012c40
1a200df0200dbe200d94200d79200d6a200d61200d5f200d44200d410d01
3e0138000d003d0138000d00300138000d001d0138000d01fdb40f4d0f00
09bf01fd004d000d03b1037f0015001f0215b226341fb80214b2263f1fb8
0208b21ebb1f41190206001e0801001f0205001f02ab001f0204001f02ab
001f0203001f0401001f02010031019a001f01fb00230156001f01aeb226
2a1fb801adb2262a1fb801abb226341f411501a8002602ab001f01a5001e
0125001f01a400ab02ab001f01a2003102ab001f01a1003102ab001f019d
b2236c1fb8019cb2236c1f4109019b00230401001f019a0033019a001f01
76b2262e1fb8016cb231721f4111016b0023019a001f016800240401001f
014500260801001f013f00230401001f0123b21e9e1fbc0121001e020100
1f0100b426791ffd1fb80125b21ffa33b80801b21ff924b802abb21fe826
b80101b21fe51fb8019ab21fe431b80101400b1fe331e41fe231891fd226
b80201b61fd026cd1fcd25b80401b21fb731b8019ab21fae26b80801b21f
ac1eb80401400b1f9e315e1f97269e1f9333b80801b21f8a24b8019ab21f
831fb802ab40131f82236c1f7523e41f7026cd1f6423721f5e25b80401b2
1f5d23b802abb21f55e6b80401b21f5324b80201b21f4f33b802abb21f4e
26b8040140131f4731671f4626ab1f4331cd1f3e235e1f3a1fb80401b61f
3924e41f3723b80801b21f2e23b80401b21f2a1eb80125400b1f2923ab1f
2731ab1f5537bc01c60007018a0007012b402e077f077107690766074b07
4007380736072d07220721071408120810080e080c080a08080806080408
0208000814b8ffe0402b0000010014061000000100060400000100041000
0001001002000001000200000001000002010802004a00b013034b024b53
42b0372b4bb807ff52b0382b4bb009505b58b101018e59014bb0c063004b
6220b0f65323b8010a515ab005234201b0124b004b544218b0382bb00288
b801005458b801ffb101018e851bb0124358b900010140858d1bb9000101
59858d59590016763f183f123e113946443e113946443e113946443e1139
46443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d
594bb04753205c58b9027d027b4544b9027c027b45445958b90146027d45
5258b9027d01464459594bb04753205c58b9001e027c4544b90026027c45
445958b9017f001e455258b9001e017f4459594bb05e53205c58b9001f02
7d4544b90025027d45445958b901a8001f455258b9001f01a84459594bb8
010153205c58b1ab1f4544b11f1f45445958b9047000ab455258b900ab04
704459594bb8012553205c58b1e61f4544b11f1f45445958b9051000e645
5258b900e605104459594bb01753205c58b124244544b1312445445958b1
2224455258b124224459594bb05153205c58b124244544b1232445445958
b17d24455258b1247d4459594bb06e53205c58b124244544b13324454459
58b1aa24455258b124aa4459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b45
695342014b5058b108004259435c58b1080042591610703eb0124358b911
b53d801bba011c03d9000b2b59b00a2342b00b2342003f3f182b103c012f
5d060cb0062342b0072342b0124358b93b21187e1bba040001a8000b2b59
b00c2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e23
42b00f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b011
2342002b4bb02e5358b8016b45b02a60b8016b2344590018456944456944
184569444569447373737375757573737475757575752b4bb026534bb03d
515a58b1262645b0196044592b45186944742b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b004bb02a534bb03f515a58b1070745
b04060445973732b2b451869442b2b752b2b4518694475752b2b752b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b2b2b451869442b002b73
2b2b2b2b2b2b2b2b2b012b2b2b007373732b2b2b01435c58b8ffdeb31e1c
3318b8037fb52b3318262b33b9fff00381b112332b2b2b2b590173742b2b
2b002b73752b2b732b2b2b2b2b73752b2b2b2b732b00000000>
[887 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 1 <> UZTAAA+TimesNewRomanPS-ItalicMT AddT42Char 
1 478 3 <0001008f00000532054c0021012b40230340120b3f0d221039b50d01131a
141d13120b111d1205038802208821021001060101bb0308000a0021ffc0
400b1139211000300070000200b8030840101b100a0b0b1e1a1b141a1a1b
091c0a1bb8019c4014000221bd0100020a1312081a22281b100bd2121ab8
ffc0b33334341ab8ffc0b32b2e341ab8ffc0b32329341ab8ffc0b31e2034
1ab8ffc0400b181a347f1a9f1aaf1a031ab8021eb722091a171a220a67b9
034a00182b2b103c2b2b10f65d2b2b2b2b2b435c58b51a40140c3f1ab8ff
c0b217391ab8ffc0b323123f1ab8ffc0b712133e1a4032193f2b2b2b2b2b
5901ed2b3c2b10c0003f3c2b3f3cfc3c10fd3c3c3c870e2e2b057d10c42b
7a10f05d01182f2bc42b7a10e001182f382bc40110ed10fd390010ed0110
c00010ed0110c03130015d2b2b0121032336353427262323010615141633
3307213733323736363701232206060723012c04066f26132d228d6bfef4
3340512e0cfdb20b1a4e2a1d2f2a011951758f581c25054cfe984f3e4925
1cfc5ab029263125251911599003c33c7269>UZTAAA+TimesNewRomanPS-ItalicMT AddT42Char 
1 0 0 <0002011c0000051c050000030007003fb40201f80607b802664013000504
f803000a0704f8010019080605f80203b8014ab309a2dc182b10f63cfd3c
4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121011c04
00fc2003c0fc400500fb002004c0>UZTAAA+TimesNewRomanPS-ItalicMT AddT42Char 
UZTAAA+TimesNewRomanPS-ItalicMT /CharStrings get begin
/space 1 def
/T 3 def
end
UZTAAA+TimesNewRomanPS-ItalicMT /Encoding get
dup 32 /space put
dup 84 /T put
pop
end
%ADOEndSubsetFont
/YLRXQV+TimesNewRomanPS-ItalicMT /UZTAAA+TimesNewRomanPS-ItalicMT findfont ct_VMDictPut/YLRXQV+TimesNewRomanPS-ItalicMT*1 [32{/.notdef}rp /space 51{/.notdef}rp /T 171{/.notdef}rp]YLRXQV+TimesNewRomanPS-ItalicMT nfYLRXQV+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf143.917 138.512 mo(T )[9.68579 0 ]xsh317.958 196.291 mo
317.958 133.922 li
.819211 .6925 0 0 cmyk
ef
[4.5 1.5 ] 0 dsh
317.958 196.291 mo
317.958 133.922 li
0 0 0 1 cmyk
@
204.331 145.262 mo
319.134 145.262 li
.819211 .6925 0 0 cmyk
ef
[] 0 dsh
206.331 145.262 mo
317.143 145.262 li
0 0 0 1 cmyk
@
210.331 145.262 mo
214.331 150.262 li
204.331 145.262 li
214.331 140.262 li
cp
ef
313.143 145.262 mo
309.143 140.262 li
319.143 145.262 li
309.143 150.262 li
cp
ef
0 0 0 1 cmyk
YLRXQV+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf251.646 138.512 mo(T )[9.68579 0 ]xsh404.449 196.291 mo
404.449 133.922 li
.819211 .6925 0 0 cmyk
ef
[4.5 1.5 ] 0 dsh
404.449 196.291 mo
404.449 133.922 li
0 0 0 1 cmyk
@
517.847 196.291 mo
517.847 133.922 li
517.847 196.291 li
.819211 .6925 0 0 cmyk
ef
517.097 196.291 mo
517.097 191.791 li
518.597 191.791 li
518.597 196.291 li
517.097 196.291 li
517.097 190.291 mo
517.097 185.791 li
518.597 185.791 li
518.597 190.291 li
517.097 190.291 li
517.097 184.291 mo
517.097 179.791 li
518.597 179.791 li
518.597 184.291 li
517.097 184.291 li
517.097 178.291 mo
517.097 173.791 li
518.597 173.791 li
518.597 178.291 li
517.097 178.291 li
517.097 172.291 mo
517.097 167.791 li
518.597 167.791 li
518.597 172.291 li
517.097 172.291 li
517.097 166.291 mo
517.097 161.791 li
518.597 161.791 li
518.597 166.291 li
517.097 166.291 li
517.097 160.291 mo
517.097 155.791 li
518.597 155.791 li
518.597 160.291 li
517.097 160.291 li
517.097 154.291 mo
517.097 149.791 li
518.597 149.791 li
518.597 154.291 li
517.097 154.291 li
517.097 148.291 mo
517.097 143.791 li
518.597 143.791 li
518.597 148.291 li
517.097 148.291 li
517.097 142.291 mo
517.097 137.791 li
518.597 137.791 li
518.597 142.291 li
517.097 142.291 li
517.097 136.291 mo
517.097 133.922 li
518.597 133.922 li
518.597 136.291 li
517.097 136.291 li
0 0 0 1 cmyk
f
404.449 145.262 mo
519.252 145.262 li
.819211 .6925 0 0 cmyk
ef
[] 0 dsh
406.449 145.262 mo
517.261 145.262 li
0 0 0 1 cmyk
@
410.449 145.262 mo
414.449 150.262 li
404.449 145.262 li
414.449 140.262 li
cp
ef
513.261 145.262 mo
509.261 140.262 li
519.261 145.262 li
509.261 150.262 li
cp
ef
656.328 195.115 mo
701.193 195.115 li
.819211 .6925 0 0 cmyk
ef
2.5 lw
[7.5 2.5 ] 0 dsh
656.328 195.115 mo
701.193 195.115 li
0 0 0 1 cmyk
@
286.291 71.5529 mo
286.291 71.1779 li
329.922 71.1779 li
330.021 71.1779 330.118 71.2179 330.188 71.2876 cv
330.258 71.3576 330.297 71.4541 330.297 71.5529 cv
330.297 100.634 li
330.297 100.733 330.258 100.829 330.188 100.899 cv
330.118 100.969 330.021 101.009 329.922 101.009 cv
286.291 101.009 li
286.192 101.009 286.096 100.969 286.026 100.899 cv
285.956 100.829 285.916 100.733 285.916 100.634 cv
285.916 71.5529 li
285.916 71.4541 285.956 71.3574 286.026 71.2876 cv
286.096 71.2179 286.192 71.1779 286.291 71.1779 cv
286.291 71.5529 li
286.666 71.5529 li
286.666 100.259 li
329.548 100.259 li
329.548 71.9278 li
286.291 71.9278 li
286.291 71.5529 li
286.666 71.5529 li
286.291 71.5529 li
0 0 0 0 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: UZTAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YLRXQV+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 104 2 <0002ffc3000005a3054c001a002d00dfb9001cffe8403311392f2b571b79
277a2b8b27b51e060d140e1d0d0115001d011b1c1c1e141514141415232e
0d2c2e01020d08142e2815141029ba037f0006ffc0b326173f06ba011700
2fffc040091339702f012f1bd41cba030100150345b4120f140114b80173
b62e091417142e0aba0173011500182b2b103c2b2b4e10f471435c58b900
14ff80b326173f14b8ff80b328183f14b8ff80400b2d173f144018391440
11392b2b2b2b2b59014de4fde44e105d2bf62b4de92b103c2b10c0003f3f
ed10ed870e2e2b057d10c4180010ed0110c00010ed0110c03130015d2b01
372120041215140e02042321373637363736371336353426230501061514
1617163332243736123534262322012c0c01b1011301099e5b73eefeead0
fdc20d4f1b28131d24f01c344c014dfeda2115121a3a9d010d567a92e0d7
350527257efef19b85fb97b65725020c111d2a7f03346137272a26fc0972
1b101e050941405d0146d0ebe500>YLRXQV+TimesNewRomanPS-ItalicMT AddT42Char 
YLRXQV+TimesNewRomanPS-ItalicMT /CharStrings get begin
/D 2 def
end
YLRXQV+TimesNewRomanPS-ItalicMT /Encoding get
dup 68 /D put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YLRXQV+TimesNewRomanPS-ItalicMT*1 [32{/.notdef}rp /space 35{/.notdef}rp /D 15{/.notdef}rp /T 171{/.notdef}rp]YLRXQV+TimesNewRomanPS-ItalicMT nfYLRXQV+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf293.491 93.1528 mo(DT )[12.9996 9.68762 0 ]xsh524.291 130.909 mo
263.311 130.909 li
263.311 126.578 li
252.903 126.578 li
252.903 130.909 li
155.583 130.909 li
155.583 126.578 li
145.175 126.578 li
145.175 130.909 li
84.4364 130.909 li
84.4364 97.2001 li
285.916 97.2001 li
285.916 100.634 li
285.916 100.733 285.956 100.829 286.026 100.899 cv
286.096 100.969 286.192 101.009 286.291 101.009 cv
329.922 101.009 li
330.021 101.009 330.118 100.969 330.188 100.899 cv
330.258 100.829 330.297 100.733 330.297 100.634 cv
330.297 97.2001 li
524.291 97.2001 li
524.291 130.909 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[440.509 0 0 34.3636 84.1091 408.764 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 1346 
/H 105 
/M[1346 0 0 -105 0 105 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 1346 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1346 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1346 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1346 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@
JcLB&JcLB&JcOX-"Ul7i*Z>Nh!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k37!!`R/XNShm>6=R"JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&`W-5HE7b!bfl@57!.k3&!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!1X%@!.k3&!.k3&!8db]"EiGqr7Z8rX8mhPJcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&S,e-@JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&P5kgjG22umgiinr!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!6,!D"F/f#qpo]h`;kJiJcLB&JcM;@
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@
JcLB&JcLB&JcO[.#6S>?c-ias"0;KS!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!0R<d#o4L#(CL9=!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&!.k3&!.k4,!!EB,"U,"/!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k36!!Y2t
R\Zce!VcYH!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3j!!`RCeFrb1N!.*"JcLB&JcLB&S,e-@JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&S,e-@JcLB&JcLB&hZ*lb
Pl(FXqi_2b!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k37!!*=lrVcha$MXUQ!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3j!!*Y$
rr)ucL^_6&JcLB&JcLB&S,e-@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&S,e-@JcLB&JcLB&hZ*lpN90EpT0i[]!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k37!!WQQ
6q^92&bc9W!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!0R<e"XmJcG$6-nq#H!HJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&S,e-@JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNgk#m)):P2Yg"\PERP!.k3&!.k3&!1X%@
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!1X%@
!.k3&!.k3&!8mh`$s1"2r;Q]5>n*n9JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcM;@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM#8!Y9"erVcl@C(L+?JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&`rHDYGL?Ehr:\'F&&nU$!.k3&!.k3@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&!.k3&!.k4/!!s<cbOkJbF=7\&XT3qQ
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&S,e-@JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&PQ1mo1gb`nJM-WrJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLo5"p5Gc2FU"Cq#H!HJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&S,e-@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNgk$4\gB
0OhZPn]N]k`rL\kJcLB&JcM;@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&JcLB&JcOa0$Of;0cHP);rr1D=%B]\_!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!0mNc(1>norW:b\(A\#_!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3l!!49gi;EQVr7Gd(`rL\kJcLB&JcM;@JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&
JcLB&JcOa0$Rh(rqtfZcN,;36$*F8[!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!0mNi&3t]F^SNRm"8;eI!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3k!!NB+#nI^P_>o/fJcLB&JcM;@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLf2
"UPee7jeZ@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!6G3M$m$l9#QOoBE4Of_I43/:JcLB&JcLB&S,e-@JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&S,e-@JcLB&
JcLB&iW'ETRE2@V63A70r;H;c6a$KA!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!1!To@*/3Am#MJ[QLOkKa^FuGJcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&aoDqUId[.3e9(s$Fk$9ZeRnp)!.k3&!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!1X%@!.k3&!.k3&!9=+k!>UI[
r;3fs"U%JaZ[Y7S!O)QU!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!1X%@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!1*Zo"YX_qieJi]!"U+h"8MqK!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!8IPU
#mph7!!!*"%06kAr;Zs/%1N^Or;Zg)rXAl7!WE'!#lY86$3U8-!!`E3!=K#/!!NK6%1N^MrW!*'$k3XS
#5nN%$iUS8$2ji($2tA7#m(#*!!rQ5!=Ar.!!NK6%1N[IrW!*)$k3XS#6"T+!XfGH$jce3!"&W6!=8f+
!!!?)%06e:rW!*-$k3XR"9&9(":P_K$jHV1!<`f0%0-V3!!*--rXAi6rVus"$2tA7$3C,+"UGMG%1E::
!!NQ8%1N^JrVus%%/p\9"o\K&!t"r9!!`E&!<NT,%0-_6!!**,rXAi8r;[!*$k3XS!WE'""UtA>!!E3#
!<`c/%0-P1!!*0.rXAi3rVus#$2tA6$2so*!=8Z6!"8`*!<ru3%0-G.!!*32rXAi0rVus$$N:J7"TAB%
!X\i8!!rQ(!<NQ+%0?h9!!3-##6#&3$iL&+"UtA>!!3'!!<`f0%0-M0!!*0.rXAi2rVus#$2tA6#lXf)
!=8Z6!"&T(!!W?2!=Jr-!!*32rXAi/rVus$$iUS8"9&9$!X\i8!!`E&!<EK*%0-\4!!!6&%0-_5!!!0$
%06h<rVus%%/p\9"9&9$!Xnu:!!E3#!<EQ,%0-V3!!**+rXAl6!WE'!#6#&4#m1)+!!N91!=Ju.!!NE4
%1N^JrVus#$iUS8"oSE$$N:J8"p+]'!!rQ5!=8i,!!!0$%06b:rVup$rXAl:"9&9(!XoMI$j?P0!<ET-
%0-V2!!!B*%06Y7rVup(rXAl7!r`0""TAi2#m1)+!!E30!=T,1!!NB3%1N^Kr;Zg*rXAi3r;[34%1NUE
!!O<+,Qe)D!!<93%L2n4!<EK*%0-_5!!!3%%06h;rVus%%/p\9!r`0#!t5);!!E3#!<NW-%0-V3!!<6-
%1N=I#5nN%#lY85$2ji("TAi2$Ng;-"U#5C%1E@<!!*-/rXAi0rVus"$N:J7#5nN%#lY86#Qao)!!`E3
!=8i,!!!0$%06h<rW!*'$k3XS"9&9$!Xnu:!!N6#!"/]7!<rT(!!!<(%06_9rVup%rXAl7!r`0#":YGB
%1<:;!!NE4%1N^KrVus"$iUS8#5nN%$N:J8"p4c(!!rQ5!=8i,!!!3%%06b:rVup#rXAl:"TAB)!XoMI
$j?M/!"8c8!!`B%!"/]7!=/c+!!!<(%06b:rVup%rXAl7"9&9#"9&`1$j?P0"T]#@%1EI>!!N`>%1ELC
rVup*rXAl6!r`0"#lY86#m:/,!!N91!=Au/!!!-#%06kArW!*'$k3XS#5nN%$iUS9#Qao)!"/]7!=8i,
!!!<(%06e<rVup$rXAl9"TAB)!t5VJ$jQ\2"Tf)A%1EO@!!!B*%06b9rVup(rXAr:!WW3)!!iuB%1<:;
!!NK6%1N^LrW!*($k3XS#6"T'!Xeo9!"&T(!"&W6!=8f+!!NW:%1N[HrW!*+$k3XS"9&9(":P_K$jQ\2
!<NW-%0-V3!!*--rXAi6r;Zg(rXAl9!WE'&#Rh.O$j6J/!<io2%0-M0!!*31rXAl4!!<3$!X\i8!!rQ(
!<NT,%0-b6!!NW:%1N^HrW!*+$k3XS!r`0#":Y8=!!E3#!<``.%0-V3!!*--rXAi5rVus#$2tA6$iL&+
"q:J?!!3'!!sK)B$2":M!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!1X&`!-AcBI<%LS!!"X,QC*.o#ljrII$C"R<>,?4&oWr#NaNh,!"*+pR$)24!!!'s
MjK]L2?3^X5DGJjHp[u9!%rbdR"8*A!!"*aPF./2'*&"GBoeXBB,psP$=&FTPAr#O!!5iJQ^)hV!!!$^
J!QFO8-/cA!%`AZR"eWK!!"-ZOdM#9&HDeF@u?Y9D]SlY$<DkJQ$FhZ!!5`BQ^3.arW"`9HBsnO9EG1o
.rUW=MHgGf!$Gp8R#bto!!!^<MO9QN*WQ0J:kG("Ik(L!"@IR'Q\Ra'!#RV7QC!V-!<<*KC6P$H?jH`4
+(1+rPAh*P!!!^5LR=?U*WQ0J8q34oLF`E*"?q$sR#aH1!!P,pQC*n6rW"`#A!<:GAHi,7)d/2gQZiu@
!"r"\R$`OH!!!BoI[HL_.f]PQ2ftFSPs56K!A%oNR$U_M!$EIkPF._K"onW@;N@-3G7afT&P%SCR"HI\
!"1o;R$`n_0*)%U0Q<DHPsGKP!@MHFR$U_V!!"'BPaIhL%KHJD99,C,G8^M_&3tr:R"H[e!"(Q0R$`gi
"TSZTD4$]S6jitq,%6h*Q;e@p!#\_"R$_G$!WWg$O-l;W+9MTQ2hdWdJh.-,#qUFjR#<s3!!=E]R$a(-
&-)_M?C7+/Q<+k&!"r(mR$_J,!WW]pO-l;X-NsJT1PV9aJM[]6"snV`R#=0>!!4*VR$a%1'`\4H?'q"F
=rmYD%8<%SQtRcI!!bTJR$`%M#QOrWLR=H[3XYoi*dj?BMFJ0X!>B::R$(>d!!!C2R$a1H,6.]I8sYj2
CF]Gd!B6,^R$`+W#QOiNLR=H[64Ntq(O_[<MbOlc!"<\2P&qc;!)aG&OI&cL!!"'CPaIhI%fcSG9TPR.
EZ"oY&O;)<R"-Fb!"(Q2R$`df"oncUDjZoU643bp+_-n,Q;S7o!#\e%R$_>"!WWj&OI2DU+T_WO2h$OL
R"$Rj!!t3)R$`^j$NL8RE1!#U7h>Y$)I]##Q<"h&!"r.pR$_D*!WWZqOdMMX-j0MT15M<bIl%K4"XSSa
R#!s;!!4*YR$a"/'`\7I?^R4G=WRPC$r3+UQY.TG!!YTLR$`"L"TSWUM3sZ[3XYoi++BTELdhsV!Cd]?
R$a"5)?9aF?C7+F>pB=L"AG/LQY@uP!!,*DR$`%U#QOiOMO9c]64Enp(Oha=M+eT`!"3_4R#kDj!!!(,
R$a.K./j3'8sbp3D)21m!&p.0R!:b"!!"=&Q^E@q%0-AFI[?FY<>5E5$uM;tOBit/!!HPjQ^)88!&X`W
8Wf@+EAmmu!&oe%R!_:.!!"?tQ'd2#%KHJGGE\DO=r%)<%;:lkO_,a:!!QMaQ^)GArW#&NM3jNP495E^
2M.6^IRs_D!%3/YR"\TO!!!pVOI1r8(B=FG@uQe;Ca/o[##pAFQ$+h]!!,N?Q^<+drW!*ZI$L%N:FubN
!%2lOR###W!!!pONgPiA(B=FF?&=r4F<ghd##Bi<Q$b@f!!,?5Q^<:krW#YJG*SGN;[!.$,]&X2N+3:s
!#T4)R#u>'!!!R2Kp\*O,QIfM8q34oKJWZ/!^1aoQ\n64!!+`kQ'dS5!rr<FAW`@BBFOqA(g;faPT4o`
!!!O+KUA$V,6.]L7!tAgM_tJ7!]P.dR#so<!$Nn,QC*q@!WW3D?BLVAD@6FE(K60XQ[TYL!"VYQP^5_0
_uPAhJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&JcLB&JcLB&JcLB&JcLB&
X8j[nFkl]/B*nV=:>YgEe9_f.!&`'qr8<VZ!!"1SoDIpJ0E;(cU@%mMZ$o(@!!\2@qtIj/!<<.7i;3>p
E<uUF:=An7fnL.?!&h^br8j@j!!"7JmJQ@Q0`V1dRH=A<]LMr%$%Uk/prQkD!!6`]q>8]e#ljs!`qB8e
O:hNn2Ri/QkG04#!$nE)r9q-N!!!^phu*/f8H8_tH.MlgeRJU[!Fa+FqgRCN"onWq]Cc$aQk9;u26?3C
mB7T3!$dror:@`[!!!agg&1To8H8_tEQe7Ui+2oh!aED5qs&e:!!#NnoDJ'N%fcScU$V^L\K1_N,EUp_
pWbMo!#9n3r;,;D!!!C>`VfZ$B)ho5<4DZ#oS*GJ!CE^Vr:m0"!!"[<l[Jd._&NFT+bJYMr7Nb(!#9J#
r;>nR!!!C5^\n$'BE/#79s4<ir.kFT!BcqFr;<K)!!"O+lhp[t+TVQcGi/GsfJ`g2'5#Pfr96u[!"2`<
r;?5(#QOupWVZPiM@fjh23db2r2C\:!%*3]r;=Db"TTNYhYd<'5m[N(=anWnr9.5l!")9-r;?/+'EA4q
U\aobNZA-#/;s3!r2D+I!$QLOr;=>j#lkfNhYd<&9FUt4:!EP5k$\u)$9blrr:5+S!!=mGqu$8Q-ij;m
K_G?AX#:.^)Jng=r5(l1!"i8hr;>,J&HE5+bl%D#CE*<[0=C`UnUMtf!c'!Kr;?>X1BIOoJ+ig<Y<`Eo
&S1>-r52DA!"2KYr;>,T('"Uubl%D#Fs$be,e!XKnVJju!>h1%r:ljG!WW[Wq#(&r9*bM&?17^h`EWlQ
"%2&Fr7Gm(!!+Xqr;>Z,,QIf^[f$!Y9aLIn#QYoff(]#r&cd@\24!q5r1kA7!%3<ar;=8]"TTNZiV`W'
5m[N)=O6pCj]2ik$:ql.r:4_?!!G<Zqu$8I*WZ9mNqWDKV()TJ+a<>Or4Y/t!#K)&r;=u9%0-r6ci!_%
?PNPJ4hCRhn95rS"#$AGr:l=%!<==!p\arf2$EsuDXRH#^IEYZ!"i;kr;>&F&HE2*ci!_$C)[-Y0Y72[
msZVa![=97r:lU8!<<pgq#(#j63[E$BCGcr^ekL?$;TXZr7#-i!!YC.r;>Su*rlBg]);KoLF`E*'V>7#
p7+5G!"4;Qr;3`m"TS^6nbi=&>Rg`77caLFeSQ*&!%cOqr8W6U,6.]\]DVToOu!(<#G1kkoqb"V!!.NE
r;*m&"TSO.oDJO,B+=nA60%k?fQnA7!%H7jr8W_^!!!hFq#'QN2?3^aRe?UPX[rKm!dsM7qS$5=!!$<e
qu"ZY%fcSrf_GBuK,=Rg/&_,Yjd7Cq!#_s/r9gOF!!!Fmlhl5*[nZr(!dWl(qSd"K!!$9Yq>AZg%KHJq
bOk_iO;S#u/A(ELl(][-!#h]ur:%'U!!!FdiV`Dd;ZQk$FP6Qfct`aa!Em\Br7Zc4!!#:!o).O:(B=Fd
YO28SXsa8M)k5pdo"I3d!"Xb;r:eK;!!!.=d/3[oDup"?<l9C[r8WYB!!#6jnbh[J(]XOeU[%dH\gROY
*0B(UoufJu!"aS,r;#&J!!!18`VTGnFTDIC;7Q>tm?.eV!'R=Mr:-m*!!"O;kPY%j-NF,bK\QG#f/s$5
&95qlqWCo[!!ZcDqu#u.!WW6oYP%heQO!Qk3M5d<q6^n:!%AG;jo"u",ldo`HJ/5jfkqpq!.k3&!.k3&
!.k3&!.k3&!.k3@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k4/!*oqKi;*;j
BF4_>:>bsJeU8)2!&`*tro&q^!!"1SoD\*M0`V1dU@/!OYseWm#);C?q7p/7!!-flqu"]Y#ljs#deNgq
L(jUf2T#+cjdRCn!$ec:rpHmC!!!Y#IcgV$]gr,'$%Uq2qT<1H!!6`]qu##j#ljs!`qB>hO:hNn2Rr;V
l)#U(!$nE*rpdKS!!!^phu35h8cShuHIi#jemnd]!Fa+Hr8<&/!!#X)o_n!A&HDegXR?)UYTEiF,F[`n
oYWKc!#::CrqOu8!!!@Gbl%@tAcVl5IU'V`r9An<!!#Nno`"?S%fcScU$_jO\fUnP,EUpapWkSp!#9n3
rqkYI!!!C?`r,c&BE/#6<O_i'p4i_M!CE^Vrq`Q'!!"[<li-h")uos^K&HY,gG&[.'l_S"rp35W!"3,K
r;QJ*!!!*qYkn@sM$!_Y4Iu0Eri-P1IK1pVli-n$+TVQcGi8T#g,B$4'5#Sirp!>`!"2c>rVlM-#QOup
WVc\mM\,si23de5ri$q>!%*3^rr0hh"TTNYhZ!N,5m[N(>0['Gku\Dq$:q`,rq(4F!!>9Wqu6JR*<?-k
MtR)KW[\)N+a35OrkUW&!#T/%rr1PEILZ>g:!EV9k@,/+$9bltrptFW!!=mGr;QPW-ij;mK_GEEXZ$Fa
)Jnj@rkh/4!"i8hrr1MO&HE5+bl7V'C`EE\0=LlZo7/1h![=04rq`$>!WX*fq#:5q5mRH&AFBHr`)7$E
$V]LXrmtWr!!kL,rr2#'+oh]k\,QBs3/K9h!>h4'rqN*K!WW[Wq>U;u9F(V(?L[sn`a'&S"%2)Irn)**
!!+Xrrr2#1,QIf^[f69pO>?S249?I\h>I9LLCsRe24!t8rhUY:!%3<brr0Va"TTNZiVri,5m[N)=O@'H
k#W#m$:ql0rpjtB!!G<Zr;M0AM]Vs#/<BQ)rhh4K!$QRSrr0Ym#lkcNir8r-9F_%6:!in=j^8f'$9c$#
rpk:U!!=mKr;QPU.KKMnL\UlIWAat\)K5*DrkCo0!"i;lrr1DK&HE2*d/O%*CE!6Z0Y78_n9u_b![=<9
rqMg:!WX$hq>U;o63[E$BCUHMrkVG@!")N_rr1GW'`\FsdJj.+G96ee,eF!SmtiXs!#2()rqN$H!<<LW
qYpDt9EbD"@.O<r`*<cP!Cl/Lrmks'!!"Rtrr1u0,6.]\]DhfuPVW:>#G1qopSL:Y!!.QGrqs9,"TSO.
oD\a1B+FtB608(EfR"G8!%EBDr;Pf:-NF,_\G6'mSMpNK$Cg_epTI0h!!7T=r;467"TSO.k55,%EXr-M
6J;57gk?RF!%Z%^roTUs!!!n?nc&$W3WK-gQL+SE\k`>,!dWo*qo<:O!!$9YqYeol%fcSrbk:tnOVn-!
/A(ENlD,j/!#h^!rpdBZ!!%HVN8sj1`)?[:"E`DqqTs$]!!-6Jq>K'$%0-An^\%NdRhu,*/?eI?mB7r=
!#qHhrq!lg!!!O`g\gil<WE+&DUA:Xgi3Aq!ER/6r8`bE!!#6jo)@sO(]XOeV!J$M\gROY*0K1Yp<5]#
!"aS,rVG8N!!!18`V]SrFTG\H!E$E%r9][T!!#0]nc&*^(B=FcRHXYD`$bTc)MHoFq:Rn2!"a.prVPb[
!!!40^\ds"GQIjG9<e0hpm;?f!'-\Arqa#;!!"I.k5P>*-3+#aHJ8AtpW6G1!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!;Z\>"?W@RrVXZK$31'$
hu!E'I1lS\2:)'siK,2_!$SuGrp6=5!!!Y+meua^70!;lL?\X3^fga=!GUKhr693f!!#dBq#9!%'EA+k
_Y!ihRiqb3,I-\9m]A2D!"ta_rUdco!!!=Uhu*>n?i^6/A^pVTep.Q%IK3']p&<m2&c_ni\FKR_VBGp>
,c0c)n[L@T!#1OPrUn6(!!!@Pf)5BqA,uZ2@EJBDi-tq2!(srsrTKX]!!"mXmf)XY*rl9cRcXP@___>n
'o1NBps_n9!"*_ir;5Jc!<<1+^A@cmK*;5T8$MXbn=gEn!&L>9rq*cDIK0?mOQ-96cS>J#'n"R2qr(0J
!"3J[r;>tr!!!(#\,-'sLB@MW6DsJTqPXl(!&'Z(rqsYR!!"0oi;W]00`V1gE7+[alq.6X$XUXHrqL1-
!!>s"qYpDL!rr?aSb<!]WY#42/;icmrkfl[!$HOErr1V1!<<dFci3q/ISg4J$WOh<rq:17!!GZgqu6MO
&HMkhPkG%TW?)'?-@bC]rkpGn!$#h3rr1P9#lkTAc2R_,=:P<<8@ea!oPtWG"$34Srqh`s!<=[/p&=rj
.K]YoG3o5-_)_o'(h)>$rn'pT!"VfJrr2(i'`\S(\,QBuH6*%g0:r+@Ieo9W!<=?tpAY&n2[07#D!q<%
_aOq5&Q[fgrmt6a!";3<rr2"q)up6t[f69tJ0t@!,+ST1qO'/A!#^:]rr'#d#QPHImf*4(;@NU69]5pL
f4,Ts#WBp+roJ>J!!=OVrr2GE0*)(iRf36\T035U%=J!Nr3K'&!!lp#+TDA[>n-i:6fS+EfPVN+!A)Oq
roJ\V!!!nFrr2]C?ip-(<=:glnbrIaLCsRe24!t8rhUY:!%3<brr0Va"TTNZiVri,5m[N)=O@'Hk#W#m
$:ql0rpjtB!!G<Zr;QPN*ruBnO8&YQV^_fL+a<ARrkCH"!#K*nir8r-9F_%6:!in=j^8f'$9c$#rpk:U
!!=mKr;QPU.KKMnL\UlIWAat\)K5*DrkCo0!"i;lrr1DK&HE2*d/O%*CE!6Z0Y78_n9u_b![=<9rqMg:
!WX$hq>U;o63[E$BCZ!#_,1XA$;]a^rmbHm!!YC0rr1u&*rlCl,eF!SmtiXs!#2()rqN$H!<<LWqYpDt
9EbD"@.O<r`*<cP!Cl/Lrmks'!!"Rtrr1u0,6.]\]DhfuPVW:>#G1qopSL:Y!!.QGrqs9,"TSO.oD\a1
B+FtB608(EfR"G8!%H:mroK(d!!!hFq#9cR2ZNgbS+ZaSY=\eD!!7T=r;467"TSO.k55,%EXr-M6J;57
gk?RF!%Z%^roTUs!!!n?nc&$W3WK-gQL+SE\k`>,!dWo*qo<:O!!$9YqYeol%fcSrbk:tnOVn-!/A(EN
lD,j/!#h^!rpdBZ!!!Fdj8AYi;ZQk$FPH]hctigb!Em_DrS*!S%0-An^\%NdRhu,*/?eI?mB7r=!#qHh
rq!lg!!!O`g\gil<WE+&DUA:Xgi3Aq!ER/6r8`bE!!#6jo)@sO(]XOeV!J$M\gROY*0K1Yp<5]#!"aS,
rVG8N!!!18`V]SrFTDIC;7ZH!m?7kW!'R=Orpm3.!!"O;kl19B`$bTc)MHoFq:Rn2!"a.prVPb[!!!40
^\ds"GQIjG9<e0hpm;?f!'-\Arqa#;!!"I.k5P>*-3+#aHJ8Amb[qp8!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&!.k3R!%S*oCq]E8[SmG3!'dg2bH#+`
!!"RI`QPZ/(]XOUQGUhYIjP-q%t_O=_N0.(!!!1=]#r'_7f`Sj<jTliUfn$(!'mO'bHGXk!!"R?_ooN9
)#sXWNkW]NM'i9'&::q1_j<@`!![)AaiC,K!<<-uWlN5^?NpK14eK^:ZZ6QV!%a>LbI`?D!!"$l]?A!S
-NF,YFL00/TfN/R#[sdUaK//<!!,iha3&k:A-Dr54-mh.\U"_c!%Wo?bJ/rP!!"$e\BDa[-ia5ZCTkq$
W]L1\$!X7KaL+kG!!5`\`lbr-"98E^Nl0&TIguGY."K%T_iko;!$$!ebJpA,!!!XAX38Sk3rf6f<1h=U
^/G"3!^r6mbJ\3!!!+s2_TU#S$ig8SGeJRLb*s1I!#fRYbK@"9!!!U7WQWJt3WK-e9Ua,I`)?X9!^;R`
bK=Z'!!+a%_TU,W%KHJRDS=6:S/VG.(gjVmbH3;q!"i)+bKIL^!rrZqQcmRj<X&O+2M]Asa_hOf!%E-0
bKGVV!<=3R]Z\Kg,m+,^<jKolX>C+]%S2&FbKIFd$NLJoPfq7e=qCZ9/q_6gaD_pr!$cL$bKGV`!WX0G
^!"Tg0*VCi:9r'dX??sl%6p]4bIC:Y!!k9BbKI\/(B=L^I`]dRFW^\b)f!=7bD7YO!#&GJbKHD7#lkE'
ZHLFl7LfD*2PnU?[oO4D"XfMWbJ7^2!<R'VI`fjRGpi^o'5,8,b)8%[!"Di?bKHJB$31;p[*-Xn:CmL/
/>^P5[p9jO!ZdKJbJ.p?!<<^Zb0.eR0*)%YA&c^7O?<^I"A?JPbF_B8!!5'dbKI"h'*&%YV9@&kB,gmO
'9^P^ah:p`p](R+7Z>('aD27cIK1jB`66>U)$'^ZB>2R4Qm2\5(K[uebGd9%!"VW!bKI@`$NLJoQcmRf
<tG?7/r%Kka))Un!$ZI%bKGM^!WX-G^<=]f0*VCg:UJ<gWB:Og%R6l7bI1(T!!k9EbKIY-(]XX`K$)9V
EZbA_)K!L;b(_DL!#&MMbKH>5IL#o_8%$O`WC@<s#r\^)bI1Cb!!O^8bKIV2*<6-\JBQ-UGUNRm&o5M1
b)%qY!"DoCbKHD@#lk/p[`cjo:D!R0/>p\7[Ts^M"!*]NbJ%g<!!!R[bKIhQ0*)%XB?/3;O$!RG"&?YT
bFM33!!,$fbKHqf&c_nWWQWJnIV0W#!"tXAbJ&-I!!!4PbKIhV2?<dXAB;s8PXGZT!)(/ObFqfB!!"mc
b0-nq'*&"WW63;mD]SlY'U6Y]^4%O3!""(lbJ]<"!!!(1^rj`d9*>4p9=W*eV-+0+!&gq!bHP^p!!"78
_ooT:*rl9UMo!TNL+`N,$@'8,I`.I7!<<1/\&l^a:]pau8[$1WWaQ;9!&^OibHl:(!!":1_99EA+92BW
KY5LDOY6\7$ZWSs`193q!!?K1aN18[!rr<lVT-c_BaXn@1Rc2([sJbg!$mK:bJ&lX!!!g`\')XV0E;(]
CTtt#V*k:`"B_PBaKJ_J!!,NZI`BO=D@-@D1QoSt]Rgds!$m0/bJ9>b!!!gW[EHL`0`V1_A#[VkY=/Ek
"B(o6agk[X!!,BM`QGo<#ljrZLVV*LL_Bag,C6rE`LJ%N!#KFTbK$\;!!!I4VT[)k7K<Dl9UWuE^g7'B
!'Q:[bJnc2!!"R"^rsi^&c_nT%rf)&b,$0[!#B"HbGR]:!KmG7!.k3&!.k3&!.k3&!.k3&!1X%@!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!8dc+#:jV[?P3A>!"1,*/g_>8!!!?P/M8Ii
"98E*+=o,q*!cNE!ZWaD/0>5u!!O/g/hJ:YrW"5U-nR%u&cht4$RIAW-Pljb!"'l#/h%_C!!!3F.kW=n
#ljr,)[%WC/0PE#!&GB</hJ@[!<<*1-7phs('+C8$R75U-lE*e!!j\u/h.kE!!!0B.P<7p#ljr,(agpe
,RaSO1DV;i/LD#0!!!NT/M8Fe!<<*-+=o,p)Zp'?#TbKK.infn!!O;j/hA1Q!!!':-8$ks$iU,0&g].^
.1lIY1CkW\/h.Y<!!!?J/1rIn!WW3)*%EQl+9VZE"W/[@/L:]'!!3o_/hJF[!!!$3,;(T!&cMb6%3R5T
/JnBd.L@+H/hJ+G!!!0A.P<=t"TSN+(FUmg-4'YP!YHb3/h.;1!!*TS/hS[erW!*0+"])t)#aL?#9,3H
/ft,p+oh`^.P<=u"98E('IPLc-4'YP!Y?Y1/h%50!!*NP/hS[frW!*/*\Aus)?'Uc#9#-G/fk)p!!F)f
/hS@R!!!'4-S@"u$31&-%OE_[.1ZCY!=Br%/h@_9!$MRe/M8Xn!rr<((G%0k*X)ND!u*4;/gCZ&!!*TW
/hSI[#QOi*%4*VZ.1lIY+UK8D/h@b?!!!0A/M8Un"98E((G%0k*sVcG!>-e6/gCc'!&G*3/hSI]!<<--
,q^f!&cr%5"s>NN//JEh!!=/m/hJ"H!!!$8/1rOs$3:,,%k91a,7XVP((;QC/g_/3!!!6L/hSRe"98E)
+>,8s$5`sI!!+#k/hJ%LrW"D^/M8Xu$ip>.%kB7b,nC"V!"()+/g_24!!!3L/hSRh"TSN)+>,8t,7aAH
":QG*/K"He.L-kC/hS1I!!!-;.P<=t#64`*&LT1`-40_Q!Y-P0/h%;2!!*HN/hS[grW!$**\Auk/K"Wj
!!O2j/hS1K!!!*8.P<=t#lt#+&1B.`-4BkS!=^>-/h%A2!$MXk/hS[h!rr<)*%iiq)$Bp>!uEL@/fk5t
!!*Z^/hS=UrW"S^-S@"u%flY1$77AX.1u[^!!XPu/h7_@!!!*?/hS[o"onW((G.6l*XVoJ!"^X_/hS@Y
rW")M-n[,!&-;h3#:;&U-klda!!FGt/h7_A!!!$=/hS[p$2soS(+h-k+:J8N!"US4/gLr.!!!?S/hSI`
!WW3)-8$o"(Bjd="!B3K.iS`m!!O;o/hA"MrW!lQ/M8Xu%KQP0%P'.a,nU.X!":5-/g_>9!!!:",qU_u
(^0m>"<]9K.i\co!!+#j/hA(Q!<<*6/1rP!%flY1%k'"^-5$@[!"(&)/gqM<!!!9K/M8Ll"TSN**\8op
*XMfH!?*I@/0PK%!%\g5/M/4Z!<<*1-7phs('4I9$6q,T-l<$d!!j\u/h.hE!!!-A.P<7p#ljr0!Z*7;
/0bZ(!&G99/M/:^!<<*/,V:Vr(BOR:#9bWN.2r?h!!jVr/h7tH!!!-@.5!.p$31&-(FCad-4^"T"VE(5
/LM21!%JF%/M8Li!WW3*+"T#p*<Z?B"ro*F/0G)r!!F,e/hA:U!!!'9-8$kt&,lP5&0ibZ.MMn7!!!HN
/M8Ol!WW3**@i`n*s;QD"WJpD/Kk8t!!F)c/hJCW!!!'5,q^bu&,lPX%jESX//A6d!"0i"/hJ"C!!!6C
.kWCr"98E)(F^sh,m=8K";E18+U%K=JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@p&G-u&IX[#JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&S,e-@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&o)Jmp(,7fWPlQC9JcLB&JcLB&JcLB&JcLB&S,e-@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&iW'&b-4^-R!.k3&!.k3&!.k3&!.k3&!.k3M!!WfgFK*Ku/,K<u!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!1X&e!!WWj]!QoQ
%?:F?!.k3&!.k3&!.k3&!.k3&!5\^@*-U'6r8'pJaT-nmJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcM;@JcLB&JcLB&JcLB&JcLB&JcLB&YQ+nHCZbNe`(^cs!.k3&!.k3&!.k3&!.k3&!.k3&
!;-<s'O'#croRo5Q2lL:JcLB&JcLB&JcLB&JcLB&S,e-@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&irB<;OR2uGa"mpu!.k3&!.k3&!.k3&!.k3&!.k3M!!`]`aSu2)M_=o-JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@qu?pcXRZ;b
[2P&*JcLB&JcLB&JcLB&JcLB&JcNUe"rODcXa<5CaT-nmJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcM;@JcLB&JcLB&JcLB&JcLB&JcLB&YQ+kXJ%jU^Nt^4IJcLB&JcLB&JcLB&JcLB&JcLB&
oDf$r)^#k'!gNb;!.k3&!.k3&!.k3&!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!9*t^!t6YC1Bs`WJcLB&JcLB&JcLB&JcLB&JcM;@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcP?A"Teu?'b1A5!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k43!!392$).EO!.k3&!.k3&!.k3&!.k3&!2ff%"@%@0^4%^9
rW%NMJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
S,iNg"p$DmMfr;UMu\G0JcLB&JcLB&JcLB&JcLB&_#O`A'9i=kq5Hjdb5d+oJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&JcLB&JcLB&JcLB&JcLB&Z2b+4=Ln8&kB?s[!.k3&!.k3&
!.k3&!.k3&!.k3&!:p0q"GQ[NqR]i5QiM^<JcLB&JcLB&JcLB&JcLB&S,e-@JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&jT#MgC!$8Ml$*9,!.k3&!.k3&!.k3&!.k3&!.k3K!!`RMl2:G"
Ba+J9JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcM;@rW!0-HJ&/lf4b8F!.k3&!.k3&!.k3&!.k3&!.k3d!!`O3]#_IF8Hm9;JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&S,e-@JcLB&JcLB&JcLB&JcLB&JcN(V#6nt]l0lAi!SII)!.k3&
!.k3&!.k3&!.k3&!.k4A!!O2m/KYH'QN2U;JcLB&JcLB&JcLB&JcLB&S,e-@JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&j8]Aq+Y>l@*W`,<JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@q#CBqMZA>/
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcP9?r;i5bJcLB&JcLB&JcLB&JcLB&JcM;@
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcOg2!!/bnJcLB&JcLB&JcLB&JcLB&
JcMYJ"q!"nH]i4hrW%NMJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&S,iNg"rop'4YmoWMu\G0JcLB&JcLB&JcLB&JcLB&^AnH]GNSMj[6i%:JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&S,e-@JcLB&JcLB&JcLB&JcLB&JcN(V##`/2p"j-l
fDpL'JcLB&JcLB&JcLB&JcLB&JcP?A"rhURrr0W0QiM^<JcLB&JcLB&JcLB&JcLB&S,e-@JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&jT#Ko_uBZ*B+^s?JcLB&JcLB&JcLB&JcLB&JcMYJ
"qYG:rr0fErW%NMJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&S,iNg#&qZ_rpO%sMu\G0JcLB&JcLB&JcLB&JcLB&^AnHB<SQWpY@5TSJcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&S,e-@JcLB&JcLB&JcLB&JcLB&JcN(V"a@o[rp<P6!.k3&
!.k3&!.k3&!.k3&!.k3&!:^$m*E#Kk-4uUFJcLB&JcLB&JcLB&JcLB&JcM;@JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcOm4"YEAVCi1Mo!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!;Z]q!K-r0
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3I!!Ncb
6V^?ArW%NMJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&S,iNg"WSHr&.8Pt!.k3&!.k3&!.k3&!.k3&!.k3b!!P0UeDefUb5d+oJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@JcLB&JcLB&JcLB&JcLB&JcLB&Z2b'3cJHd3/_9uS!.k3&!.k3&
!.k3&!.k3&!.k4@!!PEqo)@jhQiM^<JcLB&JcLB&JcLB&JcLB&S,e-@JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&jT#J-li-C\25C5(!.k3&!.k3&!.k3&!.k3&!2TZ!2RDoPlcT2,JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcM;@rW!,L
mf)XW15c-a!.k3&!.k3&!.k3&!.k3&!58F:1ofj:l-@HPJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&S,e-@JcLB&JcLB&JcLB&JcLB&JcN(V"kW2Am&)Si!.k3&!.k3&!.k3&!.k3&!.k3&
!:^$m(fG9k@oSfqJcLB&JcLB&JcLB&JcLB&JcM;@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcOm4"cf7XUN%EP!.k3&!.k3&!.k3&!.k3&!.k3H!!!*""98N&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3I!!NE8*[2gRrW%NMJcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&S,iNg!!7lT
JcLB&JcLB&JcLB&JcLB&JcNLb"WhE]^r!n1!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&!.k3V!!T7!W0^X(f)UC&JcLB&JcLB&JcLB&JcLB&JcP<@"Y#Mp
rqlDV!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k44!!W2rrT/qbU]>uHJcLB&JcLB&JcLB&JcLB&V#UZIMrt$:q#18F!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!1X&g!!W8uroK"aMZA>/JcLB&JcLB&
JcLB&JcLB&^&S<aM<4a8qo\tk!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&
!.k3&!.k3&!.k3&!.k3&!3uS.r;HWVM'ggSJcLB&JcLB&JcLB&JcLB&JcLB&nGi_0=I#b[UmM.6!.k3&
!.k3&!.k3&!.k3&!1X%@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!9F1arVlfX
LaJntJcLB&JcLB&JcLB&JcLB&JcMVI"Tf&F()@Ya!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3@!.Y~>

%%EndBinary
grestore
np
gsave
155.583 130.909 mo
145.175 130.909 li
145.175 126.578 li
155.583 126.578 li
155.583 130.909 li
clp
145.175 126.578 mo
155.583 126.578 li
155.583 130.909 li
145.175 130.909 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[10.8 0 0 4.90909 144.982 408.764 ]ct
snap_to_device
<<
/T 1
/W 33 
/H 15 
/M[33 0 0 -15 0 15 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1 dict begin
/T1_Text{eclp cmyk
YLRXQV+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf143.917 138.512 mo(T)shT1_grestore}def
T1_gsave
T1_path 145 126.327 4.92271 10.75 -4.92271 -10.75 ()
0 0 0 1 T1_Text
false sop
end
grestore
gsave
263.311 130.909 mo
252.903 130.909 li
252.903 126.578 li
263.311 126.578 li
263.311 130.909 li
clp
252.903 126.578 mo
263.311 126.578 li
263.311 130.909 li
252.903 130.909 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[11.1273 0 0 4.90909 252.655 408.764 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 34 
/H 15 
/M[34 0 0 -15 0 15 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&q#Gp~>

%%EndBinary
grestore
np
1 dict begin
0 0 0 1 cmyk
YLRXQV+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf251.646 138.512 mo(T)shfalse sop
end
grestore
329.548 100.259 mo
286.666 100.259 li
286.666 97.2001 li
329.548 97.2001 li
329.548 100.259 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[43.5273 0 0 3.6 286.364 439.527 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 133 
/H 11 
/M[133 0 0 -11 0 11 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 133 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 133 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 133 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 133 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&WW322)'0h;
%c78<!.k3p!.k3l!!`R/XNShm>6;\BJcLB&JcN"T#6]"tqu#,f"PWp.!.k3&!13`k"EiGqr7Z8ro)O@B
JcLB&JcH)W!!IK#qu#5n"LeA]~>

%%EndBinary
grestore
np
329.922 101.009 mo
286.291 101.009 li
286.192 101.009 286.096 100.969 286.026 100.899 cv
285.956 100.829 285.916 100.733 285.916 100.634 cv
285.916 97.2001 li
286.666 97.2001 li
286.666 100.259 li
329.548 100.259 li
329.548 97.2001 li
330.297 97.2001 li
330.297 100.634 li
330.297 100.733 330.258 100.829 330.188 100.899 cv
330.118 100.969 330.021 101.009 329.922 101.009 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[44.8364 0 0 4.58182 285.709 438.545 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 137 
/H 14 
/M[137 0 0 -14 0 14 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 137 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 137 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 137 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 137 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNC_"Ul7i
*Z>O6!.k4,!.k3&!4W"6!a;\Kbct@Rdf=t"JcLB&O8oLgE7b!bfl@5m!.k3&!.k3&!9X=e"EiGqr7Z8r
U]>uHJcLB&^AnKAG22umgiinF!.k3&!.k3;!!`XOhY[3$E!5e5JcLB&JcLB&mJmIo?aS)+Y#kds!.k3&
!.k3j!!`T4(*";1$N\3HnGn(~>

%%EndBinary
grestore
np
405.359 256.965 mo
524.428 200.266 li
405.359 256.965 li
.819211 .6925 0 0 cmyk
ef
405.037 256.288 mo
406.391 255.643 li
407.036 256.998 li
405.682 257.643 li
405.037 256.288 li
407.745 254.999 mo
409.1 254.354 li
409.745 255.708 li
408.39 256.353 li
407.745 254.999 li
410.454 253.709 mo
411.809 253.064 li
412.453 254.419 li
411.099 255.063 li
410.454 253.709 li
413.163 252.419 mo
414.517 251.775 li
415.162 253.129 li
413.808 253.774 li
413.163 252.419 li
415.871 251.13 mo
417.226 250.485 li
417.871 251.839 li
416.516 252.484 li
415.871 251.13 li
418.58 249.84 mo
419.934 249.195 li
420.579 250.55 li
419.225 251.194 li
418.58 249.84 li
421.289 248.55 mo
422.643 247.906 li
423.288 249.26 li
421.934 249.905 li
421.289 248.55 li
423.998 247.261 mo
425.352 246.616 li
425.997 247.97 li
424.642 248.615 li
423.998 247.261 li
426.706 245.971 mo
428.06 245.326 li
428.705 246.681 li
427.351 247.325 li
426.706 245.971 li
429.415 244.681 mo
430.769 244.037 li
431.414 245.391 li
430.059 246.036 li
429.415 244.681 li
432.123 243.392 mo
433.478 242.747 li
434.123 244.101 li
432.768 244.746 li
432.123 243.392 li
434.832 242.102 mo
436.186 241.457 li
436.831 242.812 li
435.477 243.457 li
434.832 242.102 li
437.541 240.813 mo
438.895 240.168 li
439.54 241.522 li
438.186 242.167 li
437.541 240.813 li
440.249 239.523 mo
441.604 238.878 li
442.248 240.233 li
440.894 240.877 li
440.249 239.523 li
442.958 238.233 mo
444.312 237.589 li
444.957 238.943 li
443.603 239.588 li
442.958 238.233 li
445.667 236.944 mo
447.021 236.299 li
447.666 237.653 li
446.312 238.298 li
445.667 236.944 li
448.375 235.654 mo
449.73 235.009 li
450.374 236.364 li
449.02 237.008 li
448.375 235.654 li
451.084 234.364 mo
452.438 233.72 li
453.083 235.074 li
451.729 235.719 li
451.084 234.364 li
453.793 233.075 mo
455.147 232.43 li
455.792 233.784 li
454.437 234.429 li
453.793 233.075 li
456.501 231.785 mo
457.856 231.14 li
458.501 232.495 li
457.146 233.14 li
456.501 231.785 li
459.21 230.496 mo
460.564 229.851 li
461.209 231.205 li
459.855 231.85 li
459.21 230.496 li
461.919 229.206 mo
463.273 228.561 li
463.918 229.916 li
462.563 230.56 li
461.919 229.206 li
464.627 227.916 mo
465.982 227.272 li
466.626 228.626 li
465.272 229.271 li
464.627 227.916 li
467.336 226.627 mo
468.69 225.982 li
469.335 227.336 li
467.981 227.981 li
467.336 226.627 li
470.045 225.337 mo
471.399 224.692 li
472.044 226.047 li
470.689 226.691 li
470.045 225.337 li
472.753 224.047 mo
474.107 223.403 li
474.752 224.757 li
473.398 225.402 li
472.753 224.047 li
475.462 222.758 mo
476.816 222.113 li
477.461 223.467 li
476.107 224.112 li
475.462 222.758 li
478.171 221.468 mo
479.525 220.823 li
480.17 222.178 li
478.815 222.822 li
478.171 221.468 li
480.879 220.178 mo
482.233 219.534 li
482.878 220.888 li
481.524 221.533 li
480.879 220.178 li
483.588 218.889 mo
484.942 218.244 li
485.587 219.598 li
484.233 220.243 li
483.588 218.889 li
486.296 217.599 mo
487.651 216.954 li
488.296 218.309 li
486.941 218.954 li
486.296 217.599 li
489.005 216.31 mo
490.359 215.665 li
491.004 217.019 li
489.65 217.664 li
489.005 216.31 li
491.714 215.02 mo
493.068 214.375 li
493.713 215.73 li
492.359 216.374 li
491.714 215.02 li
494.422 213.73 mo
495.777 213.086 li
496.421 214.44 li
495.067 215.085 li
494.422 213.73 li
497.131 212.441 mo
498.485 211.796 li
499.13 213.15 li
497.776 213.795 li
497.131 212.441 li
499.84 211.151 mo
501.194 210.506 li
501.839 211.861 li
500.485 212.505 li
499.84 211.151 li
502.548 209.861 mo
503.903 209.217 li
504.547 210.571 li
503.193 211.216 li
502.548 209.861 li
505.257 208.572 mo
506.611 207.927 li
507.256 209.281 li
505.902 209.926 li
505.257 208.572 li
507.966 207.282 mo
509.32 206.637 li
509.965 207.992 li
508.61 208.637 li
507.966 207.282 li
510.674 205.993 mo
512.029 205.348 li
512.673 206.702 li
511.319 207.347 li
510.674 205.993 li
513.383 204.703 mo
514.737 204.058 li
515.382 205.413 li
514.028 206.057 li
513.383 204.703 li
516.091 203.413 mo
517.446 202.769 li
518.091 204.123 li
516.736 204.768 li
516.091 203.413 li
518.8 202.124 mo
520.154 201.479 li
520.799 202.833 li
519.445 203.478 li
518.8 202.124 li
0 0 0 1 cmyk
f
524.422 200.278 mo
511.675 202.511 li
511.131 202.606 510.767 203.124 510.863 203.668 cv
510.958 204.212 511.476 204.576 512.02 204.481 cv
517.675 203.49 li
513.341 207.255 li
512.924 207.618 512.88 208.249 513.242 208.666 cv
513.604 209.083 514.236 209.127 514.653 208.765 cv
524.422 200.278 li
ef
144.543 251.296 mo
82.1738 205.936 li
.819211 .6925 0 0 cmyk
ef
1.5 lw
[1.5 1.5 ] 0 dsh
144.543 251.296 mo
85.1956 208.134 li
0 0 0 1 cmyk
@
82.1738 205.936 mo
94.2949 210.469 li
94.8121 210.662 95.0747 211.238 94.8812 211.756 cv
94.6878 212.273 94.1116 212.535 93.5943 212.342 cv
88.2172 210.331 li
91.7869 214.827 li
92.1303 215.26 92.0581 215.889 91.6255 216.232 cv
91.193 216.576 90.564 216.503 90.2206 216.071 cv
cp
ef
0 0 0 1 cmyk
%ADOBeginSubsetFont: NWXQMX+TimesNewRomanPSMT Initial
ct_T42Dict begin
-0.566 -0.305 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /NWXQMX+TimesNewRomanPSMT
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000007da6670
676d000000000000089800000631676c79660000000000001f500000373a
686561640000000000000ecc00000036686865610000000000000f040000
0024686d74780000000000000f28000000606c6f63610000000000000f88
000000326d6178700000000000000fbc000000206e616d65000000000000
0fdc0000002c70726570000000000000100800000f456764697200000000
0000000000000000058e0000054c001f054c001c0394001b0000ffe10000
ffe40000ffe8fe4afffc056b0023fe6affe00313000000ad000000ad0000
000000250096009f002400f0013100c200c0004a00a60041005000940047
00cf00af000e007901cb00040023004400a80025011f0002004600170105
009900d9005c007200e500e00028004b00de011200240045007000160039
ffe90016004b0088ffb900d9000a004300ae00ba016c0153002f00430048
022c012b0025008fffc000170028ffcdffd80025009d00e50124ffb10048
009d00e600110027007f00910012006a00cafffc00000024006200a7017c
01e900210060008b0434048aff6b003b00b500d5014bff6b004d007905d8
09b5006c009100a3011701c0ffdfffe700be04010065007f008200880099
00b200c0022e034305a000200026003d004e00610065007b00d901130131
0340ff27ff42ff99004e00a700f2022b02c603070011002b0049005f008d
00a100af00d600e400f5010b0135019d01ab01ab01d101ee05d80000004b
0075007a0080009d00a600a700ac00b90131013102170217000200170029
00550080008f00a500b200b300d0014b015901c001c103a50530fe3fff14
ff15ffe7ffff002a00580099009f00c100e400f40130015901ab01ab0322
0374041e04740532fd81004d0064009c00d000d100d600de00e500f500f8
012a012a01e1027e027fff57ffa8ffe500000008001f00380051005a006f
0076007700a200c000c200c400f101fb0209027e02cf04c5057a05f0ff92
001200260042004b004f005100530064008b00ae00b200b800b800d600f5
0111012001310138014e01520167018f019601b801d901d9020602210271
02ea03b003cb03dc04360505ff3a00120016001e001f002300570068006c
007e0088009200a500a800c500c901150126012d013001d601d901f6023b
0244024402a302cf02de0385038f04fc0586fee0feebfefbff8a00070044
00470058007500aa00e400ef011601200129016a017301e3027e029002b4
030e0310032303350341035403590388039403c803ce047204ab04da0549
056105ab0761fe6efed1ff4bff84000000010006001e0027002c00340037
00620066006a006b006c007000700072007c0081008a008e0091009200a0
00ab00b800bf00c900d500dd00ec00f40100012101300169016a016d017c
0185018e018e019901ac01c101c501c901e101f601f601f6022202220228
0236023f02430246026702850285029402d002d602e8031c0363037f0380
0380039e03b603d90400040404ff053205320548058b05a706cb07280748
076208ccfcedfd2afd59fddefe00fe1afe5bfe96fec1fee7ff56ff790001
0025002d002e007c00870091009900a100a500a500aa00af00b600c600cc
00d700dd00ec00f201020105011701180123012a012c0131013f01470149
0149014d01510151015501550157015a015a0161016201680168017f0180
018201830184018d0195019501950198019901a501a901b601b601b701ba
01ba01d501df01e601ea01f2020002000203021702250227022f02390243
02430247024f025202520267026f026f027002720276027e02a702b302b9
02d603130325032d03610371039903ae03c203d403f90402042c042f043c
04560467048304cf04d104d804fb051f05450568059e05c2061b06340655
066a069806af06e806fc070607500762077c07d407ff082500ad00c700aa
00b5000000000000000000000000002f06cf01730514047802df009c0018
037005870155002500060254036c038e03d2056601f0032001da018a0369
036bffa3034602f8036f015602bf0122031f053a0366008c00ff01ab02e1
02f402e70415015402e90128049101b7026f034302060000000005d30415
048305e8000002d7003a027d01c002c503830383ffbd003a059e01df059e
02d1002004e0021300df01c001870297000000ce0269028b0058043405fb
0069015a01a905780182013e0288012a03d4049e00e5032302f301f00196
007a00cd014a0424025e023901ab00cf00fd011e00ed0171007001950040
01bb01dd01b8000101a803a7014c020c018d01b0020d0137010000cd0321
01d4030a00590000000001260215015002f0025503bc06d00335010100d0
00d2007a01030130007c000000000000000000fe006e006600940227002b
0045004d00d3013200180097004100f4febcffe9001605d8058b009100a1
032c00520030005d02cb003a009200e500e500580086003200ba00990088
00300298007cff8001640028004d0065000200b8016a002f010b00110017
0100007f00040016022200a6005f000000f8000a00ca0043004b01ee0077
012000f401c00028045f0000008c044500c20060007b008b008b0064005d
00c2009c009206b505d3004f011700000420fe9e00cc00dc005e004600e3
0032001a003c0091005a00a1042c0041002000490071009c009cfe480040
0040008600cb0102007d003a003e006a0050044800290096ff6a00970069
00e0004c001b00c90069ff970043ffbd0052ff83ff8b005fffa1ff5c0067
0053ffa8002a0076ffb20036008705590256052b043400de00c901c40048
00db018b00b3004800da01160125011800ea00ea00ae0000003e05bb008a
04d70053003fff8cffd500150028002200990062004a00e4006d00ee00e5
004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a0068ff6c
004f00bc00a5070500ab0080001e05a50025008b04660230006900290016
012f0080005c059f000040425554403f3e3d3c3b3a393837363534333231
302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19181716141312
11100f0e0d0c0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b090
51582320b00d44235921212d2c20204518684420b001602045b04676688a
4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b01723
70b101173e01b0172370b10217453ab10200080d2d2c45b01a234445b019
23442d2c2045b00325456164b050515845441b2121592d2cb00143632362
b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c20
69b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0036159
2d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb01243
588745b0112bb0172344b0177ae41b038a45186920b01723448a8a8720b0
a05158b0112bb0172344b0177ae41b21b0177ae45959182d2cb002254660
8a46b040618c482d2c4b53205c58b002855958b00185592d2c20b0032545
b019234445b01a23444565234520b00325606a20b009234223688a6a6061
20b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b03f1b2359
61441cb114008a5279b31940201945208a54582321b03f1b235961442d2c
b110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d
432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b5258
45441b2121592d2c0120b003252349b04060b0206320b000525823b00225
3823b002256538008a63381b212121212159012d2c4bb06451584569b009
43608a103a1b212110592d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d
2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802b023701020b802
b04520b0005058b00161593a2f182d2c21210c6423648bb84000622d2c21
b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c05158
0c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062
6023212d2cb4000100000015b00826b00826b00826b008260f1016134568
3ab001162d2cb4000100000015b00826b00826b00826b008260f10161345
68653ab001162d2c4b53234b515a5820458a60441b2121592d2c4b545820
458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458381b21
21592d2c014b53234b515ab00225b00425b006254923451869525a58b002
25b00225b00525462345696048592121212d2cb0134358031b02592d2cb0
134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580c
b00425b00425060c6423646164b807085158b00425b00425012046b01060
482046b0106048590a21211b2121592d2cb012435c580cb00425b0042506
0c6423646164b807085158b00425b00425012046b8fff060482046b8fff0
6048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53
234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121
592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d
2c462346608a8a462320468a608a61b8ff8062232010238ab9035803588a
70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb102
0042b123018851b1400188535a58b910000020885458b202010243604259
b12401885158b920000040885458b2020202436042b12401885458b20220
02436042004b014b5258b2020802436042591bb940000080885458b20204
0243604259b94000008063b80100885458b202080243604259b940000100
63b80200885458b202100243604259b94000020063b80400885458b20240
0243604259595959592d2cb0024354584b53234b515a58381b2121591b21
212121592d0000000001000000050ccd571894305f0f3cf5081908000000
0000a2e31dc200000000c5b1f690fb74fd8c1000080e0000000900010000
00000000000100000721fe4500571000fb74fadf10000001000000000000
000000000000000000180639011c0200000002aa005402aa002e0200006e
05c700100556004a04e3002a04730021038d00490400fffb038d00460400
0044038d004c0400000d0239003c0239003d063900110400000c04000045
02aa000d031d006402390014040000020000003b003b007d00be010d0251
030e03f704cf06cc07ee091d0a860c760e0e0f69105712bc147015a616be
19201a4b1b9d000000010000001800f2003c009d000700020010002f0056
0000062504eb000500020000000100120001000000000006001800005746
4e434a552b54696d65734e6577526f6d616e50534d540000b9005403ecb3
032a1f3f411503e4006003e9009f03e500df03e50004001003e4001003e5
003f03e5007003e400ff03e40005ffc003e1b345453240b803e1b32b2e32
40b803e1b2282932b9ffc003e1b21a1c32bd03e102ac0027001fffc003df
b2161b32b9ffc003deb2424232b9ffc003deb2363832b9ffc003deb32a2d
32df410a03de00ef03de000203de03df0028001fffc003dfb3282e32f041
0d03df0001037e000f0101001f00a003dd00b003dd0002004003dab32426
329fbf03cc000103ca03c90064001fffc003c9b20d1132410a03c703b700
12001f03b603b50064001fffc003b5b30e1132004173038d000100c0038d
00d0038d00e0038d00f0038d0004006f03a7007f03a7008f03a700af03a7
0004000f03a7001f03a7002f03a7004f03a7000403ab03ab00ef03a50001
000f03a5002f03a5006f03a5008f03a50004005403aa0001006b03aa0001
03a8036a0022001f038c03940015001f038b03930015001f03a40393001a
001f03a20394001e001f03a10393001e001f039f0394001e001f039b0394
001a001f039a0393001e001f039903940016001f039803940016001f0397
0393001b001f03960394001b001f03950393001b001f03760375001a001f
03740375001a001f03a00373b21e1f10411e039300200393003003930003
00200394003003940040039400030000039400010383036c001e001f03b1
036c0032001f036d036c0032001fffc0037db2212332b9ffc0037db31719
32a0410a037d00b0037d00c0037d00d0037d0004ffc0037cb2212332b9ff
c0037cb3171932a0412d037c00b0037c00c0037c00d0037c000400300373
004003730002000003730010037300200373000300e0037300f003730002
00b0037300c0037300d003730003008403730090037300a0037300030377
036a0029001f0389036ab2281f40b80367b33940323fbb03660001004003
66b3191d328fbb0366000100400366b3090a3240b80366b3090e3240b803
66b3090f323fbb0365000100400365b3090c3240b80365b31a1d3240b803
65b3090e326b410e0363007b036300020014036300240363003403630044
036300040363b2242f1fba034e006d0800400e1f7f027f037f047f050430
440112bf033200500800001f0012032d003c080040291f5f3c0137600970
0980090310092009300940095009056f037f038f03031f032f033f034f03
5f0305b8ffc0b2073a33b8ffc04047063a33900ba00bb00bc00bd00b05b0
06c006d006e006f0060520063006400650066006700680069006a0060990
06900702600b700b800b03100b200b300b400b500b051f0701a041850362
000100000362001003620070036200900362000400f0035f00010020035e
0020035f0030035f0040035e00040000035e0000035f0010035f00d0035e
00e0035f00050010030f0020030f0030030f00d0030f00e0030f00050000
030f0010030f0050030f0060030f0070030f00d0030f00060000030f0010
030f0020030f0030030f00e0030f00f0030f0006030f00270000030e0030
030e000200e0030e00f0030e0002030e004a00e0030d00f0030d0002030d
002700d002fc0001001002fc002002fc005002fc000300d002fc00e002fc
0002000002fc001002fc002002fc003002fc005002fc006002fc000600e0
02fc00f002fc0002002002fc003002fc004002fc000302fc406127c02901
b02901a02901902901403c3f413240223f41321212125f235f255f285fa5
046f236f256f286fa5044f234f254f284fa5043f233f253f283fa5042f23
2f252f282fa5041f231f251f281fa5048f4caf4cbf4ccf4c045f4c6f4c7f
4c0337b8ffc0b3b22b3032b8ffc0b3b2222532b8ffc0b5b2191a32370f41
3b02af0001005f02af009f02af00df02af0003001f02af002f02af003f02
af006f02af000402af02af001f02ad002f02ad003f02ad004f02ad005f02
ad000500df02ad0001000f02ad001f02ad003f02ad005f02ad009f02ad00
05005f02ad00df02ad0002000f02ad001f02ad003f02ad0003004002acb2
3a334f414a02ac005f02ac009f02ac0003002f02ac003f02ac0002000f02
ac003f02ac00af02ac000300b002ac00e002ac0002004f02ac005f02ac00
a002ac0003001f02ac002f02ac003f02ac0003000f035a0001000f035a00
1f035a003f035a005f035a0070035a000500cf035700df03570002000f03
57001f03570070035700af03570004035a035a0357035702ad02ad02ac02
ac032c400d31151f001616000000121108104110020c004a000d01a8004a
000d0198004a000d0189004a000d013f004a000d0124400e4a0df64a0dbe
4a0d864a0d274a0dbe02280041000d01940041000d0121400b410db4410d
4f410d29410d411002170021000d02150021000d02060021000d01eb0021
000d014e0021000d012c4014210df9210df3210df1210d9d210d71210d3d
210d4110021c001f000d0214001f000d020b001f000d0196001f000d014a
001f000d0126400b1f0dc61f0d571f0d371f0d410d019e0141000d004201
41000d001e0141000d001b0141000d01f2b40f440f0009bb01f20044000d
0201b23c291fb80200b23c291fb801ffb23c411fb801feb23c471fb801fd
b23c9e1fb801fab23c931fbc01f9010f0101001f01f6b224e41f411501f4
01490401001f01f301490401001f01f1014900ab001f01f001490067001f
01a6003c0125001f01a4b23c811f411501a3010f019a001f01a200220801
001f01a100500401001f019f0149019a001f019d01490067001f019cb22c
621fb8019bb22c791fbc019a002c0101001f0197b22ce41fb80193b22c89
1fb80192b22c6c1fb8018fb2259e1fb8016ab23c2a1f4111016700240201
001f0163002502ab001f014c010f019a001f01480149006c001f0147b22c
891fb80145b22c9e1fb80144b22c791fb80143b223311fb80127b23c811f
bc012300500101001f011fb223e41f4115011d0023019a001f011c002308
01001f011b00250801001f010e010f0401001f010d00220401001f0108b2
23811fb80106b425e41ff73cbb0125001f00f5010fb29e1fe3bc01490156
001f00e20149b2ab1fd1b901490401b21fcf2cb80125b61fce23bb1fc524
b80156b21fc02cb80801b21fbf2cb80201b51fb124e41fb0b901490201b6
1faf2c671fad23b80801b21fa523b80201400b1f9f3c2d1f9b235a1f9925
b80201b21f812cbc0401001f006d010f0156400b1f592c3e1f4c3cab1f46
25b80101b21f403cb80125400a1f3a23721f393cab1f38b80149b3ab1f31
24b80401b21f3025b802abb61f2a24e41f2623b80156b21f5537ba023500
070175402c0774076207560751073b0733072d0720071d071c0714081208
10080e080c080a080808060804080208000814b8ffe0402b000001001406
100000010006040000010004100000010010020000010002000000010000
02010802004a00b013034b024b534201b0124b004b5442b0372b4bb807ff
52b0382b4bb008505b58b101018e59b0382bb00288b801005458b801ffb1
01018e851bb0124358b90001012f858d1bb90001017c858d5959014bb0c0
63004b6220b0f65323b8010a515ab0052342180016763f183f123e113946
443e113946443e113946443e113946443e11394660443e11394660442b2b
2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b181db0964b5358
b0aa1d59b0324b5358b0ff1d594bb04753205c58b90271026f4544b90270
026f45445958b9017a0271455258b90271017a4459594bb04753205c58b9
002202704544b9003c027045445958b901b30022455258b9002201b34459
594bb04c53205c58b9014900224544b1222245445958b901c20149455258
b9014901c24459594bb06753205c58b9002402714544b900500271454459
58b9021e0024455258b90024021e4459594bb8020153205c58b9010f0022
4544b1222245445958b90c00010f455258b9010f0c004459594bb01c5320
5c58b125254544b12c2545445958b13725455258b125374459594bb0ab53
205c58b125254544b1232545445958b901590025455258b9002501594459
594bb8010153205c58b125254544b1282545445958b902080025455258b9
002502084459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b01b361dc6463456523456023456560234560b08b76
6818b080622020b164dc4565234520b003266062636820b003266165b0dc
236544b064234420b161634565234520b003266062636820b003266165b0
63236544b0612344b10063455458b163406544b26140614523614459b3a6
7f434b456523456023456560234560b089766818b080622020b1437f4565
234520b003266062636820b003266165b07f236544b043234420b1a64b45
65234520b003266062636820b003266165b04b236544b0a62344b1004b45
5458b14b406544b2a640a645236144594b5242014b5058b108004259435c
58b108004259b3020b0a124358601b2159421610703eb0124358b93b2118
7e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba
04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a804
00000b2b59b0102342b0112342002b001845694445694445694445694473
7373747373737475752b7373747475184569447373742b4bb021534bb046
515a58b03cb03c45b040604459012b2b2b2b757575757575757543584010
bf3ccf3c026f3c7f3c8f3c9f3caf3c0575755943584012bf22cf22025f22
6f227f228f229f22af2206757559435c58b6403c9f22ef220375592b2b01
747474744544737374747575454473454473744544737475737373737300
757575737575752b2b757575752b752b435841220063032d00010003032d
0013032d0023032d0033032d0053032d000500c3032d00d3032d00e3032d
00f3032d00040083032d0093032d00a3032d00b3032d0004032d032d4518
694474747575592b4358b900180332b330353238b80332b361663238b803
32b3535a3238b80332b3454e3238b80332b33c413218b80332b23f330a41
0f0332000100ba033200ca033200da033200ea033200fa03320005033203
324518694474752b2b2b2b2b2b597300732b012b7575002b2b2b74002b2b
2b732b74012b002b2b017373737474732b2b00732b2b002b2b2b01737473
2b012b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b0001737500737300456944
0073730173742b2b2b2b2b732b00732b752b2b732b2b2b2b2b2b2b2b2b73
742b2b00000000>
[14139 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 1 <> NWXQMX+TimesNewRomanPSMT AddT42Char 
1 118 2 <00010054fe4a027c058e0013003a40239611a71102860c8911020a980911
009801130100000a09a80e22500601068014545e182b10f65dedfd3c3c10
3c003fed3fed3130005d015d01152627260235100037150606021514171e
02027c9765909c0132f67b9e4e211a4a7dfe6f254c6691018ad4013601ff
6e2a44ecfe96c5d6af8aa79a>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 250 3 <0001002efe4a0256058e00130039402429042a08480503009801110a9809
13000101090aa80e222006300640060306801558a4182b10f65dedfd3c3c
103c003fed3fed3130015d13351617161215100007353636123534272e02
2e98658f9cfecff77b9f4d21194b7c05642a4b6692fe77d5fecafe016e25
45eb016bc5d5b08aa69a>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 380 4 <0001006efeab019800c800170053402759025917c4160309176019d01903
0901000704040f081200b612400c0b043a0f151f1580150315b8012a400b
1f0f5f0f020f19189ca4182b4e10f45d4dfd5ded003fede4123901111217
393130015d01711335363635342726232207062322263534363332161514
066e67710907070b251214313a4b3642678ffeab2c228f50130d0914093a
333146735f67b100>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 538 5 <00020010000005b0056b001c001f0218b102024354584012011f1e021e1d
001c1e1c001d1f011e1c0214be03e2001703e2000703e2000a03e2401708
021c1e030f081c161d001f70018001020101080f0208002f3f12392f5dcd
d0cd2f2f1112173910ededeeec012f2f2f2f2f2f2f107d87c4c41087c4c4
31301b401b080e0f0f0d100a1e091f502106150f13101a111a1b1b1c181d
0621b8ffc0b2253521b8ffc0b330583421b8ffc0b32b2e3421b8ffc0b229
3521b8ffc0b320263421b8ffc0b31a1e3421b8ffc0b2173521b8ffc0b215
3521b8ffc040971013340d0f0b100a1e390f4a0f4610491e4f21590f5710
5514581e6a0f6710681e76108004870e8a0f87108712891e881f9b0f9b10
99119b1eb90fb910bd1ab91ecb0fca10c81dca1edb0fd810eb0fe810e81e
f90ff810f91df91e2c090f4b1b021f1e01011f1e02001d1e1e1c090e0a1b
09161c171b160802071b081511141b15781e0f1020101e1c1c2211101411
70110111100f0e0eb802c94011021e1402021e1f1da50000700180010201
b801b5400c08100f03151616080809081cb801fa40090f11011102a50e40
11b80230b34f1e011eb802ec400e20400e500ef00e030ea7206b8a182b10
f65d191afd5ded181a10ed105ded003f3c103c103c3f3c10f45d3c10fd3c
870e2e2b057d10c4875d0e2e182b87057dc42b180010ed0110c00010ed01
10c00010ed0110c00010ed0110c087107dc43c073c3c073c313001715d2b
2b2b2b2b2b2b2b2b01725d59012107061514161715213536373637013301
16161715213536363534270b0203a9fdf35c223b62fe555519333e01dd23
01d8395d53fde95139286ee6ec01c6d64f271f2f0725250f183093045cfb
988851052525042e212c5f010d0224fddc00>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 1186 6 <0001004affe1050f056b002401024042091e2f012f022f032f1f960f991e
a30fa312b60fb7120b081e011617017d037b1578168d038a169d03961aac
03bb03090c030e04021d48035903052f081011241b00b80105b5021b0101
ba00b8034bb6209a05281c0301b802dfb5112bb0100110b80341b58f0d9f
0d020db8032f402f140902ac000101013210acaf11011f113f1102111a40
260126093c2018010f181f1802180c0d0d02551849256463182b4e10f42b
5d724ded4e105df672714dedf471ed003ffd71f45df4e63fedecf4ed0110
edf4ed10c9313043794020151b060c07251a260b261625061b092d000c15
092d000819052d010a170d2d00002b2b012b2b2b2b2b2b818101715d0072
715d01132326262322060215141216333236371706042320272635341224
33321716333237363704d11f1f3ee6a187da7d76ed9884ca791f66fef0bb
feafb98ab6013fbd938f2a121b141a0b056bfe33cfb689fed4dfb8fef290
71a814b5a8fabafccb0154bb4816131b3000>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 1564 7 <0001002a000004b4054c00330136403f4035671c771c9b30a918ac30bb30
e035085619700670077f087f09800680078f088f0909241f1b1d2122251f
1b2b212308401010025508210e0e1f091b0807b8ffc04021101002550721
02021f061b071c101b0201230e0f0f1d3300a52b2e002d102d022db802d3
40212c2c2b021514a51d1be81c1c1d0809ac080806ac3f077f0702000710
074f070307b8ffe640501010025507762eac2c2b1f2d2f2d022d6c1aac20
1b401bdf1b031b5350357035a035033500100613130255100c0f0f025510
0c0d0d0255102225240c10100255240c0f0f0255241a0d0d0255249e34e0
b9018700182b10f62b2b2b3cfd2b2b2b3c105df65dedf45de4fdf62b5d5d
ed3c10ed003f3c10ec10fd3c3f3c10fe5d3c10fd3c12392f3cfd3c011112
3910edec0010f52b0110edec0010f52b2b2b3130005d015d011121323736
373311232627262623211114161633333236373637330321353332373636
3511342726232335211323262627262301ac012a7427340625250e0e1252
55fed6102838e67368303e412875fbeb30302b20171a24543004150f2715
333228650502fde8232e74fe28631c2328fe415a2717202f3e7dfeac2517
1040630371811e2825fed76b50150f00>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 2030 8 <000100210000041f054c002d012ab1282fb8011e40372564360904090ab0
2f03982bba2bc62bd903d32be904e90afb04fb0a09700570067f077f0880
0580068f078f0808070a092a0207210c0cb80126400d081b071d1f1b1721
2206210202b801264029051b060e1f1b1621231e1f1b2621232b2c280a08
0c0405020201230c0d0d172d002326002810280228b802d3402527272602
161708272b28ac002901002930294029702904299006061f07014f0701bf
070107b801b5402e000e06131302550e0c0f0f02550e0c0d0d02550e221e
1d0c101002551d0c0f0f02551d1a0d0d02551d9e2e6163182b4e10f42b2b
2b3c4dfd2b2b2b3cf45d71723c10f65d71fde4003f3c3f3c10ee5d10fd3c
12392f3cfd3c111239111239011112392b2b0110edec0010fd2b0110edec
0010fd313000715d015d712b0111333236373311232e0223231114171617
16333315213533323736351134272627262323352113232e022301a3f755
4f0d252501274544f70d0a202c3031fdba305426180d0a1f2b313003f10d
231a45656a0502fdeb4b6ffe354f4a25fe566721191218252531207a036c
672119121825fed65f592800>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 2462 9 <00020049ffed038903af0032003d0349b1020243545840203f400d0d0255
3f4013130255151b072e25080b0b0255250c0d0d025525000c33b8fff040
0b1212025533161313025533b8ffdeb41010025533b8fff440150f0f0255
330c0d0d02553339070c0d0d0255072d2eb8ffc04020091202552e33001e
04292c30340c40090b02550c401d1d02550c40111202550cb8ffd4401e09
1202550c0c047f180118401112025518401d1d02551810251e073c2c0400
2fed3fedc42b2b5d12392f2b2b2b2bcd2ffd11123939d42bcd012f2bcd2f
2b2b2b2b2bc0c0dd2b2bc410d4cd31302b2b1b406f0b1c8a330212533601
12201f39803fa809b60a03122b127d007d3386008b0b8b35061d12163a10
3f803f04091c4c054c06452045224c3a403f891d080a0e0720002249014b
0a490b49354b37433a493d570b670b8509840a840b0f54168316021f3f5f
3f0260083300343c2e292d34bb011b000c000cffc0b609390c280b390cb8
ffc0401a3a35100c500c02400c500c600c03200c500c600c760c040c3c18
b8ffd840290b394f185f186f18032f187f1802187e1f100110251e07303c
403c023c2c04702d802d022d35292c30b803464011040b2ec02d012d6025
00330d0c0c343433b8fffcb41010065533bb016700240025ffc0401a0e39
00251f2580259025044025f0250280250125101010065525bb0243000700
15ffc0b21f3915b80167401e1b2f393107400e3920075007800703100701
f0070150070107433e436e182b4e10f45d7172722b4dedf4ed2b10fd2b5d
71722b3cfd2b3c103c103c103c10f65d3c003ff4fde45d10ed713fed72fd
5d712b11395d71722b2b2b2fb10602435458b2030c01005d59ed11123911
123939313043794047353b1c23051337383638020609080a080206212220
220206350b392000111d131c0012130f1f0d1c0122233b05391c00380834
200135340b121c101c010e22101c013a063c1c002b2b2b3c103c2b012b10
3c2b103c2b2b2a2a2a818181017201710071017172005d4358b23f12015d
59015d2b0072435c58b431400e392eb8ffe0b210392eb8ffe0b60e393720
0e3920b8ffe8b20c3920b8ffe0400b0b3918200b3917200b391cb8fff040
1a0b390a280b3937280b390a280a3937280a390a28093937280939002b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b59005d5925060706232226353437363637
353426232207061517140623222635343633321716171615111416163332
3736371506232226271106070606151416333202478d24363d5f7b1e29cb
ec57533f2526022f26252fb09f7a4e3b1c120a170f100c153c7066313a01
972c4f4456384c846d1119826a433144785624896622222c3a2e32342d56
90291f422b85fec9833b14070d3c38964493015d3c192c6039485f00>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 3480 10 <0002fffbffe403b9058e0016002401d2b10202435458b11e05b8fff44010
1010025505140c00180a0d0d0255180cb8ffe6b4131302550cb8fffcb40d
0d02550cb8fffcb40f0f02550cb8fff4400d101002550c0c181700040209
13b803e240111440090d02551415001b25090b21590207003fed3fed3fdd
2bed11121739012f2b2b2b2bdd2bc010c62f2bcd31301bb1060243545840
2618170003020913141500215902071b25090b1e0505262500180c0d0d06
55180210100655180cb8fff8b40d0d06550cb8ffeeb7101006550c0c2625
1112392f2b2bdd2b2bc01112392fcd003fed3fed3fddcd1112173931301b
4079102601a406b606b507ea1f040526430d5d3620267503760486038704
a603ab08074707013a0814270d41131e144418170c00041b160010210121
5902071b25090b1e311f0590050260058005af050305eb0c16000018240c
0c100d500d700d900d04800d900db00d03000d100d200d300db00dc00dd0
0d070db8ffc0b73c350d6025c24b182b4e10f42b5d71723c4d10fd3c103c
10fd5d72ed003fed3fed723f111739f5edfc01f53130437940281920030b
072620031e20011a0a181c0019180b0c1c081e20011f04212001190b1b1c
001d061b2000002b2b2b012b103c103c2b2b2b81810071015d2b005d0172
595901363332161514070623222627113426262322072725331111161633
323635342623220706013b859a8dd2a28bab50a5560f20181c2a0e01132d
336d395b9d9d6435352802f6b9f1d1f495803a3a03b59c481a102370fd28
fddc3233c8bfb0bd1b14>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 4060 11 <00010046ffe4034a03af002101f5b2080401b102024354584020021a060c
10100255060c0f0f0255060c0d0d02550616250f0907602170210221b8ff
c0b513130255211db8ffd4b4131402551db8ffcab6121202551d3103002f
ed2b2bc42b5d3fc4ed012f2b2b2bcdc431301bb11223b8ffc040732a2d34
0023430d5d36170d5705021c135404530553065407581b581c0767057605
80008021b41bc520d020e000e50509370147015618551c5f236018601c76
18721c8a128e1390119018a601a402af23b301c101c707c719e908e41cea
20f4011806024a1257128b1f8b208023f02307112001bcffe00020ffe000
1fffe0b2001d00b803464030102101602180210200211021202150216021
70219021a021b021c021d021e021f0210d21661ddf0f010fc7162509071d
b8ffd8b214391db8ffd8403812391d31030b21cc1f0c014f0c8f0c020c2f
100030004000600070009000b000c000e00009300040000200aa731a831a
02501a019f1a011ab8010c4012f006010006100620063006400605064322
43b9029100182b4e10f472714ded5d7271fd715de47172ed003fed2b2b3f
eded7110f45d7172e412b10602435458400a531d631d731d03931d01005d
7159393130383838013801715d005d017200722b2b435c58b4001018391b
b8fff0b613390510103901b8ffc0b2103920b8ffc0b11039002b2b2b2b01
2b5959017101060623220235340033321615140623222726262726232207
061514163332373637034a25d8839ce80101b487ae312c3b1e110b23233e
643d51a189624e3734015cb5c30106dfd8010e8f4d262f2615761f1e4a62
a1a4fb432e79>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 4666 12 <00020044ffe40405058e001f002d024bb1020243545840262f4010100255
2906180d0d025506080f0f0255060c101002550600201d160a0d0d025516
0b20b8fff4401112120255200c1313025520180d0d025520b8fff8400c0f
0f0255201810100255201cba03e2001dffc0b6091002551d1f12b803e240
101340090e0255131400252509072c2c03002fed3fed3fdd2bed2fdd2bed
012f2b2b2b2b2bc0dd2bc410c02f2b2b2bcd31302b1bb106024354584052
1213140000200b0303252509071c701d01401d601d021d1f0b2c2c030b16
0c0d0d0655160410100655160b20141010065520040f0f065520020d0d06
5520202f2e290c0d0d06552906180d0d065506062f2e1112392f2bcd2b11
12392f2b2b2bc0cd2b2b003fed3fdd5d5dcd3fed1217393fddcd31301bb9
002fffc0b34747342fb8ffc040422b2e34602f7c047c058a04802faf2fc0
2f07402f802f02002f162a152b55055508542b960707480701202f370a47
0a560a9804a72aa02f07c02ff02b022020002021baffe0000bffe040453c
204f205e20660a6c207a209f009f20aa07b907c62a0b260813270c41121e
1344151d2716411c1e1d441f0020210b042c1500252509071f2c012c2c1f
030b1f000b210c20b8016740121560168016af16031f1690160216eb2950
06b8ffc0b3282e3406b8ffc0b7473506432e437f182b4e10f42b2b4dedfd
725d3cfd3c3c3c3c3c003f3ced723fed3f11173910f5edfc01f50010f5ed
fc01f531304379401a262b0408272526082920002b042920002807252001
2a052c2000002b2b012b2b2b8181005d3838383801715d00710172715d2b
2b5959250606232226353412333217353426262322072725331114161633
323717052335112e0223220706151416333202c743804a96e0f8c3794f0f
20181a2b0d01112d0f21161b2d0bfef02e063c632f58455bb06c5b67463d
fbc5c501474da99d481a102370fbdda1471c112371c901d84470394f68c8
cad7>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 5388 13 <0002004cffe4035303b00014001d037db10202435458402808161415000c
0f100255000e0c0f1002550e0c0d0d02550e153040000120003000020000
10000200b8ffc0b41314025500b8ffc040111111025500000b1b25110700
0710070207b8ffc0b40f10025507b8ffc0b5131402550704b8ffd6b41314
025504b8ffcab71212025504310b0b003fed2b2bc42b2b5d3fed12392f2b
2b5d5d5ded012f2b2bdd2bc02fcdc031301bb10602435458401d158000a0
00b0000320003000400003000010000200000b1b2511070807b8ffc04024
1010065510072007b00703000760078007a00704079204a204b204030431
0b0b07081614b8fff440260d0d065514141f1e15000c0d0d0655000c0f0f
0655000e0c0f0f06550e160d0d06550e0e1f1e1112392f2b2bdd2b2bc011
12392f2bcdd0cd003fed5dc45d5d2b323fed12392f5d5d5dcd31301b4019
125f185d1960006014d6030519201c3917201c3916401c391fb8ffc0400a
434a34081f430d5d361fb8ffc0b32828341fb8ffc040532a2e341b061909
58135e165f175a185b1a07010309060709080c0515490689028c06870c8a
10851da302ab18b513d402d90fda10f402f3031312600760087007800789
09c107c80ff007080401070d84020309baffe00006ffe0404a3609460247
094f1f5402540962027202891389199913a409a40ab808b509b00ac702e7
02e00cf40a1408d007010007d007027107010007100720079007a007b007
06077d041400301615b8ffc040131239125f157f159f15df150415151bd3
040104b8ffd0b2143904b8ffe8b2133904b8ffd84048123904310b0b5c1b
011b25110707cc0816281b390f16016f167f168f160316f4141480080130
0890080230088f08df08031008400860087008b008e0080608aa0e150400
89000200b8032c4012300e400e500e03000e100e200e03f00e010eb8ffc0
4009434a340e431e434b182b4e10f42b7172724dfd713c10fd5d715d713c
10ed5d712b10ed003fed723fed2b2b2b7211392f5d4358b26f15015d592b
3cfd3c10f45d5d7172393130015d00383800715d014358b4060001020271
5971722b2b2b2b2b2b2b0072435c58b90007ffc0400b23390c402d390d40
2d3908b8ffc0b2283907b8ffc0b2283906b8ffc0b21b3907b8ffc0b21b39
08b8ffc0b21b3907b8ffc0b20a3908b8ffc0b20a3907b8ffc0b2093908b8
ffc0400e093915101939192011390d201139002b2b012b002b2b2b2b2b2b
2b2b2b2b2b2b595959130617163332363717060623220235341233321615
252126272626232206da016464875a852d1f15ca98a5ebf1b69ac6fd8701
a805101963365383023bcc747463781489e10101d9eb0107cbaa3a582438
4081>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 6380 14 <0001000d000003f3058e0036028fb10202435458401d384012120255100a
110a080d0d02550a182412120255181a0d0d025518b8fff8b40f0f025518
b8ffe0400c10100255180e131302551826b8ffea401f1010025526213435
272d0121040c0c025521080d0d0255212d18121202552db8fffab40c0c02
552db8fff6b40d0d02552db8fff4b40f0f02552db8ffec400f101002552d
0e131302552d0120040f410a03e2001203e2002503e2002803e200270034
03e2400f3540090d025535360027111d2c0407003fed2f2f3fdd2bed10ed
edecec123939012f2b2b2b2b2b2bdd2b2bc010c4c63210c42b2f2b2b2b2b
2bcd2bc410c431302b1bb106024354584058341210100655351210100655
01200427343536001d2c040711270a02101006550a060f0f06550a0c0d0d
06550a18021010065518060f0f0655180c0d0d0655181838370121021010
065521060f0f0655210c0d0d0655212db8fff0b4101006552db8fff2b40f
0f06552db8fffcb70d0d06552d2d38371112392f2b2b2bdd2b2b2bc01112
392f2b2b2bcd2b2b2b002f2f3fed3fddcd111239393130012b2b1b402f38
402a350a38600d5d360f250f268038903804b038c038d038032b06015038
60387038903804403801200818291e11b8030f4011222d291e274a220a29
1e104a2321291e26b8030e402e2335272e41341e35440120273600001d2c
04072726261111100a19182409900a01b00a010f0a700a9f0acf0a040ab8
02bd40252d0021242e1f2d502d602d702d04802d902d02b02d01002d102d
c02dd02d042d6037a67f182b10f65d5d71723cfd3c10fd5d71723cfd3c00
3f3c103c103c3fed3f3c113939f5edfc01f52b2b2b2b3130437940141a1c
050806251b261c05191c0107081a071d1c012b01103c2b2b2b8181017172
005d015d712b2b5959011136363332161716151114171616331521353332
363736351134262623220607111416163315213532373636351134262623
22072725014d6f82414e701b130e0a3040fe3e1540320a031f4430316a4a
153946fe3a3d2314180f1f1a152f0e0112058efd627a45565c40aafebc57
20181c24242726104e0144965e2f344ffe1c5e2e1f2424130a3856033d9d
481a10237000>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 7196 15 <0002003c00000207058e000b00220249b10202435458b90024ffc0401d0d
0d0255120d080d0d02550d21181010025521180f0f02552113180309b8ff
eeb41313025509b8ffe0b40d0d025509b8ffd6b40f0f025509b8ffceb610
100255090d18b8fff4b41313025518b8ffe2b40d0d025518b8ffe0b40f0f
025518b8ffd6b5101002551820b803e240174f216f217f210321226f0001
0060060106400f0f025506b8ffc0b71313025506220613002f3fd62b2b5d
cd5d10dd5ded012f2b2b2b2bcd2f2b2b2b2bcd10c4c62b2b102bc4313001
2b1bb10602435458400d20121010065521121010065506b8ffc0b44b4b06
5506b8ffc0b44141065506b8ffc04019373706554006010006a006026006
0106000020212207130309b8fff6401c10100655090924230d0210100655
0d020f0f06550d0c0d0d06550d18b8fff0b41010065518b8fff6b40f0f06
5518b8fff0b70d0d0655181824231112392f2b2b2bcd2b2b2b1112392f2b
cd002f3fddcd3fcd5d71722b2b2b3130012b2b1b40199024016024702490
24a024f024052024502402402450240224b8ffc0b332323424b8ffc0b338
3a3424b8ffc0b32d303424b8ffc0b323253424b8ffc0402e191a3418291e
134a220d291e124a2321271941201e21440c190c1390060106390000220c
0713120a900901093903b8ffc0b2433503b8ffc0400f3f35036b0c0c0d19
0d2418402b3918b8ffc0401a363a34901801501801601870189018a018f0
180518b223b2a3182b10f65d71722b2bed3c103c10f42b2bed72003f3c3f
3c3fed7211123910f5edfc01f52b2b3130012b2b2b2b2b015d715d017259
590132161514062322263534361311141616331521353236363511342726
26232207272501292a3b3b2a2a3c3b7e193141fe43432e1b09071e1a1c28
0e0114058e3b2a2a3c3c2a2a3bfe21fd2056391c24241a3c550161952c20
190f2470>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 7890 16 <0001003d0000020f058e00150191b10202435458b90017fff6401d0d0d02
55140c06010701080d0d025501040f0f025501060c0c0255010cb8fff2b4
131302550cb8ffeab40c0c02550cb8ffe2b40d0d02550cb8ffd6b4101002
550cb8ffdeb50f0f02550c05bd03e2000803e20007001303e2400b131440
090d025514150007002f3fdd2b32ed10eded012f2b2b2b2b2bcd2b2b2bc4
10c410c631302b1bb1060243545840271312101006551414101006551314
1500000007010c0d0d065501021010065501040f0f0655010cb8fff0b410
1006550cb8fff4b40f0f06550cb8fff0b70d0d06550c0c17161112392f2b
2b2bcd2b2b2b002f3f3fddcd3130012b2b1bb79017c017f0170317b8ffc0
b33f463417b8ffc0403a393b340117b20d64365017014017501760177017
9017a017f017070c291e074a2201291e06272314270d41131e1444150000
07060a0001240d0cb8ffc0b33f46340cb8ffc0401a353b34900c01500c01
600c700c900ca00cf00c050cb216b2a3182b10f65d71722b2b3cfd3c003f
3c3f3cf5edfc01f52b2b3130015d0171012b012b2b017259590111141616
3315213532363635113426262322072725017b193447fe3f3f2e1a0e1f18
1a28110111058efb4156381d24241a3c5503409b471a10237000>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 8366 17 <000100110000063003af005703d3b1020243545840175940121202555940
0d0d02551711080d0d025511554c30b8fff4b40f0f025530b8ffeab41010
025530b8fff4400f13130255302b080d0d02552b313746b8fff4b40f0f02
5546b8ffeab41010025546b8fff440211313025546414741080d0d025541
040f0f025541060c0c0255414c14121202554cb8fff4b40f0f02554cb8ff
f6b40d0d02554cb8ffeab4101002554cb8fffa40190c0c02554c0a131302
554c2b040f0f02552b060c0c02552b37b8fff0400b0f0f025537100d0d02
5537b8ffd4400b10100255371c1212025537b8ffea401f0c0c025537020d
0d02553702131302553711040f0f025511060c0c02551120b8ffe8400b0f
0f025520300d0d025520b8ffc2400b10100255202a1212025520b8ffda40
0b0c0c025520020d0d025520b8fffc400b131302552016192f324548b803
e24020475455400c0c02552f55014f556f557f5503555606473118252c0b
073c2c0507003fed3fed2f2f2f3fdd5d5d2bcd10fdc0c0c0c0c0012f2b2b
2b2b2b2b2bcd2b2b2f2b2b2b2b2b2b2bcd2b2b2f2b2b2b2b2b2bcd2b2b2b
c410c42b2b2b10c4102bc42b2b2b10c6102bc431302b2b1bb10602435458
403c252c0b3c2c050b070507545556071831471102101006551120041010
0655202b060f0f06552b02101006552b3741060f0f065541021010065541
4c20b8ffeab70d0d065520205837b8fff8b41010065537b8fff8b40f0f06
5537b8fff2b70d0d06553737584cb8ffeeb40f0f06554cb8fff0b4101006
554cb8fff8b70d0d06554c4c59581112392f2b2b2b11392f2b2b2b11392f
2b10cd2b2b10cd2b2b102bcd2b002f2f2f3fddcd3f3f10ed10ed313001b0
0d4b5458bf0046ffe80045ffe8002fffe80030ffe8b51a18191818183838
3838383838591b401c3407d059ef16038059011159600d5d362b0d019059
01200820291e18b802fcb42237291e31b802fc400b224c291e474a221129
1e17b8030eb4232b291e30b8030db42341291e46b8030d403e2355274d41
541e55440829374d4039292808000725475657073c2c05252c0c0a0b0706
0405074746313018170a5917171a101124213020017020b0200220b80135
400f37292e2b24383037017037b0370237b8013540164d5741244c4c1f4d
504d02804d904d02004d104d024db8ffc0b61416344d605859b8025ab321
a67f18b80164852b2b4ef42b5d71723c4d10fd3c10f471723cfde410f471
723cfd3c4e456544e6003f3c3c3c3c3c3f3c3c3f3c3c4ded10ed3f3c1112
17390111123900f5edfc01f52b2b2b2b2b2b31304379401422240c0f0d25
2326240c211c010e0f220e251c012b01103c2b2b2b81810172005d2b0171
5d5959013637363633321617363633321617161511141716163315213533
323736373635113427262322060707171114161633152135323637363511
342726232207060711141616331521353236363511342726262322072725
33015064122d6833567c15678e4b497121160d0a363dfe3c133b21170a04
1b2756356b4c0202153a46fe314c390b05212c4f3635532d19314bfe3b3f
321a09071e1a1c270f01142b02ec640f262a645f784b4b553a7cfe765620
161f24241710231150018a702e4035480b2bfe4b5e2e1f24242424115201
8a7031401d2c37fe155a361b24241b3b55015e972c21190f2470>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 9592 18 <0001000c000003f703af003302d3b102024354584017354012120255300c
10100255310c101002550e080f1623b8ffea402e10100255231d24290808
0d0d025508040f0f025508060c0c025508162412120255161a0d0d025516
0c1313025516b8fff4b40f0f025516b8ffdeb41010025516b8ffee40260c
0c025516001d040f0f02551d080d0d02551d060c0c02551d291812120255
290e1313025529b8ffeeb41010025529b8fff0b40f0f025529b8fff6b40d
0d025529b8fffa400a0c0c025529001c022430b803e24009314009100255
31320dbe03e2001003e2002203e2002503e24009240f2432071a2c020700
3fed3f2f2f10ededecec10dd2bed11123939012f2b2b2b2b2b2bdd2b2b2b
c02f2b2b2b2b2b2bcd2b2b2b10c410c42b10c410c431302b2b2b1bb10602
435458405e2f1610100655300c10100655311610100655001c0224303132
071a2c02070f24080c0d0d065508021010065508060f0f06550816020d0d
065516021010065516080f0f065516163534001d0c0d0d06551d080f0f06
551d02101006551d29b8fff0b40d0d065529b8fff0b41010065529b8fff2
b70f0f0655292935341112392f2b2b2bdd2b2b2bc01112392f2b2b2bcd2b
2b2b002f2f3fed3fddcd111239393130012b2b2b1b403a35402a35083560
0d5d3630355035603570359035052d040140356035703580359035b03506
b035d03502b0350160358035c035031d0816291e0fb8030f40112229291e
244a2208291e0e4a231d291e23b8030e402e2331272a41301e31441c0023
3233071a2c02072423230f0f0e0a17162407900801b008010f0870089f08
cf080408b802bd401b29331d242a1f295029602970290480299029b02903
002910290229b8ffc04009141634296034a67f182b10f62b5d71723cfd3c
10fd5d71723cfd3c003f3c103c103c3fed3f3c113939f5edfc01f52b2b2b
2b3130437940121819030604251903171c01050618051a1c012b01103c2b
2b8181015d71015d71005d01722b2b595901363332161716151114171616
331521353332363736351134262322071114171616331521353332363511
342626232207272533014ba1924b6c20160e0b3142fe3b1340330a04414d
77760b0e314bfe3b1446310f1f1a1c270f01142b02edc24b563c7cfe7957
1f191c242427260f4f01777d7182fe1d5d161d1b242447640154a5481a0f
2470>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 10464 19 <00020045ffe403b903af000f001d020cb10202435458401c140c06101002
550c0c0f0f02550c0c0d0d02550c100b0b02550c1a04b8fff4b410100255
04b8fff440130b0b0255040c0f0f0255041725080b10250007003fed3fed
012f2b2b2bcd2f2b2b2b2bcd31301bb10602435458400910250007172508
0b1ab8fff4401b0d0d06551a04140c0d0d0655140c100f0f06550c100d0d
06550c04b8fff0400b0d0d065504041e0c0c1f1e1112392f11392f2b102b
2bcd2b10cd2b003fed3fed31301b404512801501a716b616c501c909c41d
d9090612e70a0148094516571585018c09890fd91b071f403235041f430d
5d369f1f01c615c91a02401f014908102500071725080b1204b8ffc0402b
120b3f4f0401400401d0040140045004600470049004b0040604ec0c4012
0b3f400c9f0c020c431e434b182b4e10f4722b4ded5d5d71722b4bb02853
4bb050515ab10c1e49b11f0449525a58bd000cffc00004ffc0001fffc038
3838594358bc001a0332000400140332e910e91bbc001a03320004001403
32ed10ed59003fed3fed313043794036011d12250e2602251c260a250626
110f1420001d011a2001160914200018071a2001130d1020011b03102001
150b17200019051720002b2b2b2b012b2b2b2b2b2b2b2b2b2b8101720171
722b2b71015d0143584011750275067a0a7a0e7a1278167518751c085d59
5d005d435c5840091c1011391b10113915b8fff0b10b39002b2b2b595959
013217161514060623222726353436361722060615141233323635342726
0200d07e6b76cf7fcf7a677dcc53356b429f82617e694703af9e87af7bfc
80a58bad7ef977413f9e7cc8fedea0c3f48c6000>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 11084 20 <0001000d000002b703af002801b5b1020243545840282a4013130255061f
171127040f0f025527181f0111080d0d025511040f0f025511060c0c0255
111fb8fff4b40f0f02551fb8fff6b40d0d02551fb8ffee4011101002551f
14121202551f0e131302551fb8fffc400b0f0f02551f011003181619bb03
e20018002603e2400e4f276f277f2703272807180c0307003fcd2f3fdd5d
ed10fdc011123939012f2b2b2b2b2b2bdd2b2b2bc010c4c62b10c410c431
302b1bb10602435458402301100318262728076f097f0902090c03071806
1f01110c0d0d0655110410100655111fb8fffab40d0d06551fb8ffeab40f
0f06551fb8ffeab7101006551f1f2a291112392f2b2b2bdd2b2bc010c400
2f3fcdcd5d3fddcd1112393931301b406f2002200f3202320f4002400f82
0407402a015f2a011f291e18272211291e17862327272041261e2744000a
0b2a111420100104188009010939100c010c590303000718170a5f060140
0601062e1f2a012a0011241f1f1f2001802090200200201020b020c020d0
2005206029a66e182b4e10f45d71723c4d10fd3c1072e47172003f3c3f3c
10ed72ed5d11173901111239390010f5edfc01f52b2b3130017271005d59
590115363332161514062322262322070607111417161633152135323736
373635113426262322072725014c73793748342423571512152d30130d42
3efe2b4622190a050d231a1f270a011503afcece432c27364514295efe49
4c271b24242416102311500163a03d1c0f247000>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 11644 21 <00010064ffe402d503af00310434b1020243545840273340131302553340
0b0b02550201181010025501180f0f0255010f1b1a08270c0b0b02552721
0fb8ffe0b4101002550fb8fff440320f0f02550f310708270f2104122b05
017905016c050105252f0101012a0719771e01631e011e25201a01601a70
1a021a120b003fc45d5ded5d5d2f3fc45ded5d5d5d1217393f012f2b2bcd
2f2bcdd4cd10d42b2bcd31302b2b1bb106024354584032210f2708042a16
1e122e05022a3107601a701a021a19124b05016b057b050205252a07441e
01641e741e021e25120b01210fb8fff2401a0d0d06550f0f33321a080e0d
0d06550827120d0d0655272733321112392f2bcd2bc41112392f2bcdc400
3fed5d5d3fed5d5d10c4c45d3f10c4123911123912173931301b4029092c
192c0212122e400b392c280b391814590c5a269b109424050a070a280a29
603370338033060f33b8012040870d5d36cb0dcb0ec424c425d723d624d9
2ce604e623e624e92c0b123f2c5d2c6e2d7d2c8f018f028f038015801a80
1b801c892d8f2e0d0f010f020a03090c061c0a2cc822c923081c03161412
1c161d19291b2c9909990a9b20932393240b122b0d282c4a2c4f335f3378
29782c860ea823af33e803e61c0c2908311e00bd021e011f012f010201b8
012bb200bd2eb8011a40112a181e19bd1b1e1a1f1a01101a201a021ab801
2bb219bd16b8011a4022121224230d0b040f2724230d0b04051e01c7002e
2f2a31000005252a071a7e191918b803464014162f1e25120b02cc120101
12cf21df21ef210321b80314400b700f01600f700f900f030fb801364019
271a192e1f0801082c9f270160277027802703202730270227ba01200032
0120b14b182b4e10f45d71724ded72f43c10fd5d71fd5d4358b2ff21015d
59392f435c58b2ff01015d59ed003fede4f43c10ed3fed3c103c10e410ed
1112173901111217394358400a242323240d0b140d0d0b870e2e2b0e7d10
c459180010ecf4ed5d720110edf4ed0010ecf4ed5d0110edf4edb1060243
5458b42e20090d34002b5931304379401c28291f20101106071f11211c01
0629081c0020101e1c000728051c01002b2b012b2b81818181015d435840
09fb07f610f611fb28045d5901720071005d435840199f019f029f039f0b
9a0d9015901a901b901c992297239f2d0c5d595d2b017100722b2b435840
0b2f232f248b2c9b249b2c055d59435c584011282019390928193901400a
3902400a391bb8ffc0b20a391ab8ffc040190a392e400a392c400a392c40
09390c101e123f0e201e123f0eb8fff0b21b390eb8fff0b2193924b8ffe8
b2133923b8ffe8b213390cb8ffe8b613392c1813391bb8ffc0b212391ab8
ffc0400f123901401239024012392c20123924b8fff0400f0f392c180f39
03100d392e400d3923b8fff040120d390c100d392c200d392c1811392c18
1139002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b012b2b59005d59590111232626232206151417161717161514062322
272623220723113316163332363534262427263534363332171633323637
02902126775c4656201f5f92cbbd75546c2115170d21211c9e62455761fe
de2d2d9b7b364d331110120c03affec8936a4a2d3828292e4763a27d991e
0a1a01478c8e5139455e903a39577198170f0e18>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 12864 22 <00010014fff1023c04c1001b01fdb1020243545840251d40121302551d40
101002550b0c18121202550c15130105131812120255130e1313025513b8
fff8b40f0f025513b8fff4b40d0d025513b8fff0400c10100255130b082c
0f161404b8011bb2000106003fcdfdd0cd2fedc4012f2b2b2b2b2bddc010
c62f2bcd31302b2b1bb106024354584019170c10100655160c1010065515
0c10100655160c101006551bb8ffe8b4101006551ab8ffe8b41010065519
b8ffe8401410100655700b010b0f1b01156914014914011404b8011b401c
0106082c0f0b1b0105021010065505080f0f0655050c0d0d06550513b8ff
eeb41010065513b8fff0b40f0f065513b8fffab70d0d065513131d1c1112
392f2b2b2bdd2b2b2bd0cd003fed3ffdd05d5dc010cd10c45d3130012b2b
2b2b2b002b2b1bb9000dffe840410c395f015f02023f1d99119919bf15bf
16b819e819079f1d01891a014f0c4f0d5f0c5f0df5180506181518271803
161518191a030118191a03141ba00103153004b8011b401c010330020201
060c35082c0f0b16cf15df15ef15031565141bcc000bb801ec402c200c01
0c2e2f1db01d021d000101040405241450130180130100131013b013c013
d013e0130613601cab89182b10f65d71723cfd3c103c103c105df45ded10
ed10f45d3c003ffde43f3c10ed10edfd3c10e40111173900111739123931
3000715d0171725d00722b59590111331523111416333236373306062322
2626351123353636373637014ad6d63328213e11272380442e582a913773
2d172904c1fed346fdae593e29286263335f63026821166948266500>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 13462 23 <00010002ffe403fd039400250230b1020243545840162740121202550801
080d0d0255010b20281212025520b8fffc400b0f0f0255201e0d0d025520
b8ffe4401310100255201a080d0d02551a121c1212025512b8fff8b40f0f
025512b8fffab40d0d025512b8fff4b5101002551224ba03e2001703e240
0e1825060b200e18061d2c0e0b0708b8ffc0b509100255080a002fdd2bcd
3fed3f1239393f10edec012f2b2b2b2bcd2b2f2b2b2b2bc0dd2bc431302b
1bb1060243545840570740086008700803080a0b200b180e242517182506
18061d2c0e0b0b010810100655010a0f0f0655010c0d0d065501201a040f
0f06551a04101006551a0a0d0d06551a1208082620080f0f065520060d0d
065520202612b8fff2b41010065512b8fff6b40f0f065512b8fff6b70d0d
0655121227261112392f2b2b2b11392f2b2b11392f10cd2b2b2b10cd2b2b
2bc0003fed3f3f10cd10cd111239393fdd5dcd31301b40350127600d5d36
202760277027b02704340b371f3a20481f4820051a08134f1e182723214f
1e25272308270141071e0844200b251d08b8014540130a00252519191806
1d2c0e0e0a0b0a0b0b2120b80167400e00b001010f0170019f01cf010401
b802bd402512191a241212501390130280139013b01303001310132013b0
13c013d01306136026c27f182b4e10f45d71723c4d10fd3c10fd5d713cfd
3c3c103c003f3c10ed3f3c103c103c10ed11123939f5edfc01f52b2b3130
437940101b1c0f111c0f1a1c0010111b101d1c002b01103c2b8181005d01
5d2b59590111141616333237170523350606232226263511342626073521
11141633323637113426273503630f21161f270efeee2d767c454d712c1c
37480141593f2b6d4b395a0394fdd59f471c112371c28042598c80019941
321b0125fd9b8050364c02074e370225>NWXQMX+TimesNewRomanPSMT AddT42Char 
1 0 0 <0002011c0000051c050000030007004db10201bb02be0006000702bfb200
0504b802beb403000a0704b802beb5010019080605bf02be000200030129
0009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>NWXQMX+TimesNewRomanPSMT AddT42Char 
NWXQMX+TimesNewRomanPSMT /CharStrings get begin
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/A 5 def
/C 6 def
/E 7 def
/F 8 def
/a 9 def
/b 10 def
/c 11 def
/d 12 def
/e 13 def
/h 14 def
/i 15 def
/l 16 def
/m 17 def
/n 18 def
/o 19 def
/r 20 def
/s 21 def
/t 22 def
/u 23 def
end
NWXQMX+TimesNewRomanPSMT /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/YLRXQW+TimesNewRomanPSMT /NWXQMX+TimesNewRomanPSMT findfont ct_VMDictPut/YLRXQW+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A /.notdef /C /.notdef /E /F 26{/.notdef}rp /a /b /c /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /u 138{/.notdef}rp]YLRXQW+TimesNewRomanPSMT nfYLRXQW+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf163.794 272.896 mo(At these times, coded \(FEC\) bits )[12.9996 5.00041 4.5 5.0004 9 7.9884 7.00574 7.9884 4.5 5.0004 5.0004 14.0004 7.98842 7.00571 4.5 4.5 7.98843 9 9 7.98837 9 4.5 5.99387 10.0116 10.9942 12.0061 5.99387 4.5 9 5.0004 5.0004 7.00574 0 ]xsh163.794 293.895 mo(are use to select channel states )[7.9884 5.99387 7.9884 4.5 9 7.00574 7.9884 4.5 5.0004 9 4.5 7.00574 7.9884 5.00038 7.98843 7.9884 5.0004 4.5 7.9884 9 7.9884 9 9 7.9884 5.0004 4.5 7.00574 5.0004 7.9884 5.0004 7.9884 7.00574 0 ]xsh527.512 204.218 mo
519.886 204.218 li
524.422 200.278 li
524.392 200.283 li
524.428 200.266 li
524.392 200.283 li
515.454 201.849 li
515.454 196.096 li
517.097 196.096 li
517.097 196.291 li
518.597 196.291 li
518.597 196.096 li
527.512 196.096 li
527.512 204.218 li
527.512 193.096 mo
518.597 193.096 li
518.597 191.791 li
517.847 191.791 li
517.847 190.291 li
518.597 190.291 li
518.597 189.164 li
527.512 189.164 li
527.512 193.096 li
517.097 193.096 mo
515.454 193.096 li
515.454 189.164 li
517.097 189.164 li
517.097 190.291 li
517.847 190.291 li
517.847 191.791 li
517.097 191.791 li
517.097 193.096 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[12.7636 0 0 15.7091 515.127 335.454 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 39 
/H 48 
/M[39 0 0 -48 0 48 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcP'9klJ$hciEqDliPH4ZiL(+rW;BflN!=QrW3$#rr`9(r<;p"q?DcVquH]s#Qb)1
"9eu7#RKi)V?#NSrW*B.!sAc4#RLhG$k3[8%`8:a!"K#1!WrQ0#RUtL%hTEf'CZ^o!2ff.!<E6("9o,=
%1j-e(E",1)t=pH!/^a]!<E6)"UGJG#n[mh*$-4H,:"Q*-(=o$!"o;6!sJo:%1s?p+!W*].kN>*0(Ua+
!71]Z!<E6("pbVK'cS8A.P<J52E*TTo/Y>$ZN(U=!<WH0$4[^e+!rNn2EEuc5XFs-nc4sU'*/+9":#;G
'c\GK0fV<_77^!B9(P];!;HO-!<N?,#Rh:]+"&^"5!qk7:Jando2DakgAhlf!WrT4%2'O%.Pa%O852u]
<``Dp=ip`Y!##A7"9f)A',r/I2*FE&;-$h(>[6l+k5_1U'*/.;"pkbR)^I!o5=eRL=^59?@.n%.@>=g`
!<Ni9"pthS*$m3s5tOmR>@(]G@e4*(!9O7p!<NB.$4dgj,qh8E8l8Yp?X[DRo45T9aT)tT!X&]7%i$'1
00)<j;-."0@:Ea<AD@0d!##A7"9o2D'HADO3'g/5<a/m<@:Jh<q#KCSXoK+9!X&]6%MTm./iQ$d:K:P&
?=.+3@J9ba!"K#2"9o/B',r/I2*OK';?U'(>?kJ*?BkN^!##A7"9f)@&fDiB1HRrq:/b.o=BY6!Z2iGU
'*/.:"UGMK(`t+Z2a0W$9i+\b;tEu7!4`(B!<N?,#7D(Y*$d$i3Bff"8P2YH9^DbL!##A6!sAi9%MK^&
-S7,54$Q"t6UU`=q*^)?rW!Q3!<N?-#n.C])^-OZ0/GLG3B?XkVZ>WT&-2h7"U>AE&f2N1,UY&n/hc`K
_uR[T%fl_5"9o,>%MBNp*?QIN-2o7_-fG'&!"T)2!WrQ0#R_+S',DE')]\hto,dl2L]@SZ!<N?+"pYD@
$k<g]',:B[o+mhrl2^ea$N^D5"pYGA$OdIS%e(">!6bHB!=8f0"9eu7#7(VBmg@VGXoSG%"p+i."9\l3
m0<.^O9#4[rW<$#rWMcpOT=kNquQ*bXoQiLkQ/j,WrVYjkQ$27JcLB&JcMYJJ,~>

%%EndBinary
grestore
np
550.145 204.218 mo
527.512 204.218 li
527.512 196.096 li
550.145 196.096 li
550.145 204.218 li
550.145 193.096 mo
527.512 193.096 li
527.512 189.164 li
550.145 189.164 li
550.145 193.096 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[23.2364 0 0 15.7091 527.236 335.454 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 71 
/H 48 
/M[71 0 0 -48 0 48 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 71 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 71 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 71 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 71 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&PQ:.Qg]=qc!<E`0)Z^`]pAiA:!!`B0!=AqF!!*60rWrT1"8W#B
!rW-#!t+r<!!gdLo`,!s2uQt^<[bfb!<No3)#t3'!9O7^!Y##1!='#/!6bQE!XAujGB\4RBHujDf`2<Z
%jY;7Huaai42_+*!<ioM3@c@-1)0TcaT)SN$O$M3!<<*.q>ekHr<33)"pbV[ENl.'W2D\p!!rlg??^us
11>esdK&k=#m(_Y.5MbP*&85H!!r]8!s&B,%0QY>q>f^ckQq\(#R:SE4+Ej%@PWA03lD"+%She*AM+9a
KLZa`nc72?$O.A+.NB''(GZg5"3(<K"U>#.":PA=!"0#6quG(R&.K'W$ORJWZDE=,$!aH*&-p;WrW!<9
9mf\`&ID0gD,_q'!"/uH/J\g#!uEp?(D#-umf3_!#64u:"p5/3!='#1!72Dk'+tlg%M`ZZALJ/t>d'B)
,Nf'd!"Ar=+B<YA!!!3fF+Ag'a8cYM"q)8!&HDe5'dbRe'D;FS!"9#;"T\u2!!3N/!!!E)!7;bq)]BS2
(`FuNVEY:h$:k8gWN&,&!"B2g<c*"8!!!$=11,SoblIYA%0I1Y,:a?+!!*H>)_VlG!!NH4"9AN1rW!'-
$j-J;quG\%ng+no,U4HT,>*ZdW'L^o#8T4IW]f2=!<EW+&HN@Fo`,.+7s]2^/,]GM#>9V0quGaW!<E?#
#6=u0o`,.!'Jh3Z&cD\3!Z*L'h#IEYqZ[')!qcNq"U4r,!<W`.!!<9/!"8])j"CEg2Z#Q:3ALFbr[nd7
/1N&!G.F`;2@Bcp":AA54l-/>%PR]I!]_%sp&G7+7;tgF&cD\3#>0P/h>dQ[&,Hq>$M=B&"VW=#%0lb2
!s08l'B0#j!!*3/qZR!+#PA'#"U4r2$O-J/!s/c/$iC"b3<;H^qi(W%8c1UJ3"\),1GCV3[<"AN%LNFD
$X9VpnGr%Y%06hY8nD7/='9$6.LcOT!!<]uBJB;`!s_GL45^)J!<`fG.NfcR*@;a8"9J5s!sK>`&GlG1
!Z*L'!8mhZ":,&/r;d$$!=8l0pAb:!"p,20!!<9/!"8])j['DF878:2]<nrU_7"5R7JoIT5sRXs3=S$!
YYH2S&.AgJ$X9VphuF2q.n!K>1a4+p9O(.E'__S0%7+SZqZ$^'8qB(^!!i]:'-J;,%1NgN(F0_,#kn<$
"VN$kqZ$^"(G?H[!"B&:!s&E-#mgk<!!3E1pAb:!"p,20!!<9/!"8])lV%+J%9.VK]Xru6BmR&$X+jjX
9E%Nq84Q'56%cI@+;ke$#mLfBW]oYI!!N-'%K[V==\LLQ#6tDW8lnh;q$.'/!uF@8)Z9sI$475*KLZOY
rX/K%p&G*q%f6qP&H`CU-7'ZA'GM)o-7BcA!tG2C$PaBj"pkqi%iQB,*<$r]'JgO0&cNj?!!***q[<Q5
!!`T)!!<61$jHV1!s&Z.#Pni5!XAi.!=ob@&HNLU"9AK2":4u>mo06cqbnqD@rABndCt<5;f]+jcFnR4
=Ar*q;,9q\<E,*iE[2V=%giOSFK8+I$g[io#Trpj#8n"8;F:m'+oWen%1b0n6m3$er[/@,-mf-a='Q+g
1c@9Q3B.h3Ce"s647<.M(J=R:&PWrP*[F![BP(ji?r8<o'G3J,Ae\lkBjhqn*@O4-MN<pdR$9Bd+VdHF
SF6FY%Q=2X"u$#Y!<<`m!(d)_"umk.!!3-@rCdl!:.,*b!<<gDAnl1$EG,=P!<O2=FR<6.>Ub'!X23?=
\9hIcCTu1:aKhY(>[(E9=BAn*S$g/2.O#fH%h'GVY`Wm=rWV`j!=L4P.0h@Q%OkLV.1H)&"W\"I<'Cch
.2"*U%Urd9&2lL/4?Yks%X<PR'`LAd!!+0RrIbE1M.S+\*?SJ^KEZ<>*?c\/rIbi=Ljq!'+sLO#[_0Js
ai@%'0K*hJci*q8!!*d-rGD[UF?]X'!&FFh##P@$!!"NerbhjWEFJeG$nd^1SYE![UC[G+!%\&NmTfg$
rGi-eKu;Qe`Q#1[EX%]M_TL?BErL%cDf16VaM,0_6p*=40.SD#Y+Mc(X8X:2!!*34r=oPO#oc<)/Ii<g
'a5?V-pg<'r=ot]()/-#4<+hN*ZlLJ+X@:O@=Smf,4>L4$n)!3#;n.`,8^ms-Mo\)/d`%%*#JT4'K7s1
0c;,H$n"V?:Jk%i;]?>g1Eug"mf3@m)>tid+US2L!<rQ?q]uCg!!`N)!WFAZ-71)^!!!0+'/DC&3&s#[
"UkJ5!<,+L@/sd7@0Cttg==(BQABSY@3&s<Mn-s.@:3JM?!D0Q_i8;..NfQ?$O?o%3e4Gali7%e#Q4u5
)aI=r3YqGi%1Y9f,RFMP!!*9<4B3a&!!<EuKK\f)r;Zj!!rW6*$5+I$&IJ13"U,DS$j6V1!!E?/&KVGV
!!<<>1DB'S!!<*%"U>)/!!3B!!!NN/!=&]-rW!'&"p4l4pAb?u$31J7!!!#f@f^.RrFuL_[a3$qFSB8a
Co>.)BOkR\?t!cA]k]be.j5`A$j["=#?Rohli7%q-N,\'3_`-t)@H3=%Lt?l4t@6G!!XT-:K8_Ap](C#
98#Ip!!*64r=/uA*#T4n"SVm*"V2Ue%0lk5!XoVX*Y.oE!s9>q'C5]"":+l."Te]*"pY;*!"B)7!!3B0
!!!'+!s&E/pAb9s$31M6!:OG!D2eFf"gGt`R!<<=A/fB`bdE[T@q&ttU:e0T4Z"Z4(_R5_"To!2W]obL
!>79f8chUE(%hP9$SP4O8L"KA$T2'f8Kmg.!sVDO4mW.L#7p\M!=oG.!"B&?*$?+,!s&N8+s.O.pAb9t
(Gc`s!;QTq"U"W&!<NJu!"B#6!<<-*!s&N-!!!$+pAb9s$31M6!:OG!F/f&U!N^G:A/T6S`m)DWBOthK
c,R#"4u=c5(_R5_"To!2!NJ?M!!*?Bq]>hU$2"9-";N=N:d6EB$T1jB+:n2H!sVDO4mW.K"8W?*#mBo$
$3CGA'HIhs#6YPY!Y5YCpAb9t(Gc`k!!!,s#64l!!"Ar5#6=f+#6k;6!!NZ4pAb9s$31M6!:OCuBQs?+
!I8ASA,TmVAp'-Fbd3LPB:d,1CJR)L.j5`A$j["=#?Rohe,Td_0MYS?,n`78,4tp?#"sY;%g<.'!:0[l
":cFp)@Zr`*"2E>"p5Yt'a=^@f)Q*Z"onW(#R(;2#k\0%!X\o9"T\Z$@GP?3Bq!)d_h;j$^NE4<4>JB/
(_I,]"To!2X%Wa$"P3V[";`LS<'`N<;'P`7#QOi/98[IZ,UCtA#lt>A'-Iu$)&s(X!!WNA3$9(K%bC[`
!<rf1!!E?*!<EK!!!WK3!!*B5$J/T(@;q+6afqJQ^2ch43\`'*(D.#["To!2YDl[-+Q3=n!!`og;H$Oo
80IR*"pRMFKnV`UeGoUR&H3^P*u#+U!!WNA/i5@!("E9b!s\Z(!"&;u!<N]/!<3JX=pnf(_SX.*Zt`&p
2_PXg*Yo:p#6Y,58u/Ph5<mZu#6Peh,pjr_%eTf+!?XC5Kg.fS!<)s!!=AZ5!!Mrp"p#/H)`&3DeGoUN
#Q4o/#mBl#"UPP>!"9;!<:<d)=Cuc#FED4q69@"T,TIO0$3p\8"W0CSX$8h`!!EKtKg.fq!6P9E!Z*X-
'u'_K!Wrc0$k1QX(J@=j76s$o0.7t]'+G6P"9JT)"BMQf5Ks3"!!EKtKg.f:!!E?>1DLY[!9=+_!X\o9
%+I]E6P_sQ4ZYGS.O,rM&I\pK!s/K("BMQf5O/="!!EKtKg.f:!!E?>1DLZ$!6,!A!X\o9%+70I3B/rT
1+k"$*Z5V$$3p_:#6Fo,"BMQf5JI1$#"aM55LBK"!!E?>1DLY>!!E?1!"9:o0_6t70/"q/.4-5[)&3\k
#mLM6!<E0'<i\GL^AnB@8VKM;mf:`8"9KAr'a)2N"9Jo1%0HMVf-gPE(*t4N+W_R>'G1c\#6b22!<E0'
<iegr`W5i8"9qGQBM#r="9KAs*Z*?,lMq%h$31,7e/nT0%3-?,)&F##%h/jN"Tni*!<iH+<j@N]j8ds8
"9h5GLPNVE"9KAm1c4e(bl@bF$iU.U(B"s^'GD)k%h/mQ#6b54!W`<%!!Q&rY5k]>!!E<H5A#eq!;6Bq
!=fhc3PGIq#n$h8famig%1WjW$k!@I#6b54!W`?$!!EBA6A)MU!!3<oN9C8m!!33;3kYLp!=Ai$$JGjd
#mgkB"pG,3!WiB'qZ$[#<O9F?"98E*7uY+]!Wj,uc2d>6!W`W.c3F:Prri?(rrW3$q>^R"<O:K]i;`o^
7>8DT!Wj/oli>H6!W`Z/cNO1KrW<'"q#CI!9WS$j_Z0`=,!EgDq>^O*'>+;G$4G8`qZ?Wqp](?t)aKhl
P5r]*\c@<^irII-ciAXtJcLB&JcLB&JcLB&JcMPGJ,~>

%%EndBinary
grestore
np
550.145 196.096 mo
527.512 196.096 li
518.597 196.096 li
518.597 193.096 li
527.512 193.096 li
550.145 193.096 li
550.145 196.096 li
517.097 196.096 mo
515.454 196.096 li
515.454 193.096 li
517.097 193.096 li
517.097 196.096 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[35.3455 0 0 3.6 515.127 343.636 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 108 
/H 11 
/M[108 0 0 -11 0 11 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 108 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 108 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 108 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 108 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&])]qPcMt9PJcLT,qu</ckQ$27JcO:#YQ*ecS,e-@T`F*P[/\GPJcLB&m/WIP!<7ZOJcN@^aoBWc
[K(mZLB.8PRfDUPJcLB&df?WPk5UtPJcMGDj8ZIcciD&cJcM_Lg]+nca8gelJcPECQ2c@~>

%%EndBinary
grestore
np
517.847 191.791 mo
517.847 191.791 li
517.847 190.291 li
517.847 191.791 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[.981818 0 0 2.29091 517.418 347.891 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 7 
/M[3 0 0 -7 0 7 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^:q=q^:q=q^:q=q^:q=q^:h7o]`~>
<~T:_aJT:_aJT:_aJT:_aJT:V[HSc~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!*'#!<~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
518.597 196.291 mo
517.097 196.291 li
517.097 196.096 li
517.097 193.096 li
517.097 191.791 li
517.847 191.791 li
518.597 191.791 li
518.597 193.096 li
518.597 196.096 li
518.597 196.291 li
518.597 190.291 mo
517.847 190.291 li
517.097 190.291 li
517.097 189.164 li
518.597 189.164 li
518.597 190.291 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[2.29091 0 0 7.85454 516.764 343.309 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 24 
/M[7 0 0 -24 0 24 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
524.392 200.283 mo
524.428 200.266 li
524.392 200.283 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[.981818 0 0 .981818 523.964 339.055 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~TqS0YW2Ql%Xo~>
<~LPLYDN/Wm]OT~>
<~!!!!!!!!!!!!~>
<~-RU8_*Zc(4('~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
516.475 204.218 mo
516.129 204.218 li
516.411 204.084 li
516.475 204.218 li
516.129 204.218 mo
515.454 204.218 li
515.454 203.879 li
516.247 203.74 li
516.411 204.084 li
516.129 204.218 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[1.63636 0 0 .981818 515.127 335.454 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 3 
/M[5 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
516.129 204.218 mo
516.129 204.218 li
516.411 204.084 li
516.129 204.218 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[.981818 0 0 .981818 515.782 335.127 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^:q=q^:q=q^&~>
<~T:_aJT:_aJT)~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
516.837 204.218 mo
516.475 204.218 li
516.411 204.084 li
516.247 203.74 li
517.675 203.49 li
516.837 204.218 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[2.29091 0 0 1.30909 515.782 335.454 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 4 
/M[7 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
519.886 204.218 mo
516.837 204.218 li
517.675 203.49 li
516.247 203.74 li
515.454 203.879 li
515.454 201.849 li
524.392 200.283 li
524.422 200.278 li
519.886 204.218 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[9.49091 0 0 4.58182 515.127 335.454 ]ct
snap_to_device
<<
/T 1
/W 29 
/H 14 
/M[29 0 0 -14 0 14 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8N~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
6 lw
[] 0 dsh
517.847 194.596 mo
543.359 194.596 li
0 0 0 1 cmyk
@
85.2584 205.854 mo
67.0909 205.854 li
67.0909 190.8 li
85.2584 190.8 li
85.2584 194.791 li
73.1869 194.791 li
73.1869 196.291 li
73.1869 197.791 li
85.2584 197.791 li
85.2584 205.854 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[18.9818 0 0 15.7091 66.7636 333.818 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 58 
/H 48 
/M[58 0 0 -48 0 48 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&YlNAVquD<Kb5h>=gB-L;JcOd1rW2s!f`TS$JcPWIrW3$#rr`6'g',%f
OoYI^#6Fu0"9eu7#Q+i-#iH#b!3#tt!=Al1"9eu8#mq%K%-S/n%?:G'!"K#1!WrQ0#RLkJ%hK<c'&=5q
!.k4%!"T)2!WrQ0#RV"P&el)u)&`Dli#CVTJcP-;&-2e5"9o,>%M9Em)]^"D+sPkgb5d.p!!*T3!sJo:
%MBNq*[2mY.P!(,/[YSJ!<*!2!X&]6$kX6o+=/Ki0f(XD2E(Lmj>W\2YlOb(&H`.@$4dgg+=8Wo2E<l`
5<qKs62Em,!5eg9!>,D;#Rh:\*@*-j3'BPq7S$*Bi(E\CJcOI(&ci"7!sT&@&fDf?0K20`84u]RhGN22
JcP6>'EJ49!sT&A'H85H1cn&r9i4ki='+<^aoI.r!s&E(":tbE%i$'0/N,g`9i=tn>$P=j?*jU%!#,G7
!X&`8%i-0400)<i:fUY&?!gt:@-(df!3uS=!<E6)#7D%X*[`X&6;(3X>?tTE@HM%r@Yb$*!#,G7!X&`9
&/H<70fhZq;cm:3@:E^(A+9PN!8[\i!<E6)#7D(Y*[`[(6VLE\>[LoLA)LnP!.k4C!#,G7!X&`9&/H<7
0fhZq;HI(/?t*U'A&SG+!!iT+!X&`9%i-2o-87GH8l8Vm?!^oHi*iehT`>c-!<NB.$4djl,q_/B85E/c
>$PB?pL!2mR/j\r'*/+8"9o2C'H88J2*FB$:fCCs=l<H`>(Zh"!#,G7!WrW5%20X'.Pa"M7nZTS;H-WR
<U9^;!94%n!<E6("UGML(`t(W2*=/n84lQM:#Jdt!.k4H!<*!0!sJr<&/?-..5*P>4[;>$hF53[O9#7\
$3C>8#n@Rb*@!!c"Yqqo3BB7Z4K8CX!"f54!WrT3$P*ph*[2p\/1rV2n1sGfPQ88p&-2h7"9o/@&/5s#
+!MsV-7@XuJcO!p&-2e5!sJo9$kEsc(`F>6*Zj/[lMuM:i;aAh!WrQ/#71bJ&/#Wj'c%SA(Y&M;!;?I'
!<E6("9eu8$4@7P%M'*+&AJ4)!"&`-!WiH,"U52;$2t:f$`O-#!!iT+!WiH+"9eu.#42Zb#Eo.s!<*#u
!r`;U"T/7O!6bH@!S7D8!.k4.!7_+s!.k4@!8.Ca!.k3&!.k3&!.k3&!29ID~>

%%EndBinary
grestore
np
101.782 205.854 mo
85.2584 205.854 li
85.2584 197.791 li
101.782 197.791 li
101.782 205.854 li
101.782 194.791 mo
94.2636 194.791 li
94.2636 191.791 li
93.5137 191.791 li
93.5137 190.8 li
101.782 190.8 li
101.782 194.791 li
92.7636 194.791 mo
85.2584 194.791 li
85.2584 190.8 li
93.5137 190.8 li
93.5137 191.791 li
92.7636 191.791 li
92.7636 194.791 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[17.0182 0 0 15.7091 85.0909 333.818 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 52 
/H 48 
/M[52 0 0 -48 0 48 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 52 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 52 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 52 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 52 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcO!ph>u=1JcPWIiWAoVYQ1X&huioZrrN-#KE0U(i<B2`rr`9&rW1RML&h/Y
lO!Fo#6tJ<"U"o0!r`5"!42ad%13LP$OR1G#6b54!r`5t!.k41!9=e%&eYcf%h/mR#R1G7!r`5G!0I9P
)tk6L)@dW%()7Jo%1<FG"9S]+!SdY]&1&eV.kE8(*X1-q!<iu4&H37B$Neo[!X/o=r!WT4!VHHR,7btK
5=S",5!1hN%L*%;!<M]jli7>:;e0KRC27]W&_@!h%2^32+X/-U('`@j!=8l*!W`T3o`4)*&1f>(Q`@$_
VPKqp(^C3H!Wh-X%1XLGB4F_19jN$S3["_"!9aCl"Ubth+r1n/)_N0G%0G8a%0[%B!!*-*"p+c*$46k/
!9Z9T2E!cuI^ZGAJ:3ikPtN5-"9JW*!T3qe+A6'T8f\KV1hq;S9+otZ%1Esp.2<3q#8&.2,T$a^!9*tf
#Qb#,!XJu7$3:,-$3p5)k<TeI5[:%o_j*nT10:E\V-Xo@!s/K(l2Uhi'`/UW$l(d-9caQ\(`<km6$?d#
#9`mb!>lF;!!*fjq`#31#n\=10f)*[5s71g2]WMA6VdPT!BCPV!!*NQq^)@U":"i*$4874/0"]k!!*H-
!%n(*!@%[/8ebfSMnmWeY=UN$Btq[#PXe(K!W`?$!!*m!mf3>&qC<-d3`]Q(&MZ$q1H@3*?@6c..f2F2
'fbdbr;ZjWJGY3<:`LN&/pj"TSYNBqFuV'"1T&78ao9E`M_"5r!@DCTE=jMt!<<*rIXm!(OchX'!!*(?
rh]Uk!DWX_;#ju#AI>]U^rb07EEQ+/:'kXI_6K]4<?E8'rZ)#dU[J0`%jq6&'H[em:Ja:],qCN!0JYI!
0k>\j*]s9^!=r9#!!+QYrG*0cB/q:X&KGA(G^Y1"NE@#=/i%mMUSIga!GF=Y!!+$0rD=8%57%;j!s(kn
>@(cOC+TDd!!#T;r-SMu!:Eqh>Q%hCKY-!e^Sn/B:eF):1Fm6rP-1ui$OI.=#Q]=Xmf3@j#Q=u6#R2qQ
<]_*!rX&T3rX/i83H7h"q@*F7mf3@p(B#'`%j<2F&.&LU)B0Y:*Zl.$'I=Y5q]u7T+n#C3"V(D?r;[E3
#6>;F&.fEd'+G!M!WWH@(B#$K!9mc)REX1,Vf$3J:.RW//g_nt8"Y`"!s&H%!!,`]mf3@r)Z:TY1/LY-
,R3uC$Ron(3ZSD)!":,AFRT83!!E].$3^q\)A3DZpAbR3,97F*!rr<*%2L;Z!!!0"#6b82!<WT/pAbR/
!!*H6!WW3'$O["(?iatarHJjBahk03@9Q]/8jbTm-ls0424Kas)[6<C#96L/mf3A.5Q*qQ9N3te#m'c#
$RokAF@m8J!$><gL@5*C$5*4N"<&Eo#m9l$$P+F:,o6ge!"9bp2"gqG!!*?,quHm"!X8f$!"0/7!!3K4
!!!<0!<DRt!IV<R^Dk/<X*&#^>Zaou6p!+O*u?f(XIWN+!<=*TSuqG]!>dQh2ZY*,qZ-Kn$QDWKJ87:g
"t4;9B^Yp$$2P/5$Nfu$$ORXi0-Cu<!tQP)*q'(0"pFf)!=&]!!"0&>!<<-.#m(J8!!N40oO@oHU&1o/
L1Xk%?!1-$76<7R*u?;3P,s^/(^2.GVM+C<!<iu1%fm"<o`,@('K^DeF%[5rChPNk!!!)s"T\`,o`,@$
#SJL<-5Qpu+W_9b!!!)s"TS\t!"/i5$ip>/$3pq>!Y"O.!GHBJE#<8!@UNJE<)#eD1+=:]()K?.XIE?(
,ERc_0%U(0*(k!tC->"/@3*r"#n.Um0HLlB.3&f_!:9am#mp\5!=TA;":=7$).I&`?X-]39gq,u.3B?;
$QWH4X-#S>RsYt&!!3?>49fkXF*<:H*S18t!XKGf0I8/)*"CL"#m(>?!!!$#!!EVu@J=1J?sm>I>?=]q
6om%N*u>Ir$kkmoX.#Q\Hkk03!?Fi3?NEM/g&V$N!=K_B)Z^`\eGoUV$N1&-$jYs&'OG*O>?Fj$8O>Ej
-QX$7$3gVO=aL'm!D![o!8dbW"rI4W!>5Oc!!*0-r<iW2!T3tO!!*-,r<WK.!TmQ!=]ng*;+sGD2D$3p
'b:WU":,PRrY,AC"N^Y7!9[>^<"i50;,9kV69?tQ,9%=,#mLJ5!<JJdb5g^#'MV:q91VK<4>ni?+;b_#
#R(;3!<M?`JcPTHj[BeM6U<mt2D?U**>T1p#R(;3!<K_2VuYsB$9L=13&WQG.O6&Q#SR[T#6Y)0!<J)Y
ec=ee&MYsm/Li+m*Z5\($j["=!W`>V!/1FP.-Duh-RL)_*ul+3&If$O"9S]+X8oR,j<"mR*?5t7()%5g
$3p_:!W`?#!.k40!9=q,()7Ms&eGN]#mUV:!s/K(cN'%,o+:F'%1`pY%1<LK#6b54!W`=p!58Ho$iUJ?
#m^eA"U"o0!W`>s!.k43!94=`"pbA9"9S`-!W`>D!0[EP"RuWo"9/H%!La#)!8[eT!U9Z:!:KpB!P/9&
!9F7Z!J^Z,!.k3&!.k3&!2BOE~>

%%EndBinary
grestore
np
101.782 197.791 mo
85.2584 197.791 li
73.1869 197.791 li
73.1869 196.291 li
73.1869 194.791 li
85.2584 194.791 li
92.7636 194.791 li
92.7636 196.291 li
94.2636 196.291 li
94.2636 194.791 li
101.782 194.791 li
101.782 197.791 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[29.1273 0 0 3.6 72.9818 342 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 89 
/H 11 
/M[89 0 0 -11 0 11 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 89 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 89 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 89 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 89 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&oDkiikQ$27NWAbP[/\GPJcM\Kh#GY![K(mZ^];:Pk5UtPJcOI(WrN,!KE-T(nc5Wgl2ZD9Mu`VP
ZN&;PJcMVIhZ(e!\,_*\^&Z.PjSthPJcOC&XT/8!L&cf*n,TEeJ,~>

%%EndBinary
grestore
np
93.5137 191.791 mo
93.5137 191.791 li
93.5137 190.8 li
93.5137 191.791 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[.981818 0 0 1.63636 93.2727 347.891 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 5 
/M[3 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^:q=q^:q=q^:q=q^:q;~>
<~T:_aJT:_aJT:_aJT:__~>
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
94.2636 196.291 mo
92.7636 196.291 li
92.7636 194.791 li
92.7636 191.791 li
93.5137 191.791 li
94.2636 191.791 li
94.2636 194.791 li
94.2636 196.291 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 540 ]ct
[2.29091 0 0 5.23636 92.2909 343.309 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 16 
/M[7 0 0 -16 0 16 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
69.4179 196.291 mo
94.9298 196.291 li
0 0 0 1 cmyk
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/YLRXQW+TimesNewRomanPSMT*1 uf/YLRXQW+TimesNewRomanPSMT uf/NWXQMX+TimesNewRomanPSMT uf/YLRXQV+TimesNewRomanPS-ItalicMT*1 uf/YLRXQV+TimesNewRomanPS-ItalicMT uf/UZTAAA+TimesNewRomanPS-ItalicMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
